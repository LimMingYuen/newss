{"version":3,"file":"ifx-ufe.mjs","sources":["../../../projects/ifx-ufe/src/lib/models/UfeCommand.ts","../../../projects/ifx-ufe/src/lib/models/notification-type.ts","../../../projects/ifx-ufe/src/lib/components/notification/notification.component.ts","../../../projects/ifx-ufe/src/lib/components/notification/notification.component.html","../../../projects/ifx-ufe/src/lib/services/command-handler-notification.service.ts","../../../projects/ifx-ufe/src/lib/models/AuthToken.ts","../../../projects/ifx-ufe/src/lib/models/AuthStatus.ts","../../../projects/ifx-ufe/src/lib/models/SubscriberData.ts","../../../projects/ifx-ufe/src/lib/shared/jwt/invalid-token-error.ts","../../../projects/ifx-ufe/src/lib/shared/jwt/jwt-decoder.ts","../../../projects/ifx-ufe/src/environments/environment.ts","../../../projects/ifx-ufe/src/lib/shared/logging/logging-config.interface.ts","../../../projects/ifx-ufe/src/lib/shared/logging/ifx-ufe-console-logger.ts","../../../projects/ifx-ufe/src/lib/shared/logging/ifx-ufe-logger.service.ts","../../../projects/ifx-ufe/src/lib/shared/type-guards/root-injector.guard.ts","../../../projects/ifx-ufe/src/lib/shared/helpers/common.helpers.ts","../../../projects/ifx-ufe/src/lib/stores/ufe-environment.store.ts","../../../projects/ifx-ufe/src/lib/services/environment-manager.service.ts","../../../projects/ifx-ufe/src/lib/shared/web-resource-locator/models/wrl-command-argument.ts","../../../projects/ifx-ufe/src/lib/services/shell-communicator.service.ts","../../../projects/ifx-ufe/src/lib/services/authentication.service.ts","../../../projects/ifx-ufe/src/lib/services/ipc.service.ts","../../../projects/ifx-ufe/src/lib/services/url-capture.service.ts","../../../projects/ifx-ufe/src/lib/models/AuthMode.enum.ts","../../../projects/ifx-ufe/src/lib/shared/helpers/ifx-ufe-type.guards.ts","../../../projects/ifx-ufe/src/lib/models/helpItem.ts","../../../projects/ifx-ufe/src/lib/services/data-communication.service.ts","../../../projects/ifx-ufe/src/lib/command-handler/ufe-command-processor.service.ts","../../../projects/ifx-ufe/src/lib/command-handler/app-command-handler.service.ts","../../../projects/ifx-ufe/src/lib/models/WindowRefTuple.ts","../../../projects/ifx-ufe/src/lib/models/UfeDialogConfig.ts","../../../projects/ifx-ufe/src/lib/models/AppDescription.ts","../../../projects/ifx-ufe/src/lib/shared/front-end-discovery/stores/shell-state.store.ts","../../../projects/ifx-ufe/src/lib/services/peer-communicator.service.ts","../../../projects/ifx-ufe/src/lib/pipes/ufe-safe-url/ufe-safe-url.pipe.ts","../../../projects/ifx-ufe/src/lib/components/ufe-dialog/ufe-dialog.component.ts","../../../projects/ifx-ufe/src/lib/components/ufe-dialog/ufe-dialog.component.html","../../../projects/ifx-ufe/src/lib/models/AppLink.ts","../../../projects/ifx-ufe/src/lib/shared/web-resource-locator/services/active-web-resouce-storage.service.ts","../../../projects/ifx-ufe/src/lib/shared/web-resource-locator/models/wrl-application-instance.ts","../../../projects/ifx-ufe/src/lib/shared/web-resource-locator/stores/wrl-state.store.ts","../../../projects/ifx-ufe/src/lib/shared/web-resource-locator/services/wrl-location-transparent-uri-resolver.service.ts","../../../projects/ifx-ufe/src/lib/shared/web-resource-locator/services/wrl-web-resources-resolver.service.ts","../../../projects/ifx-ufe/src/lib/shared/web-resource-locator/services/wrl-application-instance-manager.service.ts","../../../projects/ifx-ufe/src/lib/shared/web-resource-locator/services/web-resource.service.ts","../../../projects/ifx-ufe/src/lib/shared/front-end-discovery/front-end-discovery.service.ts","../../../projects/ifx-ufe/src/lib/command-handler/peer-command-handler.service.ts","../../../projects/ifx-ufe/src/lib/shared/command-observer/command-observer.service.ts","../../../projects/ifx-ufe/src/lib/directives/message-listener.directive.ts","../../../projects/ifx-ufe/src/lib/components/ufe-header/ifx-logo.ts","../../../projects/ifx-ufe/src/lib/stores/authentication-details.store.ts","../../../projects/ifx-ufe/src/lib/components/wrl-version-selection/wrl-version-selection.component.ts","../../../projects/ifx-ufe/src/lib/components/wrl-version-selection/wrl-version-selection.component.html","../../../projects/ifx-ufe/src/lib/components/jwt-counter/jwt-counter.component.ts","../../../projects/ifx-ufe/src/lib/components/jwt-counter/jwt-counter.component.html","../../../projects/ifx-ufe/src/lib/components/ufe-auth/ufe-auth.component.ts","../../../projects/ifx-ufe/src/lib/components/ufe-auth/ufe-auth.component.html","../../../projects/ifx-ufe/src/lib/components/ifx-ufe-auth-refresh/ifx-ufe-auth-refresh.component.ts","../../../projects/ifx-ufe/src/lib/components/ifx-ufe-auth-refresh/ifx-ufe-auth-refresh.component.html","../../../projects/ifx-ufe/src/lib/components/ufe-header/ufe-header.component.ts","../../../projects/ifx-ufe/src/lib/components/ufe-header/ufe-header.component.html","../../../projects/ifx-ufe/src/lib/models/fauxMatDialogRef.ts","../../../projects/ifx-ufe/src/lib/models/DialogDataPlaceholder.ts","../../../projects/ifx-ufe/src/lib/subModules/auth.module.ts","../../../projects/ifx-ufe/src/lib/components/login/login.component.ts","../../../projects/ifx-ufe/src/lib/components/login/login.component.html","../../../projects/ifx-ufe/src/lib/components/silent-refresh/silent-refresh.component.ts","../../../projects/ifx-ufe/src/lib/components/silent-refresh/silent-refresh.component.html","../../../projects/ifx-ufe/src/lib/shared/device/device.service.ts","../../../projects/ifx-ufe/src/lib/components/login-type-selector/login-logo.ts","../../../projects/ifx-ufe/src/lib/components/login-type-selector/login-type-selector.component.ts","../../../projects/ifx-ufe/src/lib/components/login-type-selector/login-type-selector.component.html","../../../projects/ifx-ufe/src/lib/components/logout/logout.component.ts","../../../projects/ifx-ufe/src/lib/components/logout/logout.component.html","../../../projects/ifx-ufe/src/lib/components/ufe-unauthorized/ufe-unauthorized.component.ts","../../../projects/ifx-ufe/src/lib/components/ufe-unauthorized/ufe-unauthorized.component.html","../../../projects/ifx-ufe/src/lib/ifx-ufe.module.ts","../../../projects/ifx-ufe/src/lib/services/style-sheet-and-link-capture.service.ts","../../../projects/ifx-ufe/src/lib/services/ufe-dialog-window.service.ts","../../../projects/ifx-ufe/src/lib/shared/helpers/string.helper.ts","../../../projects/ifx-ufe/src/lib/services/auth-user-information.service.ts","../../../projects/ifx-ufe/src/lib/services/ufe-environment.service.ts","../../../projects/ifx-ufe/src/lib/components/abstract-shell-view/abstract-shell-view.ts","../../../projects/ifx-ufe/src/lib/components/abstract-shell/abstract-shell.ts","../../../projects/ifx-ufe/src/lib/shared/auth/services/auth-redirect.service.ts","../../../projects/ifx-ufe/src/lib/shared/auth/guards/ifx-ufe-auth.guard.ts","../../../projects/ifx-ufe/src/lib/shared/auth/guards/ifx-ufe-claims-auth.guard.ts","../../../projects/ifx-ufe/src/lib/components/show-command-messages/show-command-messages.component.ts","../../../projects/ifx-ufe/src/lib/components/show-command-messages/show-command-messages.component.html","../../../projects/ifx-ufe/src/public-api.ts","../../../projects/ifx-ufe/src/ifx-ufe.ts"],"sourcesContent":["/**\r\n * UfeCommand provides a structured method for communicating between the shell and the enclosed uFEs.\r\n */\r\nexport class UfeCommand {\r\n  sender: string;\r\n  command: string;\r\n  params: any[] = [];\r\n\r\n  constructor(snd: string = '', cmd: string = '', par: any[] = []) {\r\n    this.sender = snd;\r\n    this.command = cmd;\r\n    this.params = par;\r\n  }\r\n}\r\n","export enum NotificationType {\r\n  Info = 'info',\r\n  Success = 'success',\r\n  Error = 'error',\r\n  Warning = 'warning',\r\n}\r\n","import { Component, inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { NotificationModel } from '../../models/notification.model';\r\nimport { NotificationType } from '../../models/notification-type';\r\nimport { MatIcon } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'ifx-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.scss'],\r\n  imports: [MatIcon],\r\n})\r\nexport class NotificationComponent {\r\n  private snackBarRef = inject<MatSnackBarRef<NotificationComponent>>(MatSnackBarRef);\r\n  notification = inject<NotificationModel>(MAT_SNACK_BAR_DATA);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {}\r\n\r\n  close(): void {\r\n    this.snackBarRef.dismiss();\r\n  }\r\n\r\n  get hasMessage(): boolean {\r\n    const message = this.notification.message;\r\n    return !!message && !!message.length;\r\n  }\r\n\r\n  get hasDetails(): boolean {\r\n    const details = this.notification.details;\r\n    return !!details && !!details.length;\r\n  }\r\n\r\n  get icon(): string {\r\n    switch (this.notification.notificationType) {\r\n      default:\r\n      case NotificationType.Info:\r\n        return 'info_outline';\r\n      case NotificationType.Success:\r\n        return 'check_circle_outline';\r\n      case NotificationType.Warning:\r\n        return 'error_outline';\r\n      case NotificationType.Error:\r\n        return 'warning_amber';\r\n    }\r\n  }\r\n}\r\n","<div class=\"notification\">\r\n  <div class=\"icon\">\r\n    <mat-icon>{{ icon }}</mat-icon>\r\n  </div>\r\n  <div class=\"content\">\r\n    <div class=\"title\">{{ notification.title }}</div>\r\n    @if (hasMessage) {\r\n      <div class=\"message\">\r\n        {{ notification.message }}\r\n      </div>\r\n    }\r\n    @if (hasDetails) {\r\n      <div class=\"details\">\r\n        <ul>\r\n          @for (detail of notification.details; track detail) {\r\n            <li>{{ detail }}</li>\r\n          }\r\n        </ul>\r\n      </div>\r\n    }\r\n  </div>\r\n  <div class=\"close\">\r\n    <mat-icon (click)=\"close()\">close</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NotificationComponent } from '../components/notification/notification.component';\r\nimport { NotificationModel } from '../models/notification.model';\r\nimport { NotificationType } from '../models/notification-type';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommandHandlerNotificationService {\r\n  private snackbar = inject(MatSnackBar);\r\n\r\n  readonly defaultDuration = 5000;\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {}\r\n\r\n  public showNotification(data: NotificationModel): void {\r\n    const isErrorType = data.notificationType === NotificationType.Error;\r\n    const duration = isErrorType ? undefined : this.defaultDuration;\r\n    const panelClass = `notification-${data.notificationType}`;\r\n\r\n    this.snackbar.openFromComponent(NotificationComponent, {\r\n      data,\r\n      duration,\r\n      panelClass,\r\n      verticalPosition: 'top',\r\n    });\r\n  }\r\n\r\n  public hideNotification(): void {\r\n    this.snackbar.dismiss();\r\n  }\r\n}\r\n","export class AuthToken {\r\n  kerberos: any = null;\r\n  credentials: any = null;\r\n  idToken?: IdAuthToken = undefined;\r\n}\r\n\r\nexport class IdAuthToken {\r\n  kerberos: any = null;\r\n  credentials: any = null;\r\n}\r\n\r\nexport type AuthTokenType = 'kerberos' | 'credentials';\r\n","export class AuthStatus {\r\n  kerberos: boolean;\r\n  credentials: boolean;\r\n\r\n  constructor(kerberos = false, credentials = false) {\r\n    this.kerberos = kerberos;\r\n    this.credentials = credentials;\r\n  }\r\n}\r\n","export class SubscriberData {\r\n  kerberos: SubscriberInfo = new SubscriberInfo();\r\n  credentials: SubscriberInfo = new SubscriberInfo();\r\n}\r\n\r\nexport class SubscriberInfo {\r\n  subscriberName: string = '';\r\n  loginStatus: boolean = false;\r\n  userName: string = '';\r\n  clientId: string = '';\r\n  hostProfileName?: string = undefined; // only avaiblable for FAB PCs and equals to undefined otherwise\r\n}\r\n","export class InvalidTokenError extends Error {}\r\n","import { InvalidTokenError } from './invalid-token-error';\r\nimport { JwtDecodeOptionsInterface } from './jwt-decode-options.interface';\r\nimport { JwtHeaderInterface } from './jwt-header.interface';\r\nimport { IfxJwtPayloadInterface } from './jwt-payload.interface';\r\n\r\n/**\r\n * this class is used to convert the base64 encoded string of a JWT to a JSON object\r\n * the code is takken from\r\n * https://github.com/auth0/jwt-decode/blob/v4.0.0/lib/index.ts\r\n */\r\nexport class JwtDecoder {\r\n  private static b64DecodeUnicode(str: string) {\r\n    return decodeURIComponent(\r\n      atob(str).replace(/(.)/g, (m, p) => {\r\n        let code = (p as string).charCodeAt(0).toString(16).toUpperCase();\r\n        if (code.length < 2) {\r\n          code = '0' + code;\r\n        }\r\n        return '%' + code;\r\n      })\r\n    );\r\n  }\r\n\r\n  private static base64UrlDecode(str: string) {\r\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n    switch (output.length % 4) {\r\n      case 0:\r\n        break;\r\n      case 2:\r\n        output += '==';\r\n        break;\r\n      case 3:\r\n        output += '=';\r\n        break;\r\n      default:\r\n        throw new Error('base64 string is not of the correct length');\r\n    }\r\n\r\n    try {\r\n      return JwtDecoder.b64DecodeUnicode(output);\r\n    } catch (err) {\r\n      return atob(output);\r\n    }\r\n  }\r\n\r\n  public static decode<T = JwtHeaderInterface>(token: string, options: JwtDecodeOptionsInterface & { header: true }): T;\r\n\r\n  public static decode<T = IfxJwtPayloadInterface>(token: string, options?: JwtDecodeOptionsInterface): T;\r\n\r\n  public static decode<T = JwtHeaderInterface | IfxJwtPayloadInterface>(\r\n    token: string,\r\n    options?: JwtDecodeOptionsInterface\r\n  ): T {\r\n    if (typeof token !== 'string') {\r\n      throw new InvalidTokenError('Invalid token specified: must be a string');\r\n    }\r\n\r\n    options ||= {};\r\n\r\n    const pos = options.header === true ? 0 : 1;\r\n    const part = token.split('.')[pos];\r\n\r\n    if (typeof part !== 'string') {\r\n      throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\r\n    }\r\n\r\n    let decoded: string;\r\n    try {\r\n      decoded = JwtDecoder.base64UrlDecode(part);\r\n    } catch (e) {\r\n      throw new InvalidTokenError(\r\n        `Invalid token specified: invalid base64 for part #${pos + 1} (${(e as Error).message})`\r\n      );\r\n    }\r\n\r\n    try {\r\n      return JSON.parse(decoded) as T;\r\n    } catch (e) {\r\n      throw new InvalidTokenError(\r\n        `Invalid token specified: invalid json for part #${pos + 1} (${(e as Error).message})`\r\n      );\r\n    }\r\n  }\r\n\r\n  public static decodeSafe<T = JwtHeaderInterface | IfxJwtPayloadInterface>(\r\n    token: string | undefined | null,\r\n    options?: JwtDecodeOptionsInterface,\r\n    logErrors = false\r\n  ): T {\r\n    let parsedToken: T = undefined as unknown as T;\r\n\r\n    if (token == undefined) {\r\n      return parsedToken;\r\n    }\r\n\r\n    try {\r\n      parsedToken = JwtDecoder.decode<T>(token, options);\r\n    } catch (error) {\r\n      if (logErrors) {\r\n        console.warn('decoding of JWT failed with an error', error);\r\n      }\r\n    }\r\n\r\n    return parsedToken;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport { LoggingConfigurationInterface } from '../lib/shared/logging/logging-config.interface';\r\n\r\nexport const environment = {\r\n  production: false,\r\n  validUfeHostnamePattern: '^(localhost|.*.infineon.com)$',\r\n  storageVariableNamePrefix: 'ifx-ufe-',\r\n  useFrontEndJson: window['useFrontEndJson' as never] as unknown as boolean | undefined,\r\n  logging: window['logging' as never] as unknown as LoggingConfigurationInterface,\r\n};\r\n\r\nexport const UFE_ENVIRONMENT = { ...environment };\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","export interface LoggingConfigurationInterface {\r\n  logLevel: IfxUfeLogLevel;\r\n  loggingSinks: IfxUfeLoggingSink[];\r\n}\r\n\r\nexport enum IfxUfeLogLevel {\r\n  DEBUG = 0,\r\n  INFO = 1,\r\n  WARN = 2,\r\n  ERROR = 3,\r\n  OFF = 4,\r\n}\r\n\r\nexport interface IfxUfeLoggingSink {\r\n  name: string;\r\n  level: IfxUfeLogLevel;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IfxUfeLoggerInterface } from './ifx-ufe-logger.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IfxUfeConsoleLogger implements IfxUfeLoggerInterface {\r\n  private _instanceName: string;\r\n\r\n  constructor() {\r\n    this._instanceName = '';\r\n  }\r\n\r\n  public debug(message: string, ...optionalParams: unknown[]): void {\r\n    optionalParams.length === 0\r\n      ? console.debug('[DEBUG] ' + this.getMessageWithIsoDate(message))\r\n      : console.debug('[DEBUG] ' + this.getMessageWithIsoDate(message), ...optionalParams);\r\n  }\r\n  public info(message: string, ...optionalParams: unknown[]): void {\r\n    optionalParams.length === 0\r\n      ? console.info('[INFO] ' + this.getMessageWithIsoDate(message))\r\n      : console.info('[INFO] ' + this.getMessageWithIsoDate(message), ...optionalParams);\r\n  }\r\n  public error(message: string, ...optionalParams: unknown[]): void {\r\n    optionalParams.length === 0\r\n      ? console.error(this.getMessageWithIsoDate(message))\r\n      : console.error(this.getMessageWithIsoDate(message), ...optionalParams);\r\n  }\r\n  public warn(message: string, ...optionalParams: unknown[]): void {\r\n    optionalParams.length === 0\r\n      ? console.warn(this.getMessageWithIsoDate(message))\r\n      : console.warn(this.getMessageWithIsoDate(message), ...optionalParams);\r\n  }\r\n\r\n  private getMessageWithIsoDate(message: string): string {\r\n    return `[${this._instanceName} - ${new Date().toISOString()}] ${message}`;\r\n  }\r\n\r\n  public set instanceName(value: string) {\r\n    this._instanceName = value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { IfxUfeLogLevel } from './logging-config.interface';\r\nimport { IfxUfeConsoleLogger } from './ifx-ufe-console-logger';\r\nimport { IfxUfeLoggerInterface } from './ifx-ufe-logger.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IfxUfeLoggerService {\r\n  private loggerProviders: IfxUfeLoggerInterface[] = [];\r\n  private consoleLogger = new IfxUfeConsoleLogger();\r\n\r\n  constructor() {\r\n    this.registerLoggerProvider(this.consoleLogger);\r\n  }\r\n\r\n  public setInstanceName(instanceName: string): void {\r\n    this.loggerProviders.forEach(provider => (provider.instanceName = instanceName));\r\n    this.info(`current log level is ${this.getLogLevel}`);\r\n  }\r\n\r\n  public debug(message: string, ...optionalParams: unknown[]): void {\r\n    if (this.getLogLevel > IfxUfeLogLevel.DEBUG) return;\r\n    this.loggerProviders.forEach(provider => provider.debug(message, ...optionalParams));\r\n  }\r\n  public info(message: string, ...optionalParams: unknown[]): void {\r\n    if (this.getLogLevel > IfxUfeLogLevel.INFO) return;\r\n    this.loggerProviders.forEach(provider => provider.info(message, ...optionalParams));\r\n  }\r\n  public warn(message: string, ...optionalParams: unknown[]): void {\r\n    if (this.getLogLevel > IfxUfeLogLevel.WARN) return;\r\n    this.loggerProviders.forEach(provider => provider.warn(message, ...optionalParams));\r\n  }\r\n  public error(message: string, ...optionalParams: unknown[]): void {\r\n    if (this.getLogLevel > IfxUfeLogLevel.ERROR) return;\r\n    this.loggerProviders.forEach(provider => provider.error(message, ...optionalParams));\r\n  }\r\n\r\n  public registerLoggerProvider(provider: IfxUfeLoggerInterface): void {\r\n    this.loggerProviders.push(provider);\r\n  }\r\n\r\n  public unregisterLoggerProvider(provider: IfxUfeLoggerInterface): void {\r\n    const index = this.loggerProviders.indexOf(provider);\r\n    if (index >= 0) {\r\n      this.loggerProviders.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  private get getLogLevel(): IfxUfeLogLevel {\r\n    if (environment.logging == null) {\r\n      return IfxUfeLogLevel.INFO;\r\n    }\r\n\r\n    return environment.logging.logLevel ?? IfxUfeLogLevel.OFF;\r\n  }\r\n}\r\n","import { inject, Type } from '@angular/core';\r\nimport { IfxUfeLoggerService } from '../logging/ifx-ufe-logger.service';\r\n\r\nexport class RootInjectorGuard<T> {\r\n  private parent = inject<T>(this.constructor as Type<T>, { optional: true, skipSelf: true });\r\n  protected logger: IfxUfeLoggerService = inject(IfxUfeLoggerService);\r\n  constructor(typeName: string) {\r\n    this.logger.debug(`[${typeName}] [${window.location.href}]: initialized`);\r\n    if (this.parent) {\r\n      throw Error(`[${typeName}]: trying to create multiple instances,\r\n     but this service should be a singleton.`);\r\n    }\r\n  }\r\n}\r\n","import { environment } from '../../../environments/environment';\r\n\r\nexport function isInIframe() {\r\n  return window.self !== window.top;\r\n}\r\n\r\nexport function isSilentRefreshInProcess() {\r\n  const currentUrl = new URL(window.location.href);\r\n  const refferenceUrl = document.referrer ? new URL(document.referrer) : new URL('https://abc.com');\r\n  const isSilentRefreshInUrl =\r\n    currentUrl.pathname.toUpperCase().indexOf('/SILENTREFRESH') > -1 ||\r\n    refferenceUrl.pathname.toUpperCase().indexOf('/SILENTREFRESH') > -1;\r\n\r\n  const isOldTokenAvailable = !!window.sessionStorage.getItem(environment.storageVariableNamePrefix + 'oldToken');\r\n  return isOldTokenAvailable || isSilentRefreshInUrl;\r\n}\r\n\r\nexport function generateUniqueId() {\r\n  return 'ufe-' + Date.now() + '-' + Math.floor(Math.random() * 1000);\r\n}\r\n\r\n/**\r\n * getQueryParams retrieves the query string parameters directly from the window object rather than the Angular\r\n * Router.\r\n */\r\nexport function getQueryParam(name: string): string | null {\r\n  const params = new URLSearchParams(window.location.search);\r\n  return params.get(name);\r\n}\r\n\r\nexport function isCodeFlowResponse(): boolean {\r\n  return !!getQueryParam('code');\r\n}\r\n","import { computed, effect, Injectable, signal } from '@angular/core';\r\nimport { ExcecutionEnvironmentType, LanguageType, UfeEnvironment } from '../models/ufe-environment.interface';\r\nimport { RootInjectorGuard } from '../shared/type-guards/root-injector.guard';\r\nimport { environment } from '../../environments/environment';\r\nimport { generateUniqueId, getQueryParam } from '../shared/helpers/common.helpers';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UfeEnvironmentStore extends RootInjectorGuard<UfeEnvironmentStore> {\r\n  // initial state\r\n  private state = signal<UfeEnvironment>({\r\n    ufeName: '',\r\n    ufeResourceName: undefined,\r\n    executionEnvironment: undefined,\r\n    currentLanguage: 'EN',\r\n    linkGroup: '',\r\n    isSilentRefreshActive: false,\r\n    showLanguageControls: undefined,\r\n    isShellApp: false,\r\n    showHeader: undefined,\r\n    instanceId: generateUniqueId(),\r\n    parentInstanceId: undefined,\r\n  });\r\n\r\n  constructor() {\r\n    super('UfeEnvironmentStore');\r\n    this.checkForExistingEnvironmentStateValues();\r\n    this.logger?.setInstanceName(this.ufeInstanceName() ?? '');\r\n\r\n    const storedLanguage = window.localStorage.getItem(\r\n      environment.storageVariableNamePrefix + 'currentLanguage'\r\n    ) as LanguageType;\r\n    if (storedLanguage != null) {\r\n      this.setCurrentLanguage(storedLanguage);\r\n    }\r\n\r\n    const storedShowHeader = window.sessionStorage.getItem(environment.storageVariableNamePrefix + 'showHeader');\r\n    if (storedShowHeader != null) {\r\n      this.setShowHeader(storedShowHeader === 'true');\r\n    }\r\n\r\n    effect(() => {\r\n      this.logger.setInstanceName(this.ufeInstanceName() ?? '');\r\n    });\r\n  }\r\n\r\n  // selectors\r\n  public ufeName = computed(() => this.state().ufeName);\r\n  public ufeResourceName = computed(() => this.state().ufeResourceName);\r\n  public ufeInstanceName = computed(() =>\r\n    (this.state().ufeResourceName ?? '') !== ''\r\n      ? this.state().ufeName + '_' + this.state().ufeResourceName\r\n      : this.state().ufeName\r\n  );\r\n  public executionEnvironment = computed(() => this.state().executionEnvironment);\r\n  public currentLanguage = computed(() => this.state().currentLanguage);\r\n  public linkGroup = computed(() => this.state().linkGroup);\r\n  public showLanguageControls = computed(() => this.state().showLanguageControls);\r\n  public isNotSelfHosted = computed(\r\n    () => this.state().executionEnvironment !== 'SELF' && this.state().executionEnvironment != null\r\n  );\r\n  public isSelfHosted = computed(() => this.state().executionEnvironment === 'SELF');\r\n  public isShellApp = computed(() => this.state().isShellApp);\r\n  public isEnvironmentInitialized = computed(() => this.state().executionEnvironment !== undefined);\r\n  public isSilentRefreshEnabled = computed(() => this.state().isSilentRefreshActive && this.isSelfHosted());\r\n  public showHeader = computed(\r\n    () => this.state().showHeader || (this.state().showHeader === undefined && this.isSelfHosted())\r\n  );\r\n  public activeInstanceId = computed(() => this.state().instanceId);\r\n  public parentInstanceId = computed(() => this.state().parentInstanceId);\r\n\r\n  // Reducers\r\n\r\n  /**\r\n   * setUfeName update the ufe name state\r\n   * @param name application name\r\n   */\r\n  public setUfeName(name: string) {\r\n    this.state.update(state => ({ ...state, ufeName: name }));\r\n  }\r\n\r\n  /**\r\n   * setUfeName update the ufe name state\r\n   * @param name application name\r\n   */\r\n  public setUfeResouceName(name: string) {\r\n    this.state.update(state => ({ ...state, ufeResourceName: name }));\r\n  }\r\n\r\n  /**\r\n   * setExecutionEnvironment update the environment  namestate\r\n   * @param env environment name\r\n   */\r\n  public setExecutionEnvironment(environmentName: ExcecutionEnvironmentType) {\r\n    this.state.update(state => ({ ...state, executionEnvironment: environmentName }));\r\n  }\r\n\r\n  /**\r\n   * setExecutionEnvironment update the current language state. Valid inputs are EN for English and DE for German\r\n   * @param currentLanguage current language name\r\n   */\r\n  public setCurrentLanguage(currentLanguage: LanguageType) {\r\n    this.state.update(state => ({ ...state, currentLanguage: currentLanguage }));\r\n    window.localStorage.setItem(environment.storageVariableNamePrefix + 'currentLanguage', currentLanguage);\r\n  }\r\n\r\n  /**\r\n   * setExecutionEnvironment update the current language state\r\n   * @param linkGroup current language name\r\n   */\r\n  public setLinkGroup(linkGroup: string) {\r\n    this.state.update(state => ({ ...state, linkGroup: linkGroup }));\r\n  }\r\n\r\n  /**\r\n   * setShowLanguageControls determines whether language controls will be displayed for this uFE.  Language controls\r\n   * @param status\r\n   */\r\n  public setShowLanguageControls(status: boolean) {\r\n    this.state.update(state => ({ ...state, showLanguageControls: status }));\r\n  }\r\n\r\n  /**\r\n   * set silent refresh active status\r\n   * @param status s\r\n   */\r\n  public setSilentRefreshActive(status: boolean) {\r\n    this.state.update(state => ({ ...state, isSilentRefreshActive: status }));\r\n  }\r\n\r\n  public setIsShellApp(status: boolean) {\r\n    this.state.update(state => ({ ...state, isShellApp: status }));\r\n  }\r\n\r\n  public setShowHeader(status: boolean) {\r\n    this.state.update(state => ({ ...state, showHeader: status }));\r\n    window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'showHeader', status.toString());\r\n  }\r\n\r\n  private setParentInstanceId() {\r\n    const parentInstanceId = getQueryParam('wufeid');\r\n    this.state.update(state => ({ ...state, parentInstanceId: parentInstanceId }));\r\n  }\r\n\r\n  private checkForExistingEnvironmentStateValues(): void {\r\n    const currentEnvironment = window.sessionStorage.getItem(\r\n      environment.storageVariableNamePrefix + 'EXECUTION_ENVIRONMENT'\r\n    ) as ExcecutionEnvironmentType;\r\n\r\n    if (currentEnvironment != null) {\r\n      this.setExecutionEnvironment(currentEnvironment);\r\n    }\r\n\r\n    //Todo: only the instanceName identify the correct ufe instacne. Have to be refactored later.\r\n    const appName = window.sessionStorage.getItem(environment.storageVariableNamePrefix + 'APP_NAME') as string;\r\n    if (appName != null) {\r\n      this.setUfeName(appName);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { UfeEnvironmentStore } from '../stores/ufe-environment.store';\r\nimport { ExcecutionEnvironmentType } from '../models/ufe-environment.interface';\r\nimport { toObservable } from '@angular/core/rxjs-interop';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EnvironmentManagerService {\r\n  private environmentStore = inject(UfeEnvironmentStore);\r\n\r\n  public executionEnvironment$;\r\n  public appName$;\r\n  public linkGroup$;\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {\r\n    this.executionEnvironment$ = toObservable(this.environmentStore.executionEnvironment);\r\n    this.appName$ = toObservable(this.environmentStore.ufeName);\r\n    this.linkGroup$ = toObservable(this.environmentStore.linkGroup);\r\n  }\r\n\r\n  /**\r\n   * setUfeName stores the app name passed in this UfeCommand in session storage.  This ufe name is the way the shell\r\n   * knows this uFE, and is necessary for sending UfeCommands of any type to the shell.\r\n   * @param name UfeCommand\r\n   */\r\n  public setUfeName(name: string) {\r\n    this.environmentStore.setUfeName(name);\r\n    window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'APP_NAME', name);\r\n  }\r\n\r\n  /**\r\n   * This method must be used with care! It takes the APP_NAME from the session storage. It only delivers reliable the correct name AFTER comming back from authentication redirect!\r\n   * Use the method getAppName() instead.\r\n   * @returns\r\n   */\r\n  public getAppNameFromSessionStorage(): string | null {\r\n    return window.sessionStorage.getItem(environment.storageVariableNamePrefix + 'APP_NAME');\r\n  }\r\n\r\n  /**\r\n   * setExecutionEnvironment sets an EXECUTION_ENVIRONMENT key within session storage for use by the popUpWindow\r\n   * component\r\n   * @param env UfeCommand\r\n   */\r\n  public setExecutionEnvironment(env: ExcecutionEnvironmentType) {\r\n    const envValue = env?.toUpperCase() as ExcecutionEnvironmentType;\r\n    this.environmentStore.setExecutionEnvironment(envValue);\r\n    if (envValue) {\r\n      window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'EXECUTION_ENVIRONMENT', envValue.toString());\r\n    } else {\r\n      window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'EXECUTION_ENVIRONMENT');\r\n    }\r\n  }\r\n\r\n  public setSelfHostedEnvironment() {\r\n    this.setExecutionEnvironment('SELF');\r\n  }\r\n\r\n  public setShellHostedEnvironment() {\r\n    this.setExecutionEnvironment('SHELL');\r\n  }\r\n}\r\n","import { WebResource } from './web-resource';\r\n\r\nexport class WrlCommandArgument {\r\n  constructor(\r\n    public applicationName: string,\r\n    public resourceName: string,\r\n    public args: Object = {},\r\n    public isAnonymous: boolean = false,\r\n    public targetLocation: UfeWrlTargetLocationType | undefined = undefined\r\n  ) {}\r\n}\r\n\r\nexport type UfeWrlTargetLocationType = 'dialog-modal' | 'dialog-browser' | 'new-tab' | 'new-shell-tab' | 'not-found';\r\n\r\nexport class OpenWebResourceCommandArgument {\r\n  constructor(\r\n    public webResource: WebResource,\r\n    public args: Object,\r\n    public targetLocation: UfeWrlTargetLocationType | undefined = undefined\r\n  ) {}\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { AppDescription } from '../models/AppDescription';\r\nimport { UfeCommand } from '../models/UfeCommand';\r\nimport { NotificationType } from '../models/notification-type';\r\nimport { NotificationModel } from '../models/notification.model';\r\nimport { UfeEnvironmentStore } from '../stores/ufe-environment.store';\r\nimport { RootInjectorGuard } from '../shared/type-guards/root-injector.guard';\r\nimport {\r\n  UfeWrlTargetLocationType,\r\n  WrlCommandArgument,\r\n} from '../shared/web-resource-locator/models/wrl-command-argument';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ShellCommunicatorService extends RootInjectorGuard<ShellCommunicatorService> {\r\n  private readonly window = inject(Window);\r\n  private envStore = inject(UfeEnvironmentStore);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {\r\n    super('ShellCommunicatorService');\r\n  }\r\n\r\n  /**\r\n   * sendShellMessage allows the uFE to send messages to the embedding shell\r\n   * @param message UfeCommand\r\n   */\r\n  public sendShellMessage(\r\n    message: UfeCommand,\r\n    targetWindow: 'PARENT' | 'SHELL' | 'SELF' | 'DEFAULT' | 'WINDOW_OPENER' = 'DEFAULT'\r\n  ) {\r\n    let targetWindowRef = this.window.parent;\r\n    let targetWindowType = targetWindow;\r\n\r\n    switch (targetWindow) {\r\n      case 'PARENT':\r\n        targetWindowRef = this.window.parent;\r\n        break;\r\n      case 'SELF':\r\n        targetWindowRef = this.window.self;\r\n        break;\r\n      case 'WINDOW_OPENER':\r\n        if (\r\n          this.window.opener &&\r\n          this.envStore.isNotSelfHosted() &&\r\n          this.envStore.executionEnvironment() !== undefined\r\n        ) {\r\n          targetWindowRef = this.window.opener;\r\n        } else {\r\n          targetWindowRef = this.envStore.isSelfHosted() ? this.window.self : this.window.parent;\r\n          targetWindowType = this.envStore.isSelfHosted() ? 'SELF' : 'PARENT';\r\n        }\r\n\r\n        break;\r\n      case 'DEFAULT':\r\n      default:\r\n        targetWindowRef = this.envStore.isSelfHosted() ? this.window.self : this.window.parent;\r\n        targetWindowType = this.envStore.isSelfHosted() ? 'SELF' : 'PARENT';\r\n        break;\r\n    }\r\n\r\n    if (targetWindowRef === null) {\r\n      this.logger.warn(\r\n        `sendShellMessage: targetWindowRef is null for command:${message.command} to sender:${message.sender} in ufe:${this.envStore.ufeInstanceName}`\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.logger.debug(\r\n        `>> Sending command:${message.command} to sender:${message.sender} ufe:${this.envStore.ufeName()} targetRefType:${targetWindowType}`\r\n      );\r\n      targetWindowRef.postMessage(message, '*');\r\n    } catch (e) {\r\n      console.error('Error in sending message to SHELL', e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * sendChildMessage allows the shell to send UfeCommands to this uFE\r\n   * @param message UfeCommand\r\n   * @param app AppDescription identifying the uFE to send the command to\r\n   */\r\n  public sendChildMessage(message: UfeCommand, app: AppDescription) {\r\n    // get iframe element by id (AppName + WebResourceName)\r\n    const child = document.getElementById(app.combinedName) as HTMLIFrameElement;\r\n\r\n    // only handle ufe in iframe and not in the dialog/browser dialog\r\n    // dialog - not need to handle because it have the same session\r\n    if (child !== null && app.url != null && app.url !== '') {\r\n      try {\r\n        // send message to the iframe\r\n        if (child.contentWindow) {\r\n          child.contentWindow.postMessage(message, app.url);\r\n        }\r\n      } catch (e) {\r\n        console.error('Error sending message to child in iframe', e);\r\n      }\r\n    } else if (app.windowReference?.ref) {\r\n      // send message to the window reference -- browser dialog\r\n      try {\r\n        app.windowReference.ref.postMessage(message, app.url);\r\n      } catch (e) {\r\n        console.error('Error sending message to window reference in another browser window', e);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * sendNotification sends a notification model to be displayed in a popup within the shell\r\n   * @param notification NotificationModel: The notification model to be displayed in the popup\r\n   */\r\n  private sendNotification(notification: NotificationModel): void {\r\n    this.checkNoNameError();\r\n\r\n    //TodDo: only the instanceName identify the correct ufe instacne. Have to be refactored later.\r\n    const msg = new UfeCommand(this.envStore.ufeName() ?? '', 'NOTIFICATION', [notification]);\r\n    this.sendShellMessage(msg);\r\n  }\r\n\r\n  /**\r\n   * sendInfoNotification is a convenience method to display a general information notice for this uFE.\r\n   * @param title String: The notification title to be displayed to the user\r\n   * @param message String: The optional notification message to be displayed to the user\r\n   * @param details String[]: The optional notification detail info list to be displayed to the user\r\n   */\r\n  public sendInfoNotification(title: string, message?: string, details?: string[]): void {\r\n    const notification: NotificationModel = {\r\n      notificationType: NotificationType.Info,\r\n      title,\r\n      message,\r\n      details,\r\n    };\r\n    this.sendNotification(notification);\r\n  }\r\n\r\n  /**\r\n   * sendErrorNotification is a convenience method to display a general information notice for this uFE.\r\n   * @param title String: The notification title to be displayed to the user\r\n   * @param message String: The optional notification message to be displayed to the user\r\n   * @param details String[]: The optional notification detail info list to be displayed to the user\r\n   */\r\n  public sendErrorNotification(title: string, message?: string, details?: string[]): void {\r\n    const notification: NotificationModel = {\r\n      notificationType: NotificationType.Error,\r\n      title,\r\n      message,\r\n      details,\r\n    };\r\n    this.sendNotification(notification);\r\n  }\r\n\r\n  /**\r\n   * sendSuccessNotification is a convenience method to display a general information notice for this uFE.\r\n   * @param title String: The notification title to be displayed to the user\r\n   * @param message String: The optional notification message to be displayed to the user\r\n   * @param details String[]: The optional notification detail info list to be displayed to the user\r\n   */\r\n  public sendSuccessNotification(title: string, message?: string, details?: string[]): void {\r\n    const notification: NotificationModel = {\r\n      notificationType: NotificationType.Success,\r\n      title,\r\n      message,\r\n      details,\r\n    };\r\n    this.sendNotification(notification);\r\n  }\r\n\r\n  /**\r\n   * sendWarningNotification is a convenience method to display a general information notice for this uFE.\r\n   * @param title String: The notification title to be displayed to the user\r\n   * @param message String: The optional notification message to be displayed to the user\r\n   * @param details String[]: The optional notification detail info list to be displayed to the user\r\n   */\r\n  public sendWarningNotification(title: string, message?: string, details?: string[]): void {\r\n    const notification: NotificationModel = {\r\n      notificationType: NotificationType.Warning,\r\n      title,\r\n      message,\r\n      details,\r\n    };\r\n    this.sendNotification(notification);\r\n  }\r\n\r\n  /**\r\n   * closeOpenNotification sends a shell message to close current opened notifications\r\n   */\r\n  public closeOpenNotification(): void {\r\n    this.checkNoNameError();\r\n\r\n    const msg = new UfeCommand(this.appName, 'NOTIFICATION_CLOSE', []);\r\n    this.sendShellMessage(msg);\r\n  }\r\n\r\n  /**\r\n   * openUfe sends a request to the shell to open this uFE\r\n   * @param ufe string: The app name as registered with and provided by the Front End Discovery Service\r\n   */\r\n  public openUfe(ufe: string) {\r\n    this.checkNoNameError();\r\n    let msg = new UfeCommand(this.appName, 'OPEN_UFE', [ufe]);\r\n    this.sendShellMessage(msg);\r\n  }\r\n\r\n  /**\r\n   * sendPeerMessage sends this message to this peer level uFE\r\n   * @param ufe string: The app name of the app to send the message to as registered with and provided by the\r\n   *                    Front End Discovery Service\r\n   * @param message any: The message or data to be passed to the receiving uFE\r\n   */\r\n  public sendPeerMessage(ufe: string, message: any) {\r\n    //todo add metrics and monitoring of uFE communication\r\n    this.logger.error('sendPeerMessage is not implemented yet');\r\n    this.checkNoNameError();\r\n\r\n    let msg = new UfeCommand(this.appName, 'PEER_MESSAGE', [ufe, message]);\r\n    this.sendShellMessage(msg);\r\n  }\r\n\r\n  /**\r\n   * sendPeerMessage sends this message to this peer level uFE or opens the web resource in a new tab in case it is not an uFE.\r\n   * @param applicationName string: The app name of the app to send the message to as registered with and provided by the\r\n   *                    Front End Discovery Service\r\n   * @param webResourceName string: the name of the actual web resource of the application.\r\n   * @param args Map<string, any> | any: The data to be passed to the receiving uFE or the arguments for opening a web resource. Note if you want to use a web resource other then uFE you need to pass the map.\r\n   * @param isAnonymous boolean: defines if the Web Resource Locator should be approached anonymously or with JWT to get personalized or only default results.\r\n   * @param targetLocation UfeWrlTargetLocationType: defines the target location where the web resource should be opened.\r\n   */\r\n  public sendPeerMessageWRL(\r\n    applicationName: string,\r\n    webResourceName: string,\r\n    args: Map<string, any> | any,\r\n    isAnonymous: boolean = false,\r\n    targetLocation: UfeWrlTargetLocationType | undefined = undefined\r\n  ) {\r\n    //todo add metrics and monitoring of uFE communication\r\n\r\n    this.checkNoNameError();\r\n\r\n    let msg = new UfeCommand(this.appName, 'PEER_MESSAGE_WRL', [\r\n      new WrlCommandArgument(applicationName, webResourceName, args, isAnonymous, targetLocation),\r\n    ]);\r\n    this.sendShellMessage(msg);\r\n  }\r\n\r\n  public closeUfeWrl(applicationName: string, webResourceName: string) {\r\n    this.checkNoNameError();\r\n\r\n    let msg = new UfeCommand(this.appName, 'CLOSE_UFE_WRL', [applicationName, webResourceName]);\r\n    this.sendShellMessage(msg);\r\n  }\r\n\r\n  /**\r\n   * closeUfeDialog sends a shell message to close current opened ufe dialog\r\n   */\r\n  public closeUfeDialog(): void {\r\n    this.checkNoNameError();\r\n\r\n    const msg = new UfeCommand(this.appName, 'CLOSE_UFE_DIALOG', []);\r\n    this.sendShellMessage(msg);\r\n  }\r\n\r\n  /**\r\n   * checkNoNameError ensures this.appName has been set.  This check should be called before any message is sent via\r\n   * any of the convenience communication methods\r\n   * @private\r\n   */\r\n  private checkNoNameError() {\r\n    if (this.appName == null || this.appName == '') {\r\n      throw new Error('AppName not set in ShellCommunicatorService.');\r\n    }\r\n  }\r\n\r\n  private get appName(): string {\r\n    //TodDo: only the instanceName identify the correct ufe instacne. Have to be refactored later.\r\n    return this.envStore.ufeName() ?? '';\r\n  }\r\n}\r\n","import { computed, inject, Injectable, OnDestroy, signal, DestroyRef } from '@angular/core';\r\nimport { LoginResponse, OidcSecurityService, OpenIdConfiguration } from 'angular-auth-oidc-client';\r\nimport { BehaviorSubject, interval, Observable, Subscription, tap, take } from 'rxjs';\r\nimport { AuthToken, AuthTokenType, IdAuthToken } from '../models/AuthToken';\r\nimport { AuthStatus } from '../models/AuthStatus';\r\nimport { SubscriberData } from '../models/SubscriberData';\r\nimport { JwtDecoder } from '../shared/jwt/jwt-decoder';\r\nimport { IfxJwtPayloadInterface } from '../shared/jwt/jwt-payload.interface';\r\nimport { UfeEnvironmentStore } from '../stores/ufe-environment.store';\r\nimport { RootInjectorGuard } from '../shared/type-guards/root-injector.guard';\r\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop';\r\nimport { environment } from '../../environments/environment';\r\nimport { isInIframe, isSilentRefreshInProcess } from '../shared/helpers/common.helpers';\r\nimport { EnvironmentManagerService } from './environment-manager.service';\r\nimport { UfeCommand } from '../models/UfeCommand';\r\nimport { ShellCommunicatorService } from './shell-communicator.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticationService extends RootInjectorGuard<AuthenticationService> implements OnDestroy {\r\n  configurations: OpenIdConfiguration[];\r\n  authenticationStatus = signal<AuthStatus>(new AuthStatus());\r\n\r\n  private destroyRef$ = inject(DestroyRef);\r\n  private authToken = signal<AuthToken>(new AuthToken());\r\n  private subscriberData: SubscriberData = new SubscriberData();\r\n  private currentSubscriberData: BehaviorSubject<SubscriberData> = new BehaviorSubject<SubscriberData>(\r\n    this.subscriberData\r\n  );\r\n  public currentAuthToken = computed(() => this.authToken());\r\n  public currentAuthToken$ = toObservable(this.authToken);\r\n\r\n  public currentAuthenticationStatus = computed(() => this.authenticationStatus());\r\n\r\n  public activeConfigId?: string = undefined;\r\n\r\n  private authInProgress = signal(false); // this state indicates that an authentication flow is in progress\r\n  private subscriptions: Subscription = new Subscription();\r\n  private tokenRefreshWatcher$: Subscription | undefined;\r\n\r\n  public oidcSecurityService = inject(OidcSecurityService);\r\n  private envStore = inject(UfeEnvironmentStore);\r\n  private envManager = inject(EnvironmentManagerService);\r\n  private shellCommunicatorService= inject(ShellCommunicatorService);\r\n\r\n  constructor() {\r\n    super('AuthenticationService');\r\n    this.configurations = this.oidcSecurityService.getConfigurations();\r\n    toObservable(this.envStore.executionEnvironment)\r\n      .pipe(takeUntilDestroyed(this.destroyRef$))\r\n      .subscribe(() => {\r\n        this.setTokenRefresh();\r\n      });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.stopTokenWatcher();\r\n    this.subscriptions.unsubscribe();\r\n    this.currentSubscriberData.complete();\r\n  }\r\n\r\n  /**\r\n   * isAuthenticated returns an observable of AuthStatus indicating which identities are currently authenticated if any\r\n   */\r\n  public get isAuthenticated$(): Observable<AuthStatus> {\r\n    return toObservable(this.authenticationStatus);\r\n  }\r\n\r\n  /***\r\n   *updateIsAuthenticated allows client code to update the isAuthenticated status.  This is called by the\r\n   * MessageListenerDirective when it receives JWT tokens from the Shell\r\n   * @param newStatus: boolean\r\n   */\r\n  public setAuthenticationStatus(newStatus: AuthStatus) {\r\n    this.authenticationStatus.set(newStatus);\r\n  }\r\n\r\n  public updateAuthenticationStatus(loginType: keyof AuthStatus, newStatus: boolean) {\r\n    this.authenticationStatus.update(status => ({ ...status, [loginType]: newStatus }));\r\n  }\r\n\r\n  /**\r\n   * initialAuthorization contacts the Pingfederate authentication service and attempts to authenticate the user with\r\n   * Kerberos if available, or requests credentials if not.\r\n   */\r\n  public initialAuthentication() {\r\n    // This observable will be triggered on authentication callback.  Either success (isAuthenticated will be true) or failure\r\n    const currentUrl = window.location.href;\r\n    const checkAuthSub = this.oidcSecurityService\r\n      .checkAuthMultiple(currentUrl)\r\n      .subscribe((responses: LoginResponse[]) => {\r\n        if (responses.length > 0 && responses[0].isAuthenticated) {\r\n          let loginType: AuthTokenType = responses[0].configId as AuthTokenType;\r\n\r\n          this.subscriberData[loginType].subscriberName = responses[0].userData.sub;\r\n          this.subscriberData[loginType].loginStatus = responses[0].isAuthenticated;\r\n          this.subscriberData[loginType].userName = responses[0].userData.name;\r\n          this.subscriberData[loginType].clientId = responses[0].userData.client_id;\r\n\r\n          loginType = responses[0].configId as AuthTokenType;\r\n          const authToken = new AuthToken();\r\n          authToken[loginType] = responses[0].accessToken;\r\n          authToken.idToken = new IdAuthToken();\r\n          authToken.idToken[loginType] = responses[0].idToken;\r\n\r\n          this.activeConfigId = responses[0].configId;\r\n          this.authInProgress.set(false);\r\n\r\n          // Don't update the observables until *all* the updates are made internally\r\n          this.authToken.set(authToken);\r\n          this.updateAuthenticationStatus(loginType, responses[0].isAuthenticated);\r\n          this.logger.debug('*** initialAuthentication - next token found', !!responses[0].accessToken);\r\n          this.currentSubscriberData.next(this.subscriberData);\r\n          this.publishTokens();\r\n        }\r\n      });\r\n    this.subscriptions.add(checkAuthSub);\r\n  }\r\n\r\n  /**\r\n   * loginKerberos begins the authentication workflow for the kerberos identity\r\n   */\r\n  public loginKerberos() {\r\n    if (this.currentAuthToken()?.kerberos && isInIframe()) {\r\n      this.logger.info('loginKerberos is requested by silent refresh');\r\n    }\r\n\r\n    if (this.currentAuthToken()?.credentials) {\r\n      this.logger.warn('user is already authenticated with credentials, logout before!');\r\n      return;\r\n    }\r\n\r\n    window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'loginKerberosUTC', new Date().toUTCString());\r\n    window.sessionStorage.setItem(\r\n      environment.storageVariableNamePrefix + 'loginKerberos',\r\n      this.localDateToUtc(new Date()).toString()\r\n    );\r\n\r\n    this.setExecutionEnvironment();\r\n    this.authInProgress.set(true);\r\n    this.oidcSecurityService.authorize('kerberos');\r\n    window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'auth', 'kerberos');\r\n  }\r\n\r\n  public isLastLoginOlderThanInSeconds(seconds: number): boolean {\r\n    let loginDiff = Number.MAX_VALUE;\r\n\r\n    try {\r\n      const loginKerberos = window.sessionStorage.getItem(environment.storageVariableNamePrefix + 'loginKerberos');\r\n      const loginCredentials = window.sessionStorage.getItem(\r\n        environment.storageVariableNamePrefix + 'loginCredentials'\r\n      );\r\n\r\n      const now = new Date(Date.now());\r\n      const nowUtc = this.localDateToUtc(now);\r\n\r\n      if (loginKerberos) {\r\n        loginDiff = (nowUtc - parseInt(loginKerberos)) / 1000;\r\n      } else if (loginCredentials) {\r\n        loginDiff = (nowUtc - parseInt(loginCredentials)) / 1000;\r\n      }\r\n    } catch {}\r\n\r\n    window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'lastLoginDiff', loginDiff.toString());\r\n\r\n    return loginDiff > seconds;\r\n  }\r\n\r\n  /**\r\n   * loginCredentials begins the authentication workflow for the credentials identity\r\n   */\r\n  public loginCredentials() {\r\n    if (this.currentAuthToken()?.kerberos) {\r\n      this.logger.warn('user is already authenticated with kerberos, logout before!');\r\n      return;\r\n    }\r\n\r\n    window.sessionStorage.setItem(\r\n      environment.storageVariableNamePrefix + 'loginCredentialsUTC',\r\n      new Date().toUTCString()\r\n    );\r\n    window.sessionStorage.setItem(\r\n      environment.storageVariableNamePrefix + 'loginCredentials',\r\n      this.localDateToUtc(new Date()).toString()\r\n    );\r\n\r\n    this.setExecutionEnvironment();\r\n    this.authInProgress.set(true);\r\n    this.oidcSecurityService.authorize('credentials');\r\n    window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'auth', 'credentials');\r\n  }\r\n\r\n  /**\r\n   * logout locally logs of the current active configuration.\r\n   */\r\n  public logout(): void {\r\n    this.invalidateTokens();\r\n\r\n    this.oidcSecurityService.logoffLocal('kerberos');\r\n    this.oidcSecurityService.logoffLocal('credentials');\r\n\r\n    this.stopTokenWatcher();\r\n\r\n    window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'loginKerberos');\r\n    window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'loginCredentials');\r\n    window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'loginKerberosUTC');\r\n    window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'loginCredentialsUTC');\r\n    window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'auth');\r\n\r\n    this.activeConfigId = undefined;\r\n    this.logger.info('signed out!');\r\n  }\r\n\r\n  /**\r\n   * getAuthTokens returns an Observable of AuthToken that will contain all current JWT tokens\r\n   */\r\n  public getAuthTokens(): Observable<AuthToken> {\r\n    return this.currentAuthToken$.pipe(\r\n      tap(tokens => {\r\n        this.logger.debug('getAuthTokens', tokens);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * getCredentialToken returns the current JWT for the credential identity if it exists, null otherwise\r\n   */\r\n  public getCredentialToken(): string | null {\r\n    return this.currentAuthToken().credentials;\r\n  }\r\n\r\n  /**\r\n   * getKerberosToken returns the current JWT for the kerberos identity if it exists, null otherwise\r\n   */\r\n  public getKerberosToken(): string | null {\r\n    return this.currentAuthToken().kerberos;\r\n  }\r\n\r\n  /**\r\n   * registerNewToken places this pre-authenticated JWT token into session storage for future use in authorization.\r\n   * Note that this method only needs to be called when JWT tokens are passed from the Shell; if the ifx-ure library\r\n   * handles the authentication (e.g. in the case of a stand-alone execution environment) the authentication library\r\n   * will place the tokens in session storage.\r\n   * @param tokens stringified AuthToken.\r\n   * @private\r\n   */\r\n  public registerNewToken(tokens: string) {\r\n    let newToken: AuthToken;\r\n    try {\r\n      newToken = JSON.parse(tokens) as AuthToken;\r\n    } catch (error) {\r\n      this.logger.error('Error in registerNewToken', error, tokens);\r\n      return;\r\n    }\r\n\r\n    const newAuthStatus = new AuthStatus();\r\n    newAuthStatus.kerberos = !!newToken.kerberos;\r\n    newAuthStatus.credentials = !!newToken.credentials;\r\n\r\n    this.updateSubscriberData(newToken);\r\n    this.setAuthenticationStatus(newAuthStatus);\r\n    this.authToken.set(newToken);\r\n\r\n    this.publishTokens();\r\n  }\r\n\r\n  /**\r\n   * isAuthInProgress returns a boolean representing whether an authentication flow is currently in progress\r\n   * True if authentication is in progress false otherwise.  No navigation that may overlap an authentication process\r\n   * should be attempted without checking this status as navigation during an authentication process will cause the\r\n   * authentication process to fail in a partial state.  This method is consumed internally by the ifx-ufe library and\r\n   * generally should not be called by client code.\r\n   */\r\n  public isAuthInProgress = computed(() => this.authInProgress());\r\n\r\n  public get isUserAuthenticated(): boolean {\r\n    return (this.currentAuthToken()?.kerberos ?? false) || (this.currentAuthToken()?.credentials ?? false);\r\n  }\r\n\r\n  public get getToken(): string | null {\r\n    return this.getCredentialToken() ?? this.getKerberosToken();\r\n  }\r\n\r\n  /**\r\n   * get subscriberData$ returns an observable of SubscriberData\r\n   */\r\n  public get subscriberData$(): Observable<SubscriberData> {\r\n    return this.currentSubscriberData.asObservable();\r\n  }\r\n\r\n  /**\r\n   * checkTokenAndReturnExpiryStatus checks and removes tokens that are past their expiry, and updates the login status appropriately.\r\n   * returns true if AuthToken is not valid, false otherwise\r\n   */\r\n  public checkTokenAndReturnExpiryStatus(tokenType: string | null = null): boolean {\r\n    let targetToken: string | null = this.getToken;\r\n\r\n    if (tokenType === 'credentials') {\r\n      targetToken = this.getCredentialToken();\r\n    } else if (tokenType === 'kerberos') {\r\n      targetToken = this.getKerberosToken();\r\n    }\r\n\r\n    if (this.isTokenExpired(targetToken)) {\r\n      //otherwise delete the tokens.  Note either token expiring will cause both to be invalidated\r\n      this.invalidateTokens();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // Create a function to initialize Person objects\r\n  createSilentRefreshInfo(refreshTime: string, refreshInterval: number | undefined, refreshTimeoutMethod: number) {\r\n    return { refreshTime, refreshInterval, refreshTimeoutMethod };\r\n  }\r\n\r\n  public completeRefresh() {\r\n    const silentRefreshFrameId = this.envStore.activeInstanceId();\r\n    const handle = document.getElementById(silentRefreshFrameId);\r\n    if (handle) {\r\n      this.envStore.setSilentRefreshActive(false);\r\n    } else {\r\n      this.logger.warn(`Unable to find ${silentRefreshFrameId}`);\r\n      return;\r\n    }\r\n    this.logger.info('Silent refresh of Auth token complete');\r\n    //ensure that token is the latest one\r\n    this.checkForExistingToken();\r\n  }\r\n\r\n  public getJwtTokenFromSessionStorage(tokenName: string) {\r\n    const token = window.sessionStorage.getItem(tokenName) ?? '';\r\n    if (token) {\r\n      try {\r\n        const parsedToken = JSON.parse(token);\r\n        return parsedToken?.authnResult?.access_token;\r\n      } catch (error) {\r\n        this.logger.error(`Invalid ${tokenName} Token`, error);\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  public isAuthFlowRunning() {\r\n    return this.isAuthFlowRunningInternal('kerberos') || this.isAuthFlowRunningInternal('credentials');\r\n  }\r\n\r\n  public getJwtIdTokenFromSessionStorage(tokenName: string) {\r\n    const token = window.sessionStorage.getItem(tokenName) ?? '';\r\n    if (token) {\r\n      try {\r\n        const parsedToken = JSON.parse(token);\r\n        return parsedToken?.authnResult?.id_token;\r\n      } catch (error) {\r\n        this.logger.error(`Invalid ${tokenName} Token`, error);\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * publishTokens update the current authentication tokens stored in session storage\r\n   * @private\r\n   */\r\n  private publishTokens(): void {\r\n    this.unsetSessionStorageToken('kerberos');\r\n    this.unsetSessionStorageToken('credentials');\r\n    this.setSessionStorageToken('kerberos');\r\n    this.setSessionStorageToken('credentials');\r\n  }\r\n\r\n  /**\r\n   * setsToken sets the AuthToken kerberos/credentials in session storage.\r\n   * @private\r\n   */\r\n  private setSessionStorageToken(tokenType: keyof AuthToken): void {\r\n    const token = this.currentAuthToken()[tokenType as keyof AuthToken];\r\n    const idToken = this.currentAuthToken().idToken?.[tokenType as keyof IdAuthToken];\r\n\r\n    if (token != null && token != '') {\r\n      if (this.envStore.isNotSelfHosted() || this.currentEnvironment === 'NATIVE_SHELL') {\r\n        window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'shell-' + tokenType, token);\r\n        window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'shell-id' + tokenType, idToken);\r\n        window.sessionStorage.setItem('shell-' + tokenType, token); // ToDo: remove this line after iSecure authorization is supporting configurable prefix\r\n      } else {\r\n        window.sessionStorage.setItem(environment.storageVariableNamePrefix + 't' + tokenType, token);\r\n        window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'tid' + tokenType, idToken);\r\n        window.sessionStorage.setItem('t' + tokenType, token); // ToDo: remove this line after iSecure authorization is supporting configurable prefix\r\n      }\r\n\r\n      window.sessionStorage.setItem(\r\n        environment.storageVariableNamePrefix + 'publish' + tokenType + 'UTC',\r\n        new Date().toUTCString()\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * delete kerberos/credentials in session storage.\r\n   * @private\r\n   */\r\n  private unsetSessionStorageToken(tokenType: keyof AuthToken): void {\r\n    window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 't' + tokenType);\r\n    window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'tid' + tokenType);\r\n    window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'shell-' + tokenType);\r\n    window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'shell-id' + tokenType);\r\n    window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'tokenLastPublish' + tokenType + 'UTC');\r\n    window.sessionStorage.removeItem('shell-' + tokenType); // ToDo: remove this line after iSecure authorization is supporting configurable prefix\r\n    window.sessionStorage.removeItem('t' + tokenType); // ToDo: remove this line after iSecure authorization is supporting configurable prefix\r\n  }\r\n\r\n  /**\r\n   * checkForExistingToken checks if a JWT token has already been stored in session storage.  If a token is found, the\r\n   * method take over the data in the token storing it within the system for future use.  Sets authInProgress to false\r\n   * if a token is found as an existing token means the authentication workflow has already been completed.\r\n   * @private\r\n   */\r\n  public checkForExistingToken(): boolean {\r\n    this.logger.debug('checkForExistingShellToken - checking for existing tokens');\r\n    this.checkAndTryToTakeOverExistingToken('kerberos');\r\n    this.checkAndTryToTakeOverExistingToken('credentials');\r\n\r\n    if (this.isUserAuthenticated) {\r\n      this.logger.debug('checkForExistingToken - next token found');\r\n      this.updateSubscriberData(this.currentAuthToken());\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Checks if the old token is valid and not expired, and tries to take over the token.\r\n   *\r\n   * @param tokenKey - The key of the token in the session storage.\r\n   * @param tokenType - The type of the token.\r\n   */\r\n  private checkAndTryToTakeOverExistingToken(tokenType: keyof AuthStatus): void {\r\n    const envTokenPrefix = this.envStore.isNotSelfHosted() ? 'shell-' : 't';\r\n\r\n    const oldToken = window.sessionStorage.getItem(environment.storageVariableNamePrefix + envTokenPrefix + tokenType);\r\n    const oldIdToken = window.sessionStorage.getItem(\r\n      environment.storageVariableNamePrefix + envTokenPrefix + 'id' + tokenType\r\n    );\r\n\r\n    if (oldToken != null && oldToken != '' && !this.isTokenExpired(oldToken)) {\r\n      const authToken = {\r\n        ...this.currentAuthToken(),\r\n        [tokenType]: oldToken,\r\n        idToken: {\r\n          kerberos: this.currentAuthToken().idToken?.kerberos,\r\n          credentials: this.currentAuthToken().idToken?.credentials,\r\n          [tokenType]: oldIdToken,\r\n        },\r\n      };\r\n      this.authToken.set(authToken);\r\n      this.updateAuthenticationStatus(tokenType as keyof AuthStatus, true);\r\n    } else {\r\n      this.unsetSessionStorageToken(tokenType);\r\n    }\r\n  }\r\n\r\n  public isTokenExpired(token: string | undefined | null): boolean {\r\n    const expTime = AuthenticationService.getJwtTokenExpirationTimeInMilliseconds(token);\r\n    if (AuthenticationService.isTokenTimeExpired(expTime)) {\r\n      //if the token expired, log the token and the current time, and return true\r\n      this.logger.debug('Token is expired', token, expTime, Date.now());\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public static getJwtTokenExpirationTimeInMilliseconds(token: string | undefined | null): number {\r\n    const parsedToken = JwtDecoder.decodeSafe<IfxJwtPayloadInterface>(token);\r\n\r\n    return AuthenticationService.convertTokenTimeInMilliseconds(parsedToken?.exp);\r\n  }\r\n\r\n  private static isTokenTimeExpired(tokenTime: number | undefined): boolean {\r\n    return AuthenticationService.convertTokenTimeInMilliseconds(tokenTime) <= Date.now();\r\n  }\r\n\r\n  private static convertTokenTimeInMilliseconds(time: number | undefined): number {\r\n    time = time ?? Date.now();\r\n\r\n    if (time.toString().length < Date.now().toString().length) {\r\n      // convert seconds to milliseconds\r\n      return time * 1000;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  /**\r\n   * Checks if the authentication process is in progress.\r\n   *\r\n   * @param tokenKey - The key used to retrieve the authentication token from the session storage.\r\n   * @returns A boolean indicating whether the authentication process is in progress.\r\n   */\r\n  private isAuthFlowRunningInternal(tokenKey: string): boolean {\r\n    const oldAuthObject = window.sessionStorage.getItem(tokenKey);\r\n\r\n    if (oldAuthObject == null || oldAuthObject === '') {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const libAuth = JSON.parse(oldAuthObject ?? '');\r\n      return libAuth?.storageCodeFlowInProgress != null && libAuth?.storageCodeFlowInProgress === true;\r\n    } catch (error) {\r\n      this.logger.warn(`Error parsing ${tokenKey}`, error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isAuthFlowOutdated(tokenKey: string): boolean {\r\n    const oldAuthObject = window.sessionStorage.getItem(tokenKey);\r\n\r\n    if (oldAuthObject == null || oldAuthObject === '') {\r\n      return false;\r\n    }\r\n\r\n    // invalid value for auth token have to be deleted\r\n    if (oldAuthObject === '{}') {\r\n      window.sessionStorage.removeItem(tokenKey);\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const libAuth = JSON.parse(oldAuthObject);\r\n      const isOutdated =\r\n        libAuth.access_token_expires_at && AuthenticationService.isTokenTimeExpired(libAuth.access_token_expires_at);\r\n\r\n      if (isOutdated) {\r\n        // remove the outdated token\r\n        window.sessionStorage.removeItem(tokenKey);\r\n      }\r\n\r\n      return isOutdated;\r\n    } catch (error) {\r\n      this.logger.warn(`Error parsing ${tokenKey}`, error);\r\n      // remove the invalid token\r\n      window.sessionStorage.removeItem(tokenKey);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * updateSubscriberData reads the subscriber info (that information related to the user's identity and their\r\n   * login status) from an AuthToken and stores this data within the system\r\n   * @param token AuthToken\r\n   * @private\r\n   */\r\n  private updateSubscriberData(token: AuthToken): void {\r\n    this.updateKerberosSubscriberData(token?.kerberos);\r\n    this.updateCredentialsSubscriberData(token?.credentials);\r\n\r\n    if (!!token.credentials || !!token.kerberos) {\r\n      this.currentSubscriberData.next(this.subscriberData);\r\n    }\r\n  }\r\n\r\n  private updateKerberosSubscriberData(kerberosToken: string | null): void {\r\n    if (kerberosToken != null) {\r\n      const parsedKToken = JwtDecoder.decodeSafe<IfxJwtPayloadInterface>(kerberosToken);\r\n\r\n      this.subscriberData.kerberos.subscriberName = parsedKToken?.subject ?? '';\r\n      this.subscriberData.kerberos.loginStatus = true;\r\n      this.subscriberData.kerberos.userName = parsedKToken?.displayName ?? '';\r\n      this.subscriberData.kerberos.clientId = parsedKToken?.client_id ?? '';\r\n      this.subscriberData.kerberos.hostProfileName = parsedKToken?.hostProfileName;\r\n    }\r\n  }\r\n\r\n  private updateCredentialsSubscriberData(credentialsToken: string | null): void {\r\n    if (credentialsToken != null) {\r\n      const parsedCToken = JwtDecoder.decodeSafe<IfxJwtPayloadInterface>(credentialsToken);\r\n\r\n      this.subscriberData.credentials.subscriberName = parsedCToken?.subject ?? '';\r\n      this.subscriberData.credentials.loginStatus = true;\r\n      this.subscriberData.credentials.userName = parsedCToken?.displayName ?? '';\r\n      this.subscriberData.credentials.clientId = parsedCToken?.client_id ?? '';\r\n      this.subscriberData.credentials.hostProfileName = parsedCToken?.hostProfileName;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * clearSubscriberData removes the subscriber data from the system and notifies all observers\r\n   * @private\r\n   */\r\n  private clearSubscriberData(): void {\r\n    this.subscriberData = new SubscriberData();\r\n    this.currentSubscriberData.next(this.subscriberData);\r\n  }\r\n\r\n  /**\r\n   * invalidateTokens will remove the current kerberos and credentials tokens from the system, reset isAuthenticated\r\n   * to false, clear userData, and remove the tKerberos and tCredentials session variables.\r\n   * @private\r\n   */\r\n  public invalidateTokens(): void {\r\n    this.logger.debug('invalidateTokens');\r\n\r\n    this.unsetSessionStorageToken('kerberos');\r\n    this.unsetSessionStorageToken('credentials');\r\n\r\n    this.authToken.set(new AuthToken());\r\n    this.setAuthenticationStatus(new AuthStatus());\r\n    this.clearSubscriberData();\r\n  }\r\n\r\n  private stopTokenWatcher() {\r\n    window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'SilentRefreshIsActive', 'false');\r\n    this.envStore.setSilentRefreshActive(false);\r\n    this.tokenRefreshWatcher$?.unsubscribe();\r\n    this.tokenRefreshWatcher$ = undefined;\r\n  }\r\n\r\n  /**\r\n   * setTokenRefresh calculates the time 10 minutes before the current JWT token expires and sets a timeout to\r\n   * trigger a silent token refresh at that time.\r\n   * @private\r\n   */\r\n  private setTokenRefresh() {\r\n    // ensure that the enviroment is not yet undefined\r\n    const isNotSelfHosted = this.envStore.isNotSelfHosted() || !this.envStore.isSelfHosted();\r\n    // only kerberos and self hosted environments are silent refreshable\r\n    if (this.getCredentialToken() || isNotSelfHosted || isSilentRefreshInProcess()) {\r\n      this.stopTokenWatcher();\r\n      return;\r\n    }\r\n\r\n    // watcher is already running\r\n    if (this.tokenRefreshWatcher$ && !this.tokenRefreshWatcher$?.closed) {\r\n      return;\r\n    }\r\n\r\n    window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'SilentRefreshIsActive', 'true');\r\n    this.tokenRefreshWatcher$ = interval(1000 * 60)\r\n      .pipe(takeUntilDestroyed(this.destroyRef$))\r\n      .subscribe(() => {\r\n        const tokenExpiryTime = AuthenticationService.getJwtTokenExpirationTimeInMilliseconds(this.getKerberosToken());\r\n        const currentTime = Date.now();\r\n        //This ensures that the token is refreshed 10 minutes (600000 ms) before its actual expiry. (7080000 = 118 minutes for testing purposes)\r\n        const tokenExpiryIn = tokenExpiryTime - currentTime - 600000;\r\n        if (tokenExpiryIn <= 60000) {\r\n          this.forcedSilentRefresh();\r\n        }\r\n      });\r\n  }\r\n\r\n  public forcedTokenRefresh() {\r\n    if (this.envStore.isSelfHosted() && !this.getCredentialToken()) {\r\n      this.forcedSilentRefresh();\r\n    }\r\n\r\n    if (this.envStore.isSelfHosted()) {\r\n      // ToDo: refactor logout handling\r\n    }\r\n  }\r\n\r\n  private forcedSilentRefresh() {\r\n    if (this.envStore.isSilentRefreshEnabled()) {\r\n      this.envStore.setSilentRefreshActive(false);\r\n      window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'oldToken');\r\n    }\r\n\r\n    const forcedSilentRefresh$ = interval(500)\r\n      .pipe(takeUntilDestroyed(this.destroyRef$), take(1))\r\n      .subscribe({\r\n        next: () => {\r\n          window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'SilentRefreshIsActive', 'true');\r\n          this.logger.info('Silent refresh of AuthToken in process');\r\n          window.sessionStorage.setItem(\r\n            environment.storageVariableNamePrefix + 'SilentRefreshInProcess',\r\n            new Date(Date.now()).toString()\r\n          );\r\n\r\n          this.envStore.setSilentRefreshActive(true);\r\n          forcedSilentRefresh$?.unsubscribe();\r\n        },\r\n        error: error => {\r\n          this.logger.error('Error in forcedSilentRefresh', error);\r\n          forcedSilentRefresh$?.unsubscribe();\r\n        },\r\n      });\r\n  }\r\n\r\n  /**\r\n   * clear the timeout process\r\n   * @public\r\n   */\r\n  //\r\n  public stopTimeoutMethod(timeoutMethod: number | undefined | null): number | undefined | null {\r\n    if (timeoutMethod != null) {\r\n      clearTimeout(timeoutMethod);\r\n      this.logger.debug('TimeoutMethod is cleared', timeoutMethod);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private get currentEnvironment(): string | undefined {\r\n    return this.envStore.executionEnvironment();\r\n  }\r\n\r\n  private localDateToUtc(date: Date): number {\r\n    return Date.UTC(\r\n      date.getUTCFullYear(),\r\n      date.getUTCMonth(),\r\n      date.getUTCDate(),\r\n      date.getUTCHours(),\r\n      date.getUTCMinutes(),\r\n      date.getUTCSeconds(),\r\n      date.getUTCMilliseconds()\r\n    );\r\n  }\r\n\r\n  private setExecutionEnvironment() {\r\n    this.envManager.setExecutionEnvironment(this.envStore.executionEnvironment() ?? 'SELF');\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { UfeCommand } from '../models/UfeCommand';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IPCService implements OnDestroy {\r\n  private currentUfeCommand: BehaviorSubject<UfeCommand> = new BehaviorSubject<UfeCommand>(new UfeCommand());\r\n\r\n  ngOnDestroy() {\r\n    this.currentUfeCommand.complete();\r\n  }\r\n\r\n  /**\r\n   * ufeCommands returns an observable of UfeCommand.  This method is subscribed to by various other parts of the\r\n   * library so they can receive the UfeCommands passed on by the MessageListenerDirective\r\n   */\r\n  public ufeCommands(): Observable<UfeCommand> {\r\n    return this.currentUfeCommand.asObservable();\r\n  }\r\n\r\n  /**\r\n   * relayCommand allows a UfeCommand to be relayed to all subscribers to the IPC.  Generally, this method is only\r\n   * called by the MessageListenerDirective\r\n   * @param cmd\r\n   */\r\n  public relayCommand(cmd: UfeCommand) {\r\n    this.currentUfeCommand.next(cmd);\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { IfxUfeLoggerService } from '../shared/logging/ifx-ufe-logger.service';\r\nimport { isInIframe, isSilentRefreshInProcess } from '../shared/helpers/common.helpers';\r\nimport { UfeEnvironmentStore } from '../stores/ufe-environment.store';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UrlCaptureService {\r\n  private logger = inject(IfxUfeLoggerService);\r\n  private envStore = inject(UfeEnvironmentStore);\r\n\r\n  /**\r\n   * setBaseRoute stores a route that will be returned from getUrl() if no other route has been set.  Unlike routes\r\n   * set by storeUrl, the base route is retained after use.\r\n   * @param url\r\n   */\r\n  public setBaseRoute(url: string) {\r\n    window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'baseRoute', url);\r\n  }\r\n\r\n  /**\r\n   * storeUrl stores this URL for later reference by the application.  After this route has been retrieved via getUrl,\r\n   * it is erased and this service will return the base route on future calls to getUrl if no new route is passed to\r\n   * this method\r\n   * @param url\r\n   */\r\n  public storeUrl(url: string) {\r\n    window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'deepLink', url);\r\n  }\r\n\r\n  /**\r\n   * getUrl returns the previously stored URL.  If a route was passed to this service via storeUrl and not yet retrieved,\r\n   * this is the route that will be returned.  Otherwise, the base route passed to setBaseRoute is returned.\r\n   */\r\n  public getUrl(): string {\r\n    let result = '';\r\n    const deepLink = window.sessionStorage.getItem(environment.storageVariableNamePrefix + 'deepLink');\r\n\r\n    if (deepLink) {\r\n      result = deepLink ?? '';\r\n      window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'deepLink');\r\n    } else {\r\n      result = window.sessionStorage.getItem(environment.storageVariableNamePrefix + 'baseRoute') ?? '';\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","export enum AuthMode {\r\n  // Auto Login via Kerberos\r\n  Kerberos = 0,\r\n\r\n  // login via Credentials\r\n  Credentials = 1,\r\n\r\n  // Show page for user selection\r\n  Ask = 2,\r\n}\r\n","import { UfeCommand } from '../../models/UfeCommand';\r\nimport { WebResource } from '../web-resource-locator/models/web-resource';\r\nimport { WrlApplicationInstanceWithVersions } from '../web-resource-locator/models/wrl-application-instance';\r\nimport {\r\n  OpenWebResourceCommandArgument,\r\n  WrlCommandArgument,\r\n} from '../web-resource-locator/models/wrl-command-argument';\r\n\r\nexport function isUfeCommand(command: UfeCommand): command is UfeCommand {\r\n  return !!(command as UfeCommand).command && !!(command as UfeCommand).sender;\r\n}\r\n\r\nexport function isWrlCommandArgument(item: WrlCommandArgument): item is WrlCommandArgument {\r\n  return (\r\n    !!(item as WrlCommandArgument).applicationName &&\r\n    !!(item as WrlCommandArgument).resourceName &&\r\n    !!(item as WrlCommandArgument).args &&\r\n    (item as WrlCommandArgument).isAnonymous !== undefined\r\n  );\r\n}\r\n\r\nexport function isWebResouce(item: WebResource): item is WebResource {\r\n  return !!(item as WebResource).appName && !!(item as WebResource).resourceName;\r\n}\r\n\r\nexport function isOpenWebResourceCommandArgument(\r\n  item: OpenWebResourceCommandArgument\r\n): item is OpenWebResourceCommandArgument {\r\n  return (\r\n    isWebResouce((item as OpenWebResourceCommandArgument).webResource) &&\r\n    (item as OpenWebResourceCommandArgument).args !== undefined\r\n  );\r\n}\r\n\r\nexport function isWrlApplicationInstanceWithVersions(\r\n  item: WrlApplicationInstanceWithVersions\r\n): item is WrlApplicationInstanceWithVersions {\r\n  return (item as WrlApplicationInstanceWithVersions).setVersions !== undefined;\r\n}\r\n","export class HelpItem {\r\n  public ufeName: string;\r\n  public url: URL;\r\n\r\n  public constructor(name: string, uri: URL) {\r\n    this.ufeName = name;\r\n    this.url = uri;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy, inject } from '@angular/core';\r\nimport { IPCService } from './ipc.service';\r\nimport { BehaviorSubject, Observable, skip, Subscription } from 'rxjs';\r\nimport { UfeCommand } from '../models/UfeCommand';\r\nimport { AuthToken } from '../models/AuthToken';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { SubscriberData } from '../models/SubscriberData';\r\nimport { AuthStatus } from '../models/AuthStatus';\r\nimport { HelpItem } from '../models/helpItem';\r\nimport { toObservable } from '@angular/core/rxjs-interop';\r\nimport { UfeEnvironmentStore } from '../stores/ufe-environment.store';\r\nimport { ExcecutionEnvironmentType } from '../models/ufe-environment.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DataCommunicationService implements OnDestroy {\r\n  private ipc = inject(IPCService);\r\n  private auth = inject(AuthenticationService);\r\n  private environmentStore = inject(UfeEnvironmentStore);\r\n\r\n  private subscriberData: SubscriberData = new SubscriberData();\r\n  private currentSubscriberData: BehaviorSubject<SubscriberData> = new BehaviorSubject<SubscriberData>(\r\n    this.subscriberData\r\n  );\r\n  private currentCommand: BehaviorSubject<UfeCommand> = new BehaviorSubject<UfeCommand>(new UfeCommand());\r\n  private allSubs: Subscription = new Subscription();\r\n  private helpLinks: HelpItem[] = [];\r\n  public currentHelpLinks: BehaviorSubject<HelpItem[]> = new BehaviorSubject<HelpItem[]>(this.helpLinks);\r\n  public environment$: unknown;\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {\r\n    this.environment$ = toObservable(this.environmentStore.executionEnvironment);\r\n\r\n    const subscriberSub = this.auth.subscriberData$.subscribe(data => {\r\n      this.subscriberData = data;\r\n      this.currentSubscriberData.next(this.subscriberData);\r\n    });\r\n    this.allSubs.add(subscriberSub);\r\n\r\n    const ufeSub = this.ipc.ufeCommands().subscribe(cmd => {\r\n      if (cmd.command === 'HELP_LINK') {\r\n        this.updateHelpLinks(cmd);\r\n      }\r\n\r\n      this.currentCommand.next(cmd);\r\n    });\r\n    this.allSubs.add(ufeSub);\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.allSubs.unsubscribe();\r\n    this.currentCommand.complete();\r\n    this.currentHelpLinks.complete();\r\n  }\r\n\r\n  /**\r\n   * getEnviro returns a string indicating what environment this uFE is running in SELF if running stand alone,\r\n   * SHELL if running under a web shell, EMBEDDED if running embedded in another environment such as a desktop\r\n   * or iOS app.\r\n   */\r\n  public getEnvironment(): string {\r\n    return this.environmentStore.executionEnvironment() ?? '';\r\n  }\r\n\r\n  /**\r\n   * getAuthToken returns an observable of AuthToken containing all JWT tokens received from the STS\r\n   */\r\n  public getAuthToken(): Observable<AuthToken> {\r\n    return this.auth.currentAuthToken$;\r\n  }\r\n\r\n  /**\r\n   * getKerberosToken returns the JWT token for the kerberos identity returned by the STS if such JWT has been received.\r\n   * Null otherwise.\r\n   */\r\n  public getKerberosToken(): object | null {\r\n    return this.auth.currentAuthToken()?.kerberos;\r\n  }\r\n\r\n  /**\r\n   * getCredential token returns the JWT token for the credential identity if such JWT has been received from the STS,\r\n   * null otherwise\r\n   */\r\n  public getCredentialToken(): object | null {\r\n    return this.auth.currentAuthToken()?.credentials;\r\n  }\r\n\r\n  /**\r\n   * ufeCommands returns an observable through which all uFE commands are passed from the framework to the client uFE\r\n   */\r\n  public ufeCommands(): Observable<UfeCommand> {\r\n    return this.currentCommand.asObservable();\r\n  }\r\n\r\n  /**\r\n   * ufeCommands$ returns an observable which emits all new uFE commands from the framework to the client uFE\r\n   */\r\n  public get ufeCommands$(): Observable<UfeCommand> {\r\n    return this.currentCommand.pipe(skip(1));\r\n  }\r\n\r\n  /**\r\n   * IsAuthenticated is an observable that updates whenever an authentication event occurs\r\n   * @constructor\r\n   */\r\n  public get IsAuthenticated$(): Observable<AuthStatus> {\r\n    return this.auth.isAuthenticated$;\r\n  }\r\n\r\n  /**\r\n   * currentAuthStatus provides a snapshot at the moment of calling of this uFE's authentication status.  This method\r\n   * should be preferred for routing guards such as canActivate as it is synchronous and does not require a subscription\r\n   * to an observable.  Asynchronous operations can be problematic for routing guards.\r\n   */\r\n  public get currentAuthStatus(): AuthStatus {\r\n    return this.auth.currentAuthenticationStatus();\r\n  }\r\n\r\n  /**\r\n   * getSubscriberData returns a SubscriberData object that gives the current status for user authentication.\r\n   */\r\n  public getSubscriberData(): SubscriberData {\r\n    return this.subscriberData;\r\n  }\r\n\r\n  public get subscriberData$() {\r\n    return this.currentSubscriberData.asObservable();\r\n  }\r\n\r\n  public loginCredentials(): void {\r\n    this.auth.loginCredentials();\r\n  }\r\n\r\n  public loginKerberos(): void {\r\n    this.auth.loginKerberos();\r\n  }\r\n\r\n  public refreshToken(): void {\r\n    this.auth.forcedTokenRefresh();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.auth.logout();\r\n  }\r\n\r\n  public getHelpLinks(): Observable<HelpItem[]> {\r\n    return this.currentHelpLinks.asObservable();\r\n  }\r\n\r\n  public get isUserAuthenticated(): boolean {\r\n    return this.auth.isUserAuthenticated;\r\n  }\r\n\r\n  public get currentExecutionEnvironment() : ExcecutionEnvironmentType  {\r\n    return this.environmentStore.executionEnvironment();\r\n  }\r\n\r\n  public get ufeInstanceName() : string  {\r\n    return this.environmentStore.ufeInstanceName() ?? '';\r\n  }\r\n\r\n  private updateHelpLinks(cmd: UfeCommand) {\r\n    let nextLink = new HelpItem(cmd.sender, cmd.params[0]);\r\n    this.helpLinks.push(nextLink);\r\n    this.currentHelpLinks.next(this.helpLinks);\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { RootInjectorGuard } from '../shared/type-guards/root-injector.guard';\r\nimport { UfeCommand } from '../models/UfeCommand';\r\nimport { DataCommunicationService } from '../services/data-communication.service';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { isUfeCommand } from '../shared/helpers/ifx-ufe-type.guards';\r\nimport { CommandHandlerInterface } from './models/command-handler.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UfeCommandProcessorService extends RootInjectorGuard<UfeCommandProcessorService> {\r\n  private dataComm = inject(DataCommunicationService);\r\n  private commandHandlers: CommandHandlerInterface[] = [];\r\n\r\n  constructor() {\r\n    super('UfeCommandProcessorService');\r\n\r\n    this.dataComm\r\n      .ufeCommands()\r\n      .pipe(takeUntilDestroyed())\r\n      .subscribe((cmd: UfeCommand) => {\r\n        this.onUfeCommandMessage(cmd);\r\n      });\r\n  }\r\n\r\n  public registerHandler(handler: CommandHandlerInterface): void {\r\n    this.commandHandlers.push(handler);\r\n  }\r\n\r\n  /**\r\n   * onMessage responds to UfeCommands from instantiated Micro Front Ends.\r\n   * @param msg UfeCommand\r\n   */\r\n  private onUfeCommandMessage(ufeCommand: UfeCommand): void {\r\n    if (!isUfeCommand(ufeCommand)) {\r\n      return;\r\n    }\r\n\r\n    this.commandHandlers\r\n      .filter(f => f.canProcess())\r\n      .forEach(handler => {\r\n        handler.handleCommand(ufeCommand);\r\n      });\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { RootInjectorGuard } from '../shared/type-guards/root-injector.guard';\r\nimport { CommandHandlerInterface } from './models/command-handler.interface';\r\nimport { UfeCommand } from '../models/UfeCommand';\r\nimport { UfeEnvironmentStore } from '../stores/ufe-environment.store';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppCommandHandlerService\r\n  extends RootInjectorGuard<AppCommandHandlerService>\r\n  implements CommandHandlerInterface\r\n{\r\n  private envStore = inject(UfeEnvironmentStore);\r\n\r\n  constructor() {\r\n    super('AppCommandHandlerService');\r\n  }\r\n\r\n  public canProcess(): boolean {\r\n    return true;\r\n  }\r\n\r\n  public handleCommand(ufeCommand: UfeCommand): void {\r\n    switch (ufeCommand.command) {\r\n      case 'SHOW_HEADER':\r\n        this.envStore.setShowHeader(true);\r\n        break;\r\n\r\n      case 'HIDE_HEADER':\r\n        this.envStore.setShowHeader(false);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { ExcecutionEnvironmentType } from \"./ufe-environment.interface\";\r\n\r\nexport class WindowRefTuple {\r\n  name: string = '';\r\n  ref: Window | null;\r\n  url: string = '';\r\n  isLoaded = false;\r\n  isActive = false;\r\n  targetEnv: ExcecutionEnvironmentType | undefined = undefined;\r\n\r\n  constructor(nm: string, reference: Window, url = '', targetEnv: ExcecutionEnvironmentType | undefined = undefined) {\r\n    this.name = nm;\r\n    this.ref = reference;\r\n    this.url = url;\r\n    this.targetEnv = targetEnv;\r\n  }\r\n}\r\n","export class UfeDialogConfig {\r\n  width = '800px';\r\n  height = '500px';\r\n}\r\n","import { UfeWrlTargetLocationType } from '../shared/web-resource-locator/models/wrl-command-argument';\r\nimport { UfeDialogConfig } from './UfeDialogConfig';\r\nimport { WindowRefTuple } from './WindowRefTuple';\r\n\r\n/**\r\n * AppDescription contains the data necessary to identify and connect to a uFE\r\n */\r\nexport class AppDescription {\r\n  appName = '';\r\n  resourceName = '';\r\n  /**\r\n   * the combined name of appName and resourceName conjunted with a underscore. If either one is empty a empty string is returned.\r\n   */\r\n  combinedName = '';\r\n  url = '';\r\n  location: UfeWrlTargetLocationType | string | undefined = undefined;\r\n  isLoaded = false;\r\n  loadOnShellInit = false;\r\n  dialogConfig: UfeDialogConfig | undefined;\r\n\r\n  windowReference: WindowRefTuple | undefined;\r\n\r\n  constructor(nm = '', rn = '', url = '', loc = undefined) {\r\n    this.appName = nm;\r\n    this.resourceName = rn;\r\n    this.url = url;\r\n    this.location = loc;\r\n    this.combinedName = AppDescription.getCombinedName(this.appName, this.resourceName);\r\n  }\r\n\r\n  public static create(\r\n    appName: string,\r\n    resourceName: string,\r\n    url: string | undefined,\r\n    location: UfeWrlTargetLocationType | undefined | string,\r\n    dialogConfig: UfeDialogConfig | undefined = undefined\r\n  ): AppDescription {\r\n    const app = new AppDescription();\r\n    app.appName = appName;\r\n    app.resourceName = resourceName;\r\n    app.url = url ?? '';\r\n    app.location = location;\r\n    app.combinedName = this.getCombinedName(appName, resourceName);\r\n    app.dialogConfig = this.getDialogConfig(location, dialogConfig);\r\n    return app;\r\n  }\r\n\r\n  private static getCombinedName(appName: string, resourceName: string): string {\r\n    return appName.length !== 0 && resourceName.length !== 0 ? `${appName}_${resourceName}` : appName;\r\n  }\r\n\r\n  private static getDialogConfig(\r\n    location: UfeWrlTargetLocationType | string | undefined,\r\n    dialogConfig: UfeDialogConfig | undefined\r\n  ): UfeDialogConfig | undefined {\r\n    if (location != null && location.startsWith('dialog')) {\r\n      return dialogConfig ?? new UfeDialogConfig();\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public static copy(toCopy: AppDescription): AppDescription {\r\n    return this.create(toCopy.appName, toCopy.resourceName, toCopy.url, toCopy.location, toCopy.dialogConfig);\r\n  }\r\n}\r\n","import { computed, Injectable, signal } from '@angular/core';\r\nimport { AppDescription } from '../../../models/AppDescription';\r\nimport { AvailableUfe } from '../models/available-ufe';\r\nimport { RootInjectorGuard } from '../../type-guards/root-injector.guard';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ShellStateStore extends RootInjectorGuard<ShellStateStore> {\r\n  private _state = signal<ShellState>({\r\n    availableUfe: [],\r\n    availableUfeLoaded: false,\r\n    scenariosLoaded: false,\r\n    activeApps: [],\r\n    layout: '',\r\n  });\r\n\r\n  constructor() {\r\n    super('ShellStateStore');\r\n\r\n    const storedLayout = window.localStorage.getItem(environment.storageVariableNamePrefix + 'layout');\r\n    if (storedLayout) {\r\n      this.setLayout(storedLayout);\r\n    }\r\n  }\r\n\r\n  public availableUfe = computed(() => <AvailableUfe>{ AvailableUfe: this._state().availableUfe });\r\n  public availableUfeLoaded = computed(() => this._state().availableUfeLoaded);\r\n  public scenariosLoaded = computed(() => this._state().scenariosLoaded);\r\n  public layout = computed(() => this._state().layout);\r\n\r\n  public appList = computed(() => this._state().availableUfe);\r\n  public activeApps = computed(() => this._state().activeApps);\r\n\r\n  public readonly appSelected$ = new Subject<AppDescription>();\r\n  public readonly appDeselected$ = new Subject<AppDescription>();\r\n\r\n  public setAvailableUfe(availableUfe: AppDescription[]) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      availableUfe: availableUfe,\r\n    }));\r\n  }\r\n\r\n  public setAvailableUfeLoaded(availableUfeLoaded: boolean) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      availableUfeLoaded: availableUfeLoaded,\r\n    }));\r\n  }\r\n\r\n  public setActiveApps(activeApps: AppDescription[]) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      activeApps: activeApps,\r\n    }));\r\n  }\r\n\r\n  public setScenariosLoaded(scenariosLoaded: boolean) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      scenariosLoaded: scenariosLoaded,\r\n    }));\r\n  }\r\n\r\n  public setLayout(layout: string) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      layout: layout,\r\n    }));\r\n    window.localStorage.setItem(environment.storageVariableNamePrefix + 'layout', layout);\r\n  }\r\n\r\n  public getUfeApp(name: string): AppDescription {\r\n    return this.appList().find(ufeApp => ufeApp.combinedName === name) ?? new AppDescription();\r\n  }\r\n}\r\n\r\nexport interface ShellState {\r\n  availableUfe: AppDescription[];\r\n  availableUfeLoaded: boolean;\r\n  scenariosLoaded: boolean;\r\n  activeApps: AppDescription[];\r\n  layout: string;\r\n}\r\n","import { inject, Injectable, OnDestroy } from '@angular/core';\r\nimport { UfeCommand } from '../models/UfeCommand';\r\nimport { WindowRefTuple } from '../models/WindowRefTuple';\r\nimport { AppDescription } from '../models/AppDescription';\r\nimport { Subscription } from 'rxjs';\r\nimport { UfeEnvironmentStore } from '../stores/ufe-environment.store';\r\nimport { RootInjectorGuard } from '../shared/type-guards/root-injector.guard';\r\nimport { ExcecutionEnvironmentType } from '../models/ufe-environment.interface';\r\nimport { ShellStateStore } from '../shared/front-end-discovery/stores/shell-state.store';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PeerCommunicatorService extends RootInjectorGuard<PeerCommunicatorService> implements OnDestroy {\r\n  private envStore = inject(UfeEnvironmentStore);\r\n\r\n  private peerReferences: WindowRefTuple[] = [];\r\n  private messageBuffer: UfeCommand[] = [];\r\n  private subscriptions: Subscription = new Subscription();\r\n  private shellStateStore = inject(ShellStateStore);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {\r\n    super('PeerCommunicatorService');\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * openPeerInTab will open a peer uFE in a new tab.  A reference is kept to this tab to allow passing of data to the peer\r\n   * @param msg UfeCommand with the command value 'OPEN_UFE' and the registered name of the target ufe as element 0 of\r\n   * the params array\r\n   * @private\r\n   */\r\n  public openPeerInTab(\r\n    msg: UfeCommand,\r\n    openInWindow: boolean,\r\n    executionEnv?: ExcecutionEnvironmentType | undefined\r\n  ): WindowRefTuple | null {\r\n    const targetAppDescription = this.getAppDescription(msg.params[0]);\r\n\r\n    let url: URL | undefined;\r\n\r\n    if (targetAppDescription?.url != null && this.canParseUrl(targetAppDescription.url)) {\r\n      url = new URL(targetAppDescription.url);\r\n\r\n      if (!!executionEnv) {\r\n        url.searchParams.set('_ifxEnvironment', executionEnv);\r\n      }\r\n\r\n      if (executionEnv === 'SHELL') {\r\n        url.searchParams.set('_ifxHeader', url.searchParams.get('_ifxHeader') ?? 'true');\r\n      }\r\n\r\n      return this.openPeerResourceInTab(msg.params[0], openInWindow, url, executionEnv);\r\n    } else {\r\n      this.logger.error(`Skip opening peer in tab. The url '${targetAppDescription?.url}' is not valid`);\r\n      throw new Error(\r\n        `Invalid URL for target uFE ${targetAppDescription?.combinedName ?? targetAppDescription?.appName ?? ''}`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * openPeerInTab will open a peer uFE in a new tab.  A reference is kept to this tab to allow passing of data to the peer\r\n   * @param resourceName the name of the web resource\r\n   * @param url the url which should be opened\r\n   * @returns the opended instance or the already open instance\r\n   */\r\n  public openPeerResourceInTab(resourceName: string, openNewWindow: boolean, url: URL | null, targetEnv: ExcecutionEnvironmentType): WindowRefTuple | null {\r\n    this.pruneDeadRefs();\r\n\r\n    //if we already have a ref to a uFE do not open a new one\r\n    const existingRef = this.peerReferences.filter(element => element.name == resourceName);\r\n    if (existingRef.length != 0) {\r\n      if (openNewWindow) {\r\n        // Bring the newly opened window to the front\r\n        existingRef[0].ref?.focus();\r\n      }\r\n      return existingRef[0];\r\n    }\r\n\r\n    let nextRef: WindowRefTuple | null = null;\r\n    if (url != null && url.hostname.match(environment.validUfeHostnamePattern)) {\r\n      let ref: Window | undefined | null;\r\n      const width = 800;\r\n      const height = 600;\r\n      // Calculate the position to center the window\r\n      const leftPosition = (screen.width - width) / 2;\r\n      const topPosition = (screen.height - height) / 2;\r\n\r\n      const windowFeatures = `toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=${width},height=${height},top=${topPosition},left=${leftPosition}`;\r\n\r\n      if (openNewWindow) {\r\n        ref = window.open(url, resourceName, windowFeatures);\r\n        // Bring the newly opened window to the front\r\n        ref?.focus();\r\n      } else {\r\n        ref = this.openNewWindow(url);\r\n      }\r\n\r\n      if (ref == null) {\r\n        throw new Error('Could not open new window for peer uFE');\r\n      }\r\n      nextRef = new WindowRefTuple(resourceName, ref, url.href, targetEnv);\r\n      this.peerReferences.push(nextRef);\r\n    } else {\r\n      if (url == null) {\r\n        this.logger.error('Target uFE not available through the discovery service');\r\n      } else {\r\n        this.logger.error(\r\n          `URL for target uFE [${resourceName}] is not matching /${environment.validUfeHostnamePattern}/ hostname pattern.`\r\n        );\r\n      }\r\n    }\r\n\r\n    return nextRef;\r\n  }\r\n\r\n  /**\r\n   * sendPeerMessageInTab sends this UfeCommand to the peer uFE specified in UfeCommand.params[0] if that peer uFE\r\n   * was opened by this uFE and a reference to the recipient is included in the list of active references.\r\n   * @param msg UfeCommand The command to be sent to the peer uFE.  Must include the recipients registered name\r\n   * in UfeCommand.params[0]\r\n   * @private\r\n   */\r\n  public sendPeerMessageInTab(\r\n    msg: UfeCommand,\r\n    openInwindow: boolean,\r\n    executionEnv?: ExcecutionEnvironmentType | undefined\r\n  ): WindowRefTuple | undefined {\r\n    const openMsg = new UfeCommand(this.ufeName, 'OPEN_UFE', [msg.params[0]]);\r\n    this.openPeerInTab(openMsg, openInwindow, executionEnv);\r\n\r\n    const targetWindowReference = this.peerReferences.find(ref => ref.name == msg.params[0]);\r\n    if (targetWindowReference == null) {\r\n      throw new Error('No Reference to the target uFE is available');\r\n    }\r\n\r\n    const targetDescription = this.getAppDescription(targetWindowReference.name);\r\n    if (targetDescription == null) {\r\n      throw new Error('Target uFE not available through the discovery service');\r\n    }\r\n\r\n    targetDescription.windowReference = targetWindowReference;\r\n\r\n    //if the target is not yet loaded, buffer the message and return, this method will get called again once the\r\n    //PEER_READY signal is received\r\n    if (!targetWindowReference.isLoaded) {\r\n      this.messageBuffer.push(msg);\r\n      this.logger.debug('Buffered message for ' + msg.sender);\r\n      return targetWindowReference;\r\n    }\r\n\r\n    //change the sender, so it will not be 'SELF'; otherwise the receiving uFE will attempt to forward this command.\r\n    msg.sender = 'PEER_TAB';\r\n    if (targetWindowReference.url != null) {\r\n      try {\r\n        targetWindowReference.ref?.postMessage(msg, targetWindowReference.url);\r\n      } catch (e) {\r\n        this.logger.error('Error sending message to peer_in_tab: ', e);\r\n      }\r\n    } else {\r\n      this.logger.error(`Target uFE [${targetWindowReference.name}] url is null`);\r\n    }\r\n\r\n    return targetWindowReference;\r\n  }\r\n\r\n  public closeAllPeerTabs() {\r\n    for (const ref of this.peerReferences) {\r\n      ref.ref?.close();\r\n    }\r\n    this.peerReferences = [];\r\n  }\r\n\r\n  /**\r\n   * pruneDeadRefs iterates through the current list of activeReferences to peer uFE and removes any in which the\r\n   * window has been closed.\r\n   * @private\r\n   */\r\n  private pruneDeadRefs() {\r\n    let count = 0;\r\n    for (let i = 0; i < this.peerReferences.length; ++i) {\r\n      if (this.peerReferences[i].ref?.closed) {\r\n        this.peerReferences.splice(i, 1);\r\n        i--; //to repeat this index, we just spliced and every element moved down one index\r\n        count++;\r\n      }\r\n    }\r\n\r\n    return count;\r\n  }\r\n\r\n  private openNewWindow(url: URL): Window | null | undefined {\r\n    return window.open(url.href);\r\n  }\r\n\r\n  /**\r\n   * setPeerReady iterates through the current list of active peer references, once finding a reference whose name matches\r\n   * that of the UfeCommand's sender field, it sets that references isLoaded field to true, indicating the reference\r\n   * is ready to receive further commands\r\n   * @param cmd UfeCommand: An UfeCommand where the command field is set to UFE_READY\r\n   * @private\r\n   */\r\n  public setPeerReady(cmd: UfeCommand) {\r\n    if (cmd.sender === 'SELF') {\r\n      cmd.sender = this.ufeName;\r\n    }\r\n\r\n    for (const ref of this.peerReferences) {\r\n      if (ref.name == cmd.sender) {\r\n        ref.isLoaded = true;\r\n        this.sendOpenerID(ref);\r\n      }\r\n    }\r\n\r\n    let idx = 0;\r\n    for (const msg of this.messageBuffer) {\r\n      if (msg.params[0] == cmd.sender) {\r\n        try {\r\n          this.sendPeerMessageInTab(msg, false);\r\n        } catch (e) {\r\n          this.logger.error('Error sending buffered message: ' + e);\r\n        }\r\n\r\n        this.messageBuffer.splice(idx, 1);\r\n      }\r\n      idx++;\r\n    }\r\n  }\r\n\r\n  public registerOpener(cmd: UfeCommand) {\r\n      try {\r\n        const ref = new WindowRefTuple(cmd.sender, window.opener, window.opener.location.href, 'SHELL');\r\n        ref.isLoaded = true;\r\n        this.peerReferences.push(ref);\r\n      } catch {\r\n        this.logger.warn('Error registering opener: ');\r\n      }\r\n  }\r\n\r\n  private sendOpenerID(app: WindowRefTuple) {\r\n    const cmd = new UfeCommand(this.ufeName, 'OPENER_ID', []);\r\n    app.ref?.postMessage(cmd, '*');\r\n  }\r\n\r\n  private get ufeName(): string {\r\n    //TodDo: only the instanceName identify the correct ufe instacne. Have to be refactored later.\r\n    return this.envStore.ufeName() ?? '';\r\n  }\r\n\r\n  /**\r\n   * getAppDescription returns an AppDescription for the uFE that has the registered name passed in ufeName\r\n   * @param appCombinedName string: The registered name of the uFE to return the AppDescription for\r\n   * @private\r\n   */\r\n  private getAppDescription(appCombinedName: string): AppDescription | undefined {\r\n    const app = this.shellStateStore\r\n      .availableUfe()\r\n      .AvailableUfe.find(availableApp => availableApp.combinedName === appCombinedName);\r\n\r\n    return app;\r\n  }\r\n\r\n  private canParseUrl(url: string) {\r\n    return URL.canParse(url)\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { inject, Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { environment } from '../../../environments/environment';\r\nimport { IfxUfeLoggerService } from '../../shared/logging/ifx-ufe-logger.service';\r\n\r\n@Pipe({\r\n  name: 'ifxUfeSafeUrl',\r\n})\r\nexport class UfeSafeUrlPipe implements PipeTransform {\r\n  private sanitizer = inject(DomSanitizer);\r\n\r\n  hostnamePattern = environment.validUfeHostnamePattern;\r\n\r\n  private logger = inject(IfxUfeLoggerService);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {}\r\n\r\n  transform(url: string): any {\r\n    if (URL.canParse(url)) {\r\n      const parsedUrl = new URL(url);\r\n      if (parsedUrl.hostname.match(this.hostnamePattern)) {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n      }\r\n    }\r\n\r\n    this.logger.error('Invalid URL', url);\r\n\r\n    return url;\r\n  }\r\n}\r\n","import { Component, inject } from '@angular/core';\r\nimport { AppDescription } from '../../models/AppDescription';\r\nimport { MAT_DIALOG_DATA, MatDialogActions, MatDialogClose, MatDialogContent } from '@angular/material/dialog';\r\nimport { MatIconButton } from '@angular/material/button';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { CdkScrollable } from '@angular/cdk/scrolling';\r\nimport { UfeSafeUrlPipe } from '../../pipes/ufe-safe-url/ufe-safe-url.pipe';\r\nimport { IfxUfeLoggerService } from '../../shared/logging/ifx-ufe-logger.service';\r\n\r\n\r\nexport class UfeDialogCallArgs {\r\n  constructor(public app: AppDescription) {}\r\n}\r\n\r\n@Component({\r\n  selector: 'ifx-ufe-dialog',\r\n  templateUrl: './ufe-dialog.component.html',\r\n  styleUrls: ['./ufe-dialog.component.css'],\r\n  imports: [MatDialogActions, MatIconButton, MatDialogClose, MatIcon, CdkScrollable, MatDialogContent, UfeSafeUrlPipe],\r\n})\r\nexport class UfeDialogComponent {\r\n  data = inject<UfeDialogCallArgs>(MAT_DIALOG_DATA);\r\n  logger = inject<IfxUfeLoggerService>(IfxUfeLoggerService);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {\r\n    if (!this.data || !this.data.app) {\r\n      this.logger.error(`UfeDialogComponent requires arguments!`);\r\n    }\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div class=\"header-container\">\r\n    <mat-dialog-actions\r\n      align=\"end\"\r\n      class=\"mat-dialog-actions\">\r\n      <div>\r\n        <button\r\n          mat-icon-button\r\n          [mat-dialog-close]=\"true\"\r\n          cdkFocusInitial>\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-dialog-actions>\r\n  </div>\r\n\r\n  <div class=\"dialog-content\">\r\n    <mat-dialog-content class=\"mat-dialog-content\">\r\n      <iframe\r\n        [src]=\"data.app.url | ifxUfeSafeUrl\"\r\n        sandbox=\"allow-forms allow-scripts allow-same-origin allow-popups allow-top-navigation allow-top-navigation-by-user-activation\"\r\n        id=\"{{ data.app.combinedName }}\"\r\n        class=\"iframe-dialog-size\">\r\n      </iframe>\r\n    </mat-dialog-content>\r\n  </div>\r\n</div>\r\n","export class AppLink {\r\n  public englishName: string;\r\n  public germanName: string;\r\n  public uri: URL;\r\n\r\n  constructor(eName = '', gName = '', uri: URL | null = null) {\r\n    this.englishName = eName;\r\n    this.germanName = gName;\r\n    if (!uri) {\r\n      this.uri = new URL('');\r\n    } else {\r\n      this.uri = uri;\r\n    }\r\n  }\r\n}\r\n\r\nexport class AppLinkGroup {\r\n  links: AppLink[] = [];\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { UfeEnvironmentStore } from '../../../stores/ufe-environment.store';\r\nimport { WrlApplicationInstance } from '../models/wrl-application-instance';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n/**\r\n * Service for storing and retrieving active web resource versions.\r\n */\r\nexport class ActiveWebResouceStorageService {\r\n  private envStorage = inject(UfeEnvironmentStore);\r\n\r\n  /**\r\n   * Saves the selected application version for a given web resource group.\r\n   *\r\n   * @param {WrlApplicationInstance} WrlApplicationInstance - The web resource group to save the version for.\r\n   * @param {string} selectedApplicationVersion - The selected application version to save.\r\n   * @returns {void}\r\n   */\r\n  public saveVersion(applicationInstance: WrlApplicationInstance, selectedApplicationVersion: string): void {\r\n    localStorage.setItem(this.getKeyName(applicationInstance), selectedApplicationVersion);\r\n  }\r\n\r\n  /**\r\n   * Deletes the specified web resource group from the active web resource storage.\r\n   *\r\n   * @param WrlApplicationInstance - The web resource group to be deleted.\r\n   */\r\n  public deleteVersion(applicationInstance: WrlApplicationInstance): void {\r\n    localStorage.removeItem(this.getKeyName(applicationInstance));\r\n  }\r\n\r\n  /**\r\n   * Retrieves the version of a web resource from the storage location.\r\n   *\r\n   * @param WrlApplicationInstance - The web resource group to retrieve the version for.\r\n   * @returns The version of the web resource, or null if it is not found in the storage location.\r\n   */\r\n  public getVersion(applicationInstance: WrlApplicationInstance): string | null {\r\n    return localStorage.getItem(this.getKeyName(applicationInstance));\r\n  }\r\n\r\n  private getKeyName(applicationInstance: WrlApplicationInstance): string {\r\n    return `configuredWebResource:${this.envStorage.ufeInstanceName()}:${applicationInstance.appName}:${applicationInstance.resourceName}`;\r\n  }\r\n}\r\n","import { WebResource } from './web-resource';\r\nexport class WrlApplicationInstance {\r\n  public appName: string;\r\n  public resourceName: string;\r\n\r\n  constructor(_appName: string, _resourceName: string) {\r\n    this.appName = _appName;\r\n    this.resourceName = _resourceName;\r\n  }\r\n}\r\n\r\nexport class WrlApplicationInstanceWithVersions extends WrlApplicationInstance {\r\n  public versions: WebResource[] = [];\r\n\r\n  constructor(_appName: string, _resourceName: string, _versions: WebResource[] = []) {\r\n    super(_appName, _resourceName);\r\n    this.setVersions(_versions);\r\n  }\r\n\r\n  public setVersions(versions: WebResource[]) {\r\n    const sortedByVersionDescendingResources = versions.sort((a, b) =>\r\n      b.applicationVersion.localeCompare(a.applicationVersion)\r\n    );\r\n    this.versions = [\r\n      ...sortedByVersionDescendingResources.filter(\r\n        version => version.appName === this.appName && version.resourceName === this.resourceName\r\n      ),\r\n    ];\r\n  }\r\n}\r\n","import { computed, inject, Injectable, signal } from '@angular/core';\r\nimport { WrlState } from '../models/wrl-state';\r\nimport { WebResource } from '../models/web-resource';\r\nimport { ActiveWebResouceStorageService } from '../services/active-web-resouce-storage.service';\r\nimport { toObservable } from '@angular/core/rxjs-interop';\r\nimport { WrlApplicationInstanceWithVersions } from '../models/wrl-application-instance';\r\nimport { UfeEnvironmentStore } from '../../../stores/ufe-environment.store';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n/**\r\n * Represents the state store for the Web Resource Locator (wrl).\r\n * The wrlStateStore class manages the state of the wrl, including environment type, site, configuration path, initialization status, mock resource settings, web resource groups, and resource selection strategy.\r\n * It provides methods to update the state and retrieve computed properties based on the state.\r\n */\r\nexport class WrlStateStore {\r\n  // initial state\r\n  private _state = signal<WrlState>({\r\n    environmentType: undefined,\r\n    site: undefined,\r\n    configurationPath: undefined,\r\n    wrlServiceLocatorUri: undefined,\r\n    initialized: false,\r\n    allowLocalResources: true,\r\n    onlyLocalResources: true,\r\n    areDefaultVersionsOverridden: false,\r\n    localWebResources: [],\r\n    applicationInstances: [],\r\n    authenticatedUserId: undefined,\r\n    resourceSelectionStrategy: this.defaultResourceSelectionStrategyFunc.bind(this),\r\n    wrlAnonymousServiceEndpoint: undefined,\r\n    wrlAuthenticatedServiceEndpoint: undefined,\r\n  });\r\n\r\n  public envStore = inject(UfeEnvironmentStore);\r\n\r\n  public environmentType = computed(() => this._state().environmentType);\r\n  public site = computed(() => this._state().site);\r\n  public configurationPath = computed(() => this._state().configurationPath);\r\n  public wrlServiceLocatorUri = computed(() => this._state().wrlServiceLocatorUri);\r\n  public initialized = computed(() => this._state().initialized);\r\n  public allowLocalResources = computed(() => this._state().allowLocalResources);\r\n  public onlyLocalResources = computed(() => this._state().onlyLocalResources);\r\n\r\n  public localWebResources = computed(() => this._state().localWebResources);\r\n  public applicationInstances = computed(() => this._state().applicationInstances);\r\n  public areDefaultVersionsOverridden = computed(() => this._state().areDefaultVersionsOverridden);\r\n\r\n  public resourceSelectionStrategy = computed(() => this._state().resourceSelectionStrategy);\r\n\r\n  public authenticatedUserId = computed(() => this._state().authenticatedUserId);\r\n\r\n  public wrlAnonymousServiceEndpoint = computed(() => this._state().wrlAnonymousServiceEndpoint);\r\n  public wrlAuthenticatedServiceEndpoint = computed(() => this._state().wrlAuthenticatedServiceEndpoint);\r\n  public isServiceEndpointUpdateNeeded = computed(() => {\r\n    return (\r\n      (this.wrlAnonymousServiceEndpoint() == null || this.wrlAuthenticatedServiceEndpoint() == null) &&\r\n      this.envStore.isSelfHosted() &&\r\n      this._state().initialized\r\n    );\r\n  });\r\n\r\n  public get authenticatedUserId$() {\r\n    return toObservable(this.authenticatedUserId);\r\n  }\r\n\r\n  private storageService = inject(ActiveWebResouceStorageService);\r\n\r\n  /**\r\n   * Sets the environment state.\r\n   *\r\n   * @param envState - The environment state to set.\r\n   */\r\n  public setEnvironmentState(envState: WrlState) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      site: envState.site?.toLowerCase(),\r\n      environmentType: envState.environmentType?.toLocaleLowerCase(),\r\n      configurationPath: envState.configurationPath,\r\n      wrlServiceLocatorUri: envState.wrlServiceLocatorUri,\r\n      initialized: envState.initialized,\r\n      allowLocalResources: envState.allowLocalResources,\r\n      onlyLocalResources: envState.onlyLocalResources,\r\n      localWebResources: [],\r\n      webResourceGroups: [],\r\n    }));\r\n  }\r\n\r\n  public showWrlVersionSelection = computed(() => this.envStore.isSelfHosted() && this._state().initialized);\r\n\r\n  /**\r\n   * Sets the mock web resources for the web resource locator state.\r\n   *\r\n   * @param localWebResources - The array of mock web resources to set.\r\n   */\r\n  public setLocalResources(localWebResources: WebResource[]) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      localWebResources: localWebResources,\r\n    }));\r\n\r\n    localWebResources.forEach(mockResource => {\r\n      mockResource.isLocal = true;\r\n      const existingApplicationInstance = this.applicationInstances().find(\r\n        group => group.appName === mockResource.appName && group.resourceName === mockResource.resourceName\r\n      );\r\n\r\n      if (\r\n        existingApplicationInstance &&\r\n        existingApplicationInstance.versions.findIndex(\r\n          version => version.applicationVersion === mockResource.applicationVersion\r\n        ) === -1\r\n      ) {\r\n        existingApplicationInstance.versions.push(mockResource);\r\n        this.addOrReplaceApplicationInstance(existingApplicationInstance);\r\n      } else {\r\n        this.addOrReplaceApplicationInstance(\r\n          new WrlApplicationInstanceWithVersions(mockResource.appName, mockResource.resourceName, [mockResource])\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds or replaces a web resource group in the state store.\r\n   * If a group with the same app name and resource name already exists, it updates the versions of the existing group.\r\n   * Otherwise, it adds the new group to the state.\r\n   *\r\n   * @param webResourceGroup - The web resource group to add or replace.\r\n   */\r\n  public addOrReplaceApplicationInstance(applicationInstance: WrlApplicationInstanceWithVersions) {\r\n    this._state.update(state => {\r\n      const newApplicationInstances = [...state.applicationInstances];\r\n      const existingInstance = this.getApplicationInstance(\r\n        applicationInstance.appName,\r\n        applicationInstance.resourceName\r\n      );\r\n\r\n      if (existingInstance != null) {\r\n        existingInstance.setVersions(applicationInstance.versions);\r\n      } else {\r\n        newApplicationInstances.push(applicationInstance);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        applicationInstances: newApplicationInstances,\r\n      };\r\n    });\r\n  }\r\n\r\n  public addOrReplaceApplicationInstances(applicationInstances: WrlApplicationInstanceWithVersions[]) {\r\n    applicationInstances.forEach(appInstance => {\r\n      this.addOrReplaceApplicationInstance(appInstance);\r\n    });\r\n  }\r\n\r\n  public setApplicationInstances(applicationInstances: WrlApplicationInstanceWithVersions[]) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      applicationInstances: applicationInstances,\r\n    }));\r\n  }\r\n\r\n  public setAndMergeApplicationInstanceVersions(applicationInstances: WrlApplicationInstanceWithVersions[]) {\r\n    const existingAppInstances = this.applicationInstances();\r\n\r\n    applicationInstances.forEach(appInstance => {\r\n      const existingAppInstance = existingAppInstances.find(\r\n        item => item.appName === appInstance.appName && item.resourceName === appInstance.resourceName\r\n      );\r\n\r\n      if (existingAppInstance != null) {\r\n        const mergedVersions = [...appInstance.versions, ...existingAppInstance.versions ];\r\n        const uniqueVersions = new Map<string, WebResource>();\r\n        mergedVersions.forEach(version => {\r\n          uniqueVersions.set(version.applicationVersion, version);\r\n        });\r\n        existingAppInstance.versions = Array.from(uniqueVersions.values());\r\n      } else {\r\n        existingAppInstances.push(appInstance);\r\n      }\r\n    });\r\n\r\n    this.setApplicationInstances(existingAppInstances);\r\n  }\r\n\r\n  /**\r\n   * Sets the resource selection strategy for the wrl state store.\r\n   *\r\n   * @param resourceSelectionStrategy - The function that determines the resource selection strategy.\r\n   * @returns void\r\n   */\r\n  public setResourceSelectionStrategy(\r\n    resourceSelectionStrategy: (\r\n      resources: Array<WebResource>,\r\n      currentActiveResourceVersion?: WebResource\r\n    ) => WebResource | undefined\r\n  ) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      resourceSelectionStrategy: resourceSelectionStrategy ?? this.defaultResourceSelectionStrategyFunc.bind(this),\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Sets the status of overriding default versions.\r\n   *\r\n   * @param {boolean} status - The status of overriding default versions.\r\n   */\r\n  public setDefaultVersionsOverridden(status: boolean) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      areDefaultVersionsOverridden: status,\r\n    }));\r\n  }\r\n\r\n  public setInitialized(initialized: boolean) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      initialized: initialized,\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Default resource selection strategy function.\r\n   *\r\n   * @param resources - An array of WebResource objects.\r\n   * @returns The selected WebResource object based on the default selection strategy.\r\n   */\r\n  defaultResourceSelectionStrategyFunc(resources: Array<WebResource>) {\r\n    if (!resources || resources.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    const appName = resources[0].appName;\r\n    const resourceName = resources[0].resourceName;\r\n    const userConfiguredResourceVerion = this.storageService.getVersion(\r\n      new WrlApplicationInstanceWithVersions(appName, resourceName, [])\r\n    );\r\n    let selectedResource = resources.find(\r\n      res =>\r\n        res.applicationVersion === userConfiguredResourceVerion &&\r\n        res.appName === appName &&\r\n        res.resourceName === resourceName\r\n    );\r\n\r\n    if (selectedResource != null) {\r\n      selectedResource.isDefaultVersionOverridden = true;\r\n      this.setDefaultVersionsOverridden(true);\r\n      return selectedResource;\r\n    }\r\n\r\n    const sortedByVersionDescendingResources = resources.sort((a, b) =>\r\n      b.applicationVersion.localeCompare(a.applicationVersion)\r\n    );\r\n\r\n    selectedResource = sortedByVersionDescendingResources.find(res => res.anonymous);\r\n\r\n    return selectedResource != null ? selectedResource : sortedByVersionDescendingResources[0];\r\n  }\r\n\r\n  public getApplicationInstance(appName: string, resourceName: string): WrlApplicationInstanceWithVersions | undefined {\r\n    return this.applicationInstances().find(\r\n      appInstance => appInstance.appName === appName && appInstance.resourceName === resourceName\r\n    );\r\n  }\r\n\r\n  public setAuthenticatedUserId(authenticatedUserId: string) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      authenticatedUserId: authenticatedUserId,\r\n    }));\r\n  }\r\n  public setWrlAuthenticatedServiceEndpoint(wrlAuthenticatedServiceEndpoint: URL) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      wrlAuthenticatedServiceEndpoint: wrlAuthenticatedServiceEndpoint,\r\n    }));\r\n  }\r\n\r\n  public setWrlAnonymousServiceEndpoint(wrlAnonymousServiceEndpoint: URL) {\r\n    this._state.update(state => ({\r\n      ...state,\r\n      wrlAnonymousServiceEndpoint: wrlAnonymousServiceEndpoint,\r\n    }));\r\n  }\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { inject, Injectable } from '@angular/core';\r\nimport {\r\n  LocationTransparentUriResponse,\r\n  LocationTransparentUriServiceEndpoint,\r\n} from '../models/location-transparent-uri-response';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { IfxUfeLoggerService } from '../../logging/ifx-ufe-logger.service';\r\nimport { WRLConfig } from '../models/wrl-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n/**\r\n * Service for accessing the location transparent service of WRL and retrieving the appropriate site and environment specific endpoint for retrieving local application resources.\r\n */\r\nexport class WrlLocationTransparentServiceUriResolverService {\r\n  private httpClient = inject(HttpClient);\r\n  private loggerService = inject(IfxUfeLoggerService);\r\n\r\n  /**\r\n   * Access the location transparent service of WRL and get the appropiate site and environment specific endpoint which should be used to retieve local application resources.\r\n   * @param env - the infrastructure environment\r\n   * @param site - the site code of the site which should be targeted\r\n   * @returns the single WRL application resource URI\r\n   */\r\n  public async getLocationTransparentServiceEndpoint(\r\n    wrlConfig: WRLConfig,\r\n  ): Promise<LocationTransparentUriServiceEndpoint | undefined> {\r\n    let endpointUri: LocationTransparentUriServiceEndpoint | undefined = undefined;\r\n    let locationTransparentEndpoint: string | undefined;\r\n    try {\r\n      locationTransparentEndpoint = this.getWrlLocationTransparentEndpoint(wrlConfig);\r\n\r\n      this.loggerService.debug(\r\n        'getWrlLocationTransparentEndpoint:Finding available wrl LocationTransparentUriResponse from uri',\r\n        locationTransparentEndpoint\r\n      );\r\n\r\n      const serviceResponse = await this.getServiceResponse(locationTransparentEndpoint);\r\n      // ToDO: Check if the site is available in the response\r\n      if (serviceResponse?.services?.apl[wrlConfig.site] == null) {\r\n        this.loggerService.warn(\r\n          `getLocationTransparentServiceEndpoint:There is no WRL service endpoint in transperent configuration  ${locationTransparentEndpoint} for site '${wrlConfig.site}'.`,\r\n          serviceResponse\r\n        );\r\n        return endpointUri;\r\n      }\r\n\r\n      const siteApl = serviceResponse?.services?.apl[wrlConfig.site];\r\n      if (siteApl?.version) {\r\n        const endpoint = serviceResponse?.services?.endpoints[siteApl.version];\r\n        endpointUri = this.getEndpointUri(siteApl.host, endpoint);\r\n      } else {\r\n        this.loggerService.warn(\r\n          `getLocationTransparentServiceEndpoint:Invalid response for from uri ${locationTransparentEndpoint} for site '${wrlConfig.site}'.`,\r\n          siteApl\r\n        );\r\n      }\r\n    } catch (error: unknown) {\r\n      this.handleError(error, locationTransparentEndpoint, wrlConfig.site);\r\n    }\r\n\r\n    return endpointUri;\r\n  }\r\n\r\n  private async getServiceResponse(locationTransparentUri: string): Promise<LocationTransparentUriResponse> {\r\n    const serviceRequest$ = this.httpClient.get<LocationTransparentUriResponse>(locationTransparentUri);\r\n    return firstValueFrom(serviceRequest$);\r\n  }\r\n\r\n  private getEndpointUri(\r\n    host: string,\r\n    endpoint: LocationTransparentUriServiceEndpoint\r\n  ): LocationTransparentUriServiceEndpoint {\r\n    return <LocationTransparentUriServiceEndpoint>{\r\n      anonymous: host + endpoint?.anonymous,\r\n      authenticated: host + endpoint?.authenticated,\r\n    };\r\n  }\r\n\r\n  private getWrlLocationTransparentEndpoint(wrlConfig: WRLConfig): string {\r\n\r\n   if (wrlConfig.wrlServiceLocatorUri) {\r\n      return wrlConfig.wrlServiceLocatorUri;\r\n   }\r\n\r\n    const hostNamePrefix = wrlConfig.env !== 'prod' ? '-staging' : '';\r\n\r\n    return `https://wrl-service-locator${hostNamePrefix}.infineon.com/locations`;\r\n  }\r\n\r\n  private handleError(error: unknown, locationTransparentUri: string | undefined, site: string): void {\r\n    const httpError = error as HttpErrorResponse;\r\n    this.loggerService.error(\r\n      'getLocationTransparentServiceEndpoint:Error getting data from ' +\r\n        locationTransparentUri +\r\n        ' environment in ' +\r\n        site +\r\n        ': ' +\r\n        httpError?.status +\r\n        ' - ' +\r\n        httpError?.message +\r\n        '.',\r\n      httpError\r\n    );\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { WrlLocationTransparentServiceUriResolverService } from './wrl-location-transparent-uri-resolver.service';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { IfxUfeLoggerService } from '../../logging/ifx-ufe-logger.service';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { WebResource } from '../models/web-resource';\r\nimport { AuthenticationService } from '../../../services/authentication.service';\r\nimport { WrlStateStore } from '../stores/wrl-state.store';\r\nimport { WrlWebResourcesPostResponse } from '../models/wrl-web-resource-post-response';\r\nimport { LocationTransparentUriServiceEndpoint } from '../models/location-transparent-uri-response';\r\nimport { WrlApplicationInstance, WrlApplicationInstanceWithVersions } from '../models/wrl-application-instance';\r\nimport { WRLConfig } from '../models/wrl-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n/**\r\n * Service for resolving resource URIs from the hosted WRL service.\r\n */\r\nexport class WrlWebResourcesResolverService {\r\n  private wrlTransparentUriResolver = inject(WrlLocationTransparentServiceUriResolverService);\r\n  private logger = inject(IfxUfeLoggerService);\r\n  private http = inject(HttpClient);\r\n  private auth = inject(AuthenticationService);\r\n  private wrlStateStore = inject(WrlStateStore);\r\n\r\n  private readonly LogEnvironmentOutput = ' environment in ';\r\n\r\n  constructor() {\r\n    this.logger.debug('constructor wrlResourceUrisResolverService');\r\n  }\r\n\r\n  public async resolveAnonymusWebResourcesForAppInstance(\r\n    locationServiceEndpoint: URL,\r\n    appInstance: WrlApplicationInstance\r\n  ): Promise<WrlApplicationInstanceWithVersions> {\r\n    try {\r\n      const isAnonymous = true;\r\n      const requestOptions = {\r\n        headers: this.getHttpHeader(isAnonymous),\r\n      };\r\n\r\n      const singleAppliacationGetWebResourcesRequestUri =\r\n        locationServiceEndpoint.href + appInstance.appName + '/' + appInstance.resourceName;\r\n\r\n      this.logger.debug('getLocationResources:calling ', singleAppliacationGetWebResourcesRequestUri);\r\n      const serviceRequest$ = this.http.get<WebResource>(singleAppliacationGetWebResourcesRequestUri, requestOptions);\r\n      const serviceResponse = await firstValueFrom(serviceRequest$);\r\n\r\n      this.logger.debug(\r\n        'getLocationResources:Response from ' + singleAppliacationGetWebResourcesRequestUri,\r\n        serviceResponse\r\n      );\r\n\r\n      const anonymousWebResource = [serviceResponse];\r\n      this.extendWebResoucesWithWrlApplicationInstance(anonymousWebResource, appInstance);\r\n\r\n      return new WrlApplicationInstanceWithVersions(\r\n        appInstance.appName,\r\n        appInstance.resourceName,\r\n        anonymousWebResource\r\n      );\r\n    } catch (error: unknown) {\r\n      const httpError = error as HttpErrorResponse;\r\n      this.logger.error(\r\n        'Error getting location resources for ' +\r\n          this.wrlStateStore.environmentType() +\r\n          this.LogEnvironmentOutput +\r\n          this.wrlStateStore.site() +\r\n          ': ' +\r\n          httpError.status +\r\n          ' - ' +\r\n          httpError.message +\r\n          '. ' +\r\n          httpError?.headers?.get('Www-Authenticate')\r\n      );\r\n      return new WrlApplicationInstanceWithVersions(appInstance.appName, appInstance.resourceName, []);\r\n    }\r\n  }\r\n\r\n  public async getAllUserAssignedWebResources(\r\n    locationServiceEndpoint: URL\r\n  ): Promise<WrlApplicationInstanceWithVersions[]> {\r\n    return await this.getWebResourcesForAppInstances(locationServiceEndpoint, []);\r\n  }\r\n\r\n  public async getWebResourcesForAppInstances(\r\n    locationServiceEndpoint: URL,\r\n    applicationInstances: WrlApplicationInstance[]\r\n  ): Promise<WrlApplicationInstanceWithVersions[]> {\r\n    const result: WrlApplicationInstanceWithVersions[] = [];\r\n\r\n    try {\r\n      const isAnonymous = false;\r\n      const requestOptions = {\r\n        headers: this.getHttpHeader(isAnonymous),\r\n      };\r\n\r\n      const includeAdditionalPrivateUrls = applicationInstances.length === 0;\r\n      locationServiceEndpoint.searchParams.set('includeAdditionalPrivateUrls', includeAdditionalPrivateUrls.toString());\r\n\r\n      this.logger.debug('getLocationResources:calling ', locationServiceEndpoint.href);\r\n      const serviceRequest$ = this.http.post<WrlWebResourcesPostResponse[]>(\r\n        locationServiceEndpoint.href,\r\n        [...applicationInstances],\r\n        requestOptions\r\n      );\r\n      const serviceResponse = await firstValueFrom(serviceRequest$);\r\n\r\n      serviceResponse.forEach(appInstance => {\r\n        this.extendWebResoucesWithWrlApplicationInstance(appInstance.versions, appInstance);\r\n        result.push(\r\n          new WrlApplicationInstanceWithVersions(appInstance.appName, appInstance.resourceName, appInstance.versions)\r\n        );\r\n      });\r\n    } catch (error: unknown) {\r\n      const httpError = error as HttpErrorResponse;\r\n      this.logger.error(\r\n        'Error getting location resources for ' +\r\n          this.wrlStateStore.environmentType() +\r\n          this.LogEnvironmentOutput +\r\n          this.wrlStateStore.site() +\r\n          ': ' +\r\n          httpError.status +\r\n          ' - ' +\r\n          httpError.message +\r\n          '. ' +\r\n          httpError?.headers?.get('Www-Authenticate')\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public async getWebResourcesServiceEndpoint(\r\n    wrlConfig: WRLConfig,\r\n  ): Promise<LocationTransparentUriServiceEndpoint | undefined> {\r\n    if (wrlConfig.env && wrlConfig.site) {\r\n      return await this.wrlTransparentUriResolver.getLocationTransparentServiceEndpoint(wrlConfig);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private getHttpHeader(isAnonymous: boolean): HttpHeaders {\r\n    let headers = {};\r\n\r\n    // todo manuel - we need to keep the isecure http interceptor in mind ... this might interfere\r\n    if (isAnonymous) {\r\n      return new HttpHeaders(headers);\r\n    }\r\n\r\n    const authToken = this.auth.getToken;\r\n\r\n    if (authToken == null) {\r\n      this.logger.warn(\r\n        'isAnonymous was set to false but no token available. Request will only return data for anonymous'\r\n      );\r\n    } else {\r\n      this.logger.debug('with token');\r\n      headers = {\r\n        Authorization: 'Bearer ' + authToken,\r\n      };\r\n    }\r\n\r\n    return new HttpHeaders(headers);\r\n  }\r\n\r\n  /**\r\n   * The WRL service does not include the call arguments name and resource name. Since we need them later in our logic we need to extend it here.\r\n   * @param resource the WRL returned by the WRL service\r\n   * @param applicationName\r\n   * @param resourceName\r\n   */\r\n  private extendWebResoucesWithWrlApplicationInstance(\r\n    webResources: WebResource[],\r\n    appInstance: WrlApplicationInstance\r\n  ): void {\r\n    webResources.forEach(res => {\r\n      res.appName = appInstance.appName;\r\n      res.resourceName = appInstance.resourceName;\r\n    });\r\n  }\r\n}\r\n","import { UfeEnvironmentStore } from './../../../stores/ufe-environment.store';\r\nimport { inject, Injectable } from '@angular/core';\r\nimport { WrlStateStore } from '../stores/wrl-state.store';\r\nimport { IfxUfeLoggerService } from '../../logging/ifx-ufe-logger.service';\r\nimport { AuthenticationService } from '../../../services/authentication.service';\r\nimport { distinctUntilChanged } from 'rxjs';\r\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop';\r\nimport { SubscriberData } from '../../../models/SubscriberData';\r\nimport { WrlWebResourcesResolverService } from './wrl-web-resources-resolver.service';\r\nimport { LocationTransparentUriServiceEndpoint } from '../models/location-transparent-uri-response';\r\nimport { WrlApplicationInstance, WrlApplicationInstanceWithVersions } from '../models/wrl-application-instance';\r\nimport { isSilentRefreshInProcess } from '../../helpers/common.helpers';\r\nimport { WRLConfig } from '../models/wrl-config';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WrlApplicationInstanceManagerService {\r\n  private wrlStateStore = inject(WrlStateStore);\r\n  private envStore = inject(UfeEnvironmentStore);\r\n  private logger = inject(IfxUfeLoggerService);\r\n  private auth = inject(AuthenticationService);\r\n  private wlrWebResourcesResolver = inject(WrlWebResourcesResolverService);\r\n\r\n  private readonly LogEnvironmentOutput = ' environment in ';\r\n\r\n  constructor() {\r\n    // WrlApplicationInstanceManagerService should only run in a SELF Hosted environment and not in a child uFE\r\n    // if the self hosted environment run in a iframe the query parameter '_ifxEnvironment' have to be set to 'SELF'\r\n    if (this.envStore.isSelfHosted() && !isSilentRefreshInProcess()) {\r\n      this.setupSubscriberWrlInitializedSubscription();\r\n      this.setupSubscriberDataSubscription();\r\n    }\r\n  }\r\n\r\n  private setupSubscriberWrlInitializedSubscription(): void {\r\n    toObservable(this.wrlStateStore.initialized)\r\n      .pipe(takeUntilDestroyed())\r\n      .subscribe(() => {\r\n        this.setWrlServiceEndointAsync();\r\n      });\r\n  }\r\n\r\n  private setupSubscriberDataSubscription(): void {\r\n    this.auth.subscriberData$\r\n      .pipe(\r\n        distinctUntilChanged((_prev: SubscriberData, curr: SubscriberData) => {\r\n          return (\r\n            this.wrlStateStore.authenticatedUserId() === curr.credentials.subscriberName + curr.kerberos.subscriberName\r\n          );\r\n        }),\r\n        takeUntilDestroyed()\r\n      )\r\n      .subscribe(async data => {\r\n        if (this.shouldRegisterApplicationInstances()) {\r\n          await this.setWrlServiceEndointAsync();\r\n          await this.tryRegisterApplicationInstances(data);\r\n        } else {\r\n          this.wrlStateStore.setApplicationInstances([]);\r\n        }\r\n      });\r\n  }\r\n\r\n  private shouldRegisterApplicationInstances(): boolean {\r\n    if (!this.wrlStateStore.initialized()) {\r\n      this.logger.info('WRL service not yet initialized');\r\n    }\r\n\r\n    return this.wrlStateStore.initialized() && this.auth.isUserAuthenticated;\r\n  }\r\n\r\n  private async tryRegisterApplicationInstances(data: SubscriberData): Promise<void> {\r\n    try {\r\n      await this.registerApplicationInstancesAsync();\r\n      const subscriberName = data.kerberos.subscriberName.trim() + data.credentials.subscriberName.trim();\r\n      this.wrlStateStore.setAuthenticatedUserId(subscriberName);\r\n    } catch (error: unknown) {\r\n      this.logger.error(\r\n        'Error registering application instances for ' +\r\n          this.wrlStateStore.environmentType() +\r\n          this.LogEnvironmentOutput +\r\n          this.wrlStateStore.site()\r\n      );\r\n    }\r\n  }\r\n\r\n  private async setWrlServiceEndointAsync(): Promise<void> {\r\n    const envType = this.wrlStateStore.environmentType();\r\n    const site = this.wrlStateStore.site()?.toLocaleLowerCase();\r\n    const wrlServiceLocatorUri = this.wrlStateStore.wrlServiceLocatorUri();\r\n    let wrlServiceEndpoint: LocationTransparentUriServiceEndpoint | undefined = undefined;\r\n\r\n    this.logger.debug('Resolving WRL Service Endpoint for ' + envType + this.LogEnvironmentOutput + site);\r\n\r\n    if (!this.wrlStateStore.isServiceEndpointUpdateNeeded()) {\r\n      if (!this.wrlStateStore.initialized()) {\r\n        this.logger.warn('WRL service not yet initialized');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const wrlConfig= <WRLConfig>{ env: envType, site: site, wrlServiceLocatorUri: wrlServiceLocatorUri };\r\n      wrlServiceEndpoint = await this.wlrWebResourcesResolver.getWebResourcesServiceEndpoint(wrlConfig);\r\n    } catch (error: unknown) {\r\n      this.logger.error('Resolving WRL Service Endpoint throws an error.', error);\r\n    }\r\n\r\n    const anonymousServiceEndpoint = wrlServiceEndpoint?.anonymous;\r\n    const authenticatedServiceEndpoint = wrlServiceEndpoint?.authenticated;\r\n    if (\r\n      anonymousServiceEndpoint == null ||\r\n      authenticatedServiceEndpoint == null ||\r\n      !URL.canParse(anonymousServiceEndpoint) ||\r\n      !URL.canParse(authenticatedServiceEndpoint)\r\n    ) {\r\n      throw new Error(\r\n        'Could not find WRL location service endpoint for ' +\r\n          this.wrlStateStore.environmentType() +\r\n          this.LogEnvironmentOutput +\r\n          this.wrlStateStore.site()\r\n      );\r\n    }\r\n    this.wrlStateStore.setWrlAnonymousServiceEndpoint(new URL(anonymousServiceEndpoint));\r\n    this.wrlStateStore.setWrlAuthenticatedServiceEndpoint(new URL(authenticatedServiceEndpoint));\r\n  }\r\n\r\n  private async registerApplicationInstancesAsync(): Promise<void> {\r\n    const applicationInstances: WrlApplicationInstanceWithVersions[] = [];\r\n\r\n    this.wrlStateStore.localWebResources().forEach(mockResource => {\r\n      const appInstance = new WrlApplicationInstanceWithVersions(mockResource.appName, mockResource.resourceName);\r\n      appInstance.versions = [mockResource];\r\n      applicationInstances.push(appInstance);\r\n    });\r\n\r\n    if (this.wrlStateStore.onlyLocalResources()) {\r\n      this.wrlStateStore.setApplicationInstances(applicationInstances);\r\n      return;\r\n    }\r\n\r\n    const allUserDirectlyAssignedAppInstances = await this.wlrWebResourcesResolver.getAllUserAssignedWebResources(\r\n      this.getUrl(this.wrlStateStore.wrlAuthenticatedServiceEndpoint())\r\n    );\r\n\r\n    allUserDirectlyAssignedAppInstances.forEach(appInstance => {\r\n      if (\r\n        !applicationInstances.some(\r\n          ai => ai.appName === appInstance.appName && ai.resourceName === appInstance.resourceName\r\n        )\r\n      ) {\r\n        applicationInstances.push(appInstance);\r\n      }\r\n    });\r\n\r\n    await this.setWebResourcesForAppInstancesAsync(applicationInstances);\r\n  }\r\n\r\n  private async setWebResourcesForAppInstancesAsync(\r\n    applicationInstances: WrlApplicationInstanceWithVersions[]\r\n  ): Promise<void> {\r\n    const withoutVersions = applicationInstances.map(\r\n      appInstance => new WrlApplicationInstance(appInstance.appName, appInstance.resourceName)\r\n    );\r\n    const allApplicationInstancesWithVersions = (\r\n      await this.wlrWebResourcesResolver.getWebResourcesForAppInstances(\r\n        this.getUrl(this.wrlStateStore.wrlAuthenticatedServiceEndpoint()),\r\n        withoutVersions\r\n      )\r\n    ).filter(item => item.versions.length > 0);\r\n\r\n    this.wrlStateStore.setAndMergeApplicationInstanceVersions([\r\n      ...applicationInstances,\r\n      ...allApplicationInstancesWithVersions,\r\n    ]);\r\n  }\r\n\r\n  public async findVersionsForApplicationInstancesAsync(\r\n    instances: WrlApplicationInstance[],\r\n    isAnonymous: boolean\r\n  ): Promise<WrlApplicationInstanceWithVersions[]> {\r\n    const notExistingInstances: WrlApplicationInstance[] = this.getNotExistingInstances(instances);\r\n\r\n    await this.resolveWebResourcesForAppInstancesAsync(notExistingInstances, isAnonymous);\r\n    return this.getExistingInstances(instances);\r\n  }\r\n\r\n  private async resolveWebResourcesForAppInstancesAsync(\r\n    appInstances: WrlApplicationInstance[],\r\n    isAnonymous: boolean\r\n  ): Promise<void> {\r\n    await this.setWrlServiceEndointAsync();\r\n\r\n    if (isAnonymous) {\r\n      await this.resolveAnonymousWebResources(\r\n        appInstances,\r\n        this.getUrl(this.wrlStateStore.wrlAnonymousServiceEndpoint())\r\n      );\r\n    } else {\r\n      await this.resolveAuthenticatedWebResources(\r\n        appInstances,\r\n        this.getUrl(this.wrlStateStore.wrlAuthenticatedServiceEndpoint())\r\n      );\r\n    }\r\n  }\r\n\r\n  private async resolveAnonymousWebResources(\r\n    appInstances: WrlApplicationInstance[],\r\n    serviceEndpointUrl: URL\r\n  ): Promise<void> {\r\n    for (const appInstance of appInstances) {\r\n      const resolvedAppInstance = await this.wlrWebResourcesResolver.resolveAnonymusWebResourcesForAppInstance(\r\n        serviceEndpointUrl,\r\n        appInstance\r\n      );\r\n\r\n      this.wrlStateStore.addOrReplaceApplicationInstance(resolvedAppInstance);\r\n    }\r\n  }\r\n\r\n  private async resolveAuthenticatedWebResources(\r\n    appInstances: WrlApplicationInstance[],\r\n    serviceEndpointUrl: URL\r\n  ): Promise<void> {\r\n    const foundAppInstances = await this.wlrWebResourcesResolver.getWebResourcesForAppInstances(\r\n      serviceEndpointUrl,\r\n      appInstances\r\n    );\r\n\r\n    foundAppInstances\r\n      .filter(item => item.versions.length > 0)\r\n      .forEach(foundAppInstance => {\r\n        this.wrlStateStore.addOrReplaceApplicationInstance(foundAppInstance);\r\n      });\r\n  }\r\n\r\n  private getExistingInstances(instances: WrlApplicationInstance[]): WrlApplicationInstanceWithVersions[] {\r\n    const foundInstances: WrlApplicationInstanceWithVersions[] = instances\r\n      .map(instance => this.wrlStateStore.getApplicationInstance(instance.appName, instance.resourceName))\r\n      .filter(instance => instance != undefined) as WrlApplicationInstanceWithVersions[];\r\n\r\n    return foundInstances.filter(instance => instance.versions.length > 0);\r\n  }\r\n\r\n  private getNotExistingInstances(instances: WrlApplicationInstance[]): WrlApplicationInstance[] {\r\n    return instances.filter(instance => !this.isInstanceExisting(instance.appName, instance.resourceName));\r\n  }\r\n\r\n  private isInstanceExisting(appName: string, resourceName: string): boolean {\r\n    const instance = this.wrlStateStore.getApplicationInstance(appName, resourceName);\r\n    return instance != null && instance.versions.length > 0;\r\n  }\r\n\r\n  private getUrl(url: URL | undefined): URL {\r\n    return url ?? new URL('');\r\n  }\r\n}\r\n","import { DestroyRef, effect, inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UfeEnvironmentStore } from '../../../stores/ufe-environment.store';\r\nimport { IfxUfeLoggerService } from '../../logging/ifx-ufe-logger.service';\r\nimport { WrlStateStore } from '../stores/wrl-state.store';\r\nimport { WrlState } from '../models/wrl-state';\r\nimport { WebResource } from '../models/web-resource';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { UfeCommand } from '../../../models/UfeCommand';\r\nimport { ShellCommunicatorService } from '../../../services/shell-communicator.service';\r\nimport { WrlApplicationInstanceManagerService } from './wrl-application-instance-manager.service';\r\nimport { WrlApplicationInstance, WrlApplicationInstanceWithVersions } from '../models/wrl-application-instance';\r\nimport { OpenWebResourceCommandArgument, UfeWrlTargetLocationType } from '../models/wrl-command-argument';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { isInIframe } from '../../helpers/common.helpers';\r\nimport { WRLConfig } from '../models/wrl-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n/**\r\n * The WebResourceService class provides methods for managing web resources.\r\n */\r\nexport class WebResourceService {\r\n  private http = inject(HttpClient);\r\n  private comm = inject(ShellCommunicatorService);\r\n  private envStore = inject(UfeEnvironmentStore);\r\n  private logger = inject(IfxUfeLoggerService);\r\n\r\n  private stateStore = inject(WrlStateStore);\r\n  private applicationInstanceManager = inject(WrlApplicationInstanceManagerService);\r\n\r\n  private resourceNotFoundHandler: ((applicationName: string, resourceName: string) => void) | undefined = undefined;\r\n  destroyRef = inject(DestroyRef);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n  constructor() {\r\n    window.sessionStorage.removeItem('WrlMockResources');\r\n\r\n    effect(() => {\r\n      this.logger.debug('WebResourceService:WRL detect this service init as ' + this.envStore.executionEnvironment());\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes the Web Resource Locator (WRL) service.\r\n   *\r\n   * @param env - The environment type.\r\n   * @param site - The site name.\r\n   * @param path - The configuration path (optional).\r\n   * @param resourceSelectionStrategy - The resource selection strategy function (optional).\r\n   * @param resourceNotFoundHandler - The resource not found handler function (optional).\r\n   * @returns A promise that resolves when the initialization is complete.\r\n   */\r\n  public async initWrl(\r\n    wrlConfig: WRLConfig,\r\n    resourceSelectionStrategy:\r\n      | ((resources: Array<WebResource>, currentActiveResourceVersion?: WebResource) => WebResource | undefined)\r\n      | undefined = undefined,\r\n    resourceNotFoundHandler: ((applicationName: string, resourceName: string) => void) | undefined = undefined\r\n  ): Promise<void> {\r\n    this.stateStore.setEnvironmentState(<WrlState>{\r\n      environmentType: wrlConfig.env,\r\n      site: wrlConfig.site,\r\n      configurationPath: wrlConfig.configPath,\r\n      wrlServiceLocatorUri: wrlConfig.wrlServiceLocatorUri,\r\n      initialized: false,\r\n      allowLocalResources: wrlConfig.allowLocalResources ?? true,\r\n      onlyLocalResources: wrlConfig.onlyLocalResources ?? false,\r\n    });\r\n    if (resourceSelectionStrategy != null) {\r\n      this.stateStore.setResourceSelectionStrategy(resourceSelectionStrategy);\r\n    }\r\n\r\n    if (!this.envStore.isSelfHosted()) {\r\n      this.logger.info('WRL Service is only running in self hosted mode');\r\n      return;\r\n    }\r\n\r\n    await this.loadWrlLocalResources(wrlConfig);\r\n\r\n    if (!resourceNotFoundHandler) {\r\n      this.resourceNotFoundHandler = (applicationName: string, resourceName: string) => {\r\n        this.logger.error(\r\n          `No web resource found for name: ${applicationName} and resource name: ${resourceName} in ${wrlConfig.site}|${wrlConfig.env}!`\r\n        );\r\n      };\r\n    } else {\r\n      this.resourceNotFoundHandler = resourceNotFoundHandler;\r\n    }\r\n\r\n    this.stateStore.setInitialized(true);\r\n    this.logger.info('initWrl:WRL Service initialized with env: ' + wrlConfig.env + ' site: ' + wrlConfig.site + ' path: ' + wrlConfig.configPath);\r\n  }\r\n\r\n  /**\r\n   * Launches a web resource as a shell.\r\n   *\r\n   * @param sender - The sender of the request.\r\n   * @param applicationName - The name of the application.\r\n   * @param resourceName - The name of the resource.\r\n   * @param args - The arguments for the web resource.\r\n   * @param isAnonymous - Indicates whether the user is anonymous.\r\n   * @param target - Indicates whether the user is anonymous.\r\n   * @returns A promise that resolves when the web resource is launched.\r\n   */\r\n  public async launchWebResourceAsShell(\r\n    sender: string,\r\n    applicationName: string,\r\n    resourceName: string,\r\n    args: object,\r\n    isAnonymous: boolean,\r\n    target: UfeWrlTargetLocationType | undefined = undefined\r\n  ): Promise<void> {\r\n    const resource = await this.findWebResource(applicationName, resourceName, isAnonymous);\r\n    this.openWebResource(sender, resource, args, target);\r\n  }\r\n\r\n  /**\r\n   * Finds a web resource based on the provided application name, resource name, and anonymous flag.\r\n   *\r\n   * @param applicationName - The name of the application.\r\n   * @param resourceName - The name of the resource.\r\n   * @param isAnonymous - A flag indicating whether the resource can be accessed anonymously.\r\n   * @returns A promise that resolves to the found web resource.\r\n   * @throws An error if the resource is not found.\r\n   */\r\n  public async findWebResource(\r\n    applicationName: string,\r\n    resourceName: string,\r\n    isAnonymous: boolean\r\n  ): Promise<WebResource> {\r\n    const activeWebResources = await this.findActiveResourcesAsync(\r\n      [new WrlApplicationInstance(applicationName, resourceName)],\r\n      isAnonymous\r\n    );\r\n\r\n    if (activeWebResources.length > 0) {\r\n      return activeWebResources[0];\r\n    }\r\n\r\n    // the handler may not select any resource this could lead to an error\r\n    if (this.resourceNotFoundHandler) {\r\n      this.resourceNotFoundHandler(applicationName, resourceName);\r\n    }\r\n\r\n    throw new Error('Resource not found: ' + applicationName + ' ' + resourceName);\r\n  }\r\n\r\n  public async findWebResourcesAsync(applicationInstances: WrlApplicationInstance[]): Promise<WebResource[]> {\r\n    const foundWebResources: WebResource[] = await this.findActiveResourcesAsync(applicationInstances, false);\r\n\r\n    return foundWebResources;\r\n  }\r\n\r\n  /**\r\n   * Tries to load the complete data from from WRL mock JSON file and filters the data to the requested application and resource.\r\n   * @param applicationName\r\n   * @param resourceName\r\n   * @returns empty response if no file is defined or the JSON content if a path is defined in the config\r\n   */\r\n  public getResourceUrisFromWrlLocal(applicationName: string, resourceName: string): WebResource[] {\r\n    const foundLocalResources = this.stateStore\r\n      .localWebResources()\r\n      .filter(res => res.appName === applicationName && res.resourceName === resourceName);\r\n\r\n    if (foundLocalResources.length === 0) {\r\n      this.logger.warn(\r\n        `No local resources found for ${applicationName} and ${resourceName}`,\r\n        this.stateStore.localWebResources()\r\n      );\r\n    }\r\n\r\n    return foundLocalResources;\r\n  }\r\n\r\n  public async loadWrlLocalResources(wrlConfig: WRLConfig): Promise<void> {\r\n    // todo manuel - we need to ensure that only https localhost or *.infineon.com or fiapp protocol are loaded from the local wrl.json mock\r\n    const configurationPath= wrlConfig.configPath;\r\n    if (!configurationPath || !this.stateStore.allowLocalResources()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const test = this.http;\r\n      const httpRequest = test.get<WebResource[]>(configurationPath);\r\n      const resources = await firstValueFrom(httpRequest);\r\n      this.logger.info(`WRL local resources loaded from ${configurationPath}`, resources);\r\n      this.stateStore.setLocalResources(resources);\r\n      window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'WrlMockResources', configurationPath);\r\n    } catch  {\r\n      this.logger.warn(`getting local ${configurationPath} wrl resources failed. Skip handling of ${configurationPath} file.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens a web resource.\r\n   *\r\n   * @param sender - The sender of the web resource.\r\n   * @param resource - The web resource to open.\r\n   * @param args - Additional arguments for opening the web resource.\r\n   */\r\n  public openWebResource(\r\n    sender: string,\r\n    resource: WebResource,\r\n    args: object,\r\n    targetLocation: UfeWrlTargetLocationType | undefined = undefined\r\n  ) {\r\n    const message = new UfeCommand(sender, 'OPEN_WEB_RESOURCE', [\r\n      new OpenWebResourceCommandArgument(resource, args, targetLocation),\r\n    ]);\r\n    this.comm.sendShellMessage(message);\r\n  }\r\n\r\n  public getActiveWebResourceVersion(instance: WrlApplicationInstanceWithVersions): WebResource | undefined {\r\n    return this.stateStore.resourceSelectionStrategy()(instance.versions);\r\n  }\r\n\r\n  private async findActiveResourcesAsync(\r\n    applicationInstances: WrlApplicationInstance[],\r\n    isAnonymous: boolean\r\n  ): Promise<WebResource[]> {\r\n    const activeResources: WebResource[] = [];\r\n    const instances = await this.applicationInstanceManager.findVersionsForApplicationInstancesAsync(\r\n      applicationInstances,\r\n      isAnonymous\r\n    );\r\n\r\n    for (const instance of instances) {\r\n      const activeResource = this.getActiveWebResourceVersion(instance);\r\n      if (activeResource != null) {\r\n        activeResources.push(activeResource);\r\n      }\r\n    }\r\n\r\n    return activeResources;\r\n  }\r\n\r\n  public isInIframe(): boolean {\r\n    return isInIframe();\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, catchError, firstValueFrom, of } from 'rxjs';\r\nimport { AppLinkGroup } from '../../models/AppLink';\r\nimport { AppDescription } from '../../models/AppDescription';\r\nimport { AvailableUfe } from './models/available-ufe';\r\nimport { WebResourceService } from '../web-resource-locator/services/web-resource.service';\r\nimport { WebResource } from '../web-resource-locator/models/web-resource';\r\nimport { ShellStateStore } from './stores/shell-state.store';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { UfeEnvironmentStore } from '../../stores/ufe-environment.store';\r\nimport { toObservable } from '@angular/core/rxjs-interop';\r\nimport { WrlApplicationInstance } from '../web-resource-locator/models/wrl-application-instance';\r\nimport { RootInjectorGuard } from '../type-guards/root-injector.guard';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n/**\r\n * FrontEndDiscoveryService allows Shells to get a list of all possible uFEs that can be instantiated.  This service\r\n * is only for use by the shell component and allows for one-time registration of new uFEs with the back-end API to\r\n * make them available to all shells.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FrontEndDiscoveryService extends RootInjectorGuard<FrontEndDiscoveryService> {\r\n  private http = inject(HttpClient);\r\n  private readonly window = inject(Window);\r\n  private wrlSvc = inject(WebResourceService);\r\n\r\n  private shellStateStore = inject(ShellStateStore);\r\n  private auth = inject(AuthenticationService);\r\n  private env = inject(UfeEnvironmentStore);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {\r\n    super('FrontEndDiscoveryService');\r\n    this.loadShellApplicationsAsync();\r\n  }\r\n\r\n  public async getAppsAsync(): Promise<AvailableUfe> {\r\n    this.logger.debug('getApps:Retrieving available uFEs');\r\n    if (!this.env.isShellApp() || !this.auth.isUserAuthenticated) {\r\n      this.shellStateStore.setAvailableUfe([]);\r\n      return this.shellStateStore.availableUfe();\r\n    }\r\n\r\n    await this.loadShellApplicationsAsync();\r\n    const appList = await this.getApplicationListWithAssignedUrlAsync();\r\n    this.shellStateStore.setAvailableUfe(appList);\r\n    return this.shellStateStore.availableUfe();\r\n  }\r\n\r\n  public getApps(): Observable<AvailableUfe> {\r\n    return toObservable(this.shellStateStore.availableUfe);\r\n  }\r\n\r\n  public getLinkGroup(groupName: string): Observable<AppLinkGroup> {\r\n    //TODO This will become a back end service call to the discovery service.  This is currently just a stub for testing\r\n    if (groupName == null || groupName === '') {\r\n      return of(new AppLinkGroup());\r\n    }\r\n\r\n    const path = this.window.location.origin + `/assets/${groupName}.json`;\r\n    return this.http.get<AppLinkGroup>(path).pipe(\r\n      catchError(error => {\r\n        this.logger.warn(`getLinkGroup for path ${path} responses an error`, error);\r\n        return of(new AppLinkGroup());\r\n      })\r\n    );\r\n  }\r\n\r\n  public createAppDescriptionFromWebResource(resource: WebResource): AppDescription {\r\n    const app = AppDescription.create(resource.appName, resource.resourceName, resource.url, 'not-found');\r\n\r\n    if (resource.webResourceType.toLowerCase() === 'ufe') {\r\n      // we only need to add the ufeid to ufe classified resources\r\n      this.modifyUrl(app);\r\n    }\r\n    return app;\r\n  }\r\n\r\n  private modifyUrl(ufe: AppDescription): void {\r\n    if (URL.canParse(ufe.url)) {\r\n      const url = new URL(ufe.url);\r\n      url.searchParams.set('ufeid', ufe.combinedName);\r\n      url.searchParams.set('wufeid', this.env.activeInstanceId());\r\n      ufe.url = url.toString();\r\n    } else {\r\n      this.logger.error(`Invalid URL ${ufe.url} for uFE:${ufe.combinedName}`);\r\n    }\r\n  }\r\n\r\n  private async loadShellApplicationsAsync(): Promise<void> {\r\n    try {\r\n      if (this.shellStateStore.availableUfeLoaded()) {\r\n        return;\r\n      }\r\n\r\n      const apps = await this.getShellApplicationsAsync();\r\n      this.shellStateStore.setAvailableUfe(apps.AvailableUfe);\r\n      this.shellStateStore.setAvailableUfeLoaded(true);\r\n      this.shellStateStore.setScenariosLoaded(false);\r\n    } catch (error) {\r\n      this.logger.error('loadShellApplicationsAsync:Error retrieving shell applications', error);\r\n    }\r\n  }\r\n\r\n  private async getShellApplicationsAsync(): Promise<AvailableUfe> {\r\n    let result: AvailableUfe = { AvailableUfe: [] };\r\n\r\n    if (environment?.useFrontEndJson != undefined && !environment.useFrontEndJson) {\r\n      return result;\r\n    }\r\n\r\n    try {\r\n      const path = this.window.location.origin + '/assets/frontEnd.json';\r\n      const request = this.http.get<AvailableUfe>(path);\r\n\r\n      result = await firstValueFrom(request);\r\n    } catch (error) {\r\n      this.logger.warn('loading rontEnd.json failed. This is expected for uFE shell');\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * This method merges the app list (frontend.json) with the data of the web resource locator. This is requird that we can merge the location information for the shell with the wrl data.\r\n   * This is to ensure backward compatibility.\r\n   * @param resource the web resource locator data\r\n   */\r\n  public updateWebResourceAppList(resource: WebResource): void {\r\n    // todo manuel: we have two places where the appList is maintained and updated on the fly. this need to be merged into one place with one list.\r\n    const app = this.createAppDescriptionFromWebResource(resource);\r\n    const availableApps = this.shellStateStore.availableUfe().AvailableUfe;\r\n    const isAppAlreadyExisting = availableApps.some(availableApp => availableApp.combinedName === app.combinedName);\r\n    if (!isAppAlreadyExisting) {\r\n      availableApps.push(app);\r\n      this.shellStateStore.setAvailableUfe(availableApps);\r\n    }\r\n  }\r\n\r\n  private async getApplicationListWithAssignedUrlAsync(): Promise<AppDescription[]> {\r\n    const newList: AppDescription[] = [];\r\n    const ufeApplicationList = this.shellStateStore\r\n      .availableUfe()\r\n      .AvailableUfe.map(app => new WrlApplicationInstance(app.appName, app.resourceName));\r\n    const activeUfeWebResources = await this.wrlSvc.findWebResourcesAsync(ufeApplicationList);\r\n\r\n    for (const ufeApp of this.shellStateStore.availableUfe().AvailableUfe) {\r\n      const activeUfeWebResource = activeUfeWebResources.find(\r\n        webResource => webResource.appName === ufeApp.appName && webResource.resourceName === ufeApp.resourceName\r\n      );\r\n\r\n      if (activeUfeWebResource == undefined) {\r\n        this.logger.error(`There is no web resource for ${ufeApp.appName} ${ufeApp.resourceName}`);\r\n        newList.push(ufeApp);\r\n        continue;\r\n      }\r\n\r\n      const newApp = AppDescription.create(\r\n        ufeApp.appName,\r\n        ufeApp.resourceName,\r\n        activeUfeWebResource.url,\r\n        ufeApp.location,\r\n        ufeApp.dialogConfig\r\n      );\r\n      this.modifyUrl(newApp);\r\n      newList.push(newApp);\r\n    }\r\n    return newList;\r\n  }\r\n}\r\n","import { DestroyRef, inject, Injectable } from '@angular/core';\r\nimport { RootInjectorGuard } from '../shared/type-guards/root-injector.guard';\r\nimport { CommandHandlerInterface } from './models/command-handler.interface';\r\nimport { UfeCommand } from '../models/UfeCommand';\r\nimport { PeerCommunicatorService } from '../services/peer-communicator.service';\r\nimport { ShellCommunicatorService } from '../services/shell-communicator.service';\r\nimport { UfeEnvironmentStore } from '../stores/ufe-environment.store';\r\nimport { ShellStateStore } from '../shared/front-end-discovery/stores/shell-state.store';\r\nimport { AppDescription } from '../models/AppDescription';\r\nimport { isOpenWebResourceCommandArgument, isWrlCommandArgument } from '../shared/helpers/ifx-ufe-type.guards';\r\nimport {\r\n  OpenWebResourceCommandArgument,\r\n  WrlCommandArgument,\r\n} from '../shared/web-resource-locator/models/wrl-command-argument';\r\nimport { UfeDialogComponent } from '../components/ufe-dialog/ufe-dialog.component';\r\nimport { ExcecutionEnvironmentType } from '../models/ufe-environment.interface';\r\nimport { UfeDialogConfig } from '../models/UfeDialogConfig';\r\nimport { WebResource } from '../shared/web-resource-locator/models/web-resource';\r\nimport { WRLParameter } from '../shared/web-resource-locator/models/wrl-parameter';\r\nimport { FrontEndDiscoveryService } from '../shared/front-end-discovery/front-end-discovery.service';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { filter, Subject, take, tap, timeout } from 'rxjs';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { WebResourceService } from '../shared/web-resource-locator/services/web-resource.service';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PeerCommandHandlerService\r\n  extends RootInjectorGuard<PeerCommandHandlerService>\r\n  implements CommandHandlerInterface\r\n{\r\n  private peerCom = inject(PeerCommunicatorService);\r\n  private shellCom = inject(ShellCommunicatorService);\r\n  private envStore = inject(UfeEnvironmentStore);\r\n  private shellStateStore = inject(ShellStateStore);\r\n  private feDiscovery = inject(FrontEndDiscoveryService);\r\n  private ufeReadyNotification$: Subject<string> = new Subject<string>();\r\n  private destroyRef = inject(DestroyRef);\r\n  private wrlSvc = inject(WebResourceService);\r\n  private auth = inject(AuthenticationService);\r\n  private dialog = inject(MatDialog);\r\n  private ufeDialog: MatDialogRef<UfeDialogComponent, any> | undefined;\r\n\r\n  constructor() {\r\n    super('PeerCommandHandlerService');\r\n  }\r\n\r\n  public canProcess(): boolean {\r\n    return this.envStore.isSelfHosted();\r\n  }\r\n\r\n  public handleCommand(ufeCommand: UfeCommand): void {\r\n    switch (ufeCommand.command) {\r\n      case 'PEER_MESSAGE':\r\n        this.handlePeerMessage(ufeCommand);\r\n        break;\r\n\r\n      case 'PEER_READY':\r\n        this.peerCom.setPeerReady(ufeCommand);\r\n        break;\r\n      case 'PEER_MESSAGE_IN_TAB': {\r\n        /** The second boolean parameter is defined here to distinguish between\r\n         * the dialog-modal and dialog-browser, and by default it is false (dialog-modal). */\r\n        this.peerCom.sendPeerMessageInTab(ufeCommand, false);\r\n        break;\r\n      }\r\n\r\n      case 'UFE_READY':\r\n        this.handleUfeReadyAsync(ufeCommand);\r\n        break;\r\n\r\n      case 'PEER_MESSAGE_WRL':\r\n        this.handlePeerMessageWrl(ufeCommand);\r\n        break;\r\n      case 'CLOSE_UFE_WRL':\r\n        this.handleCloseUfeWrl(ufeCommand);\r\n        break;\r\n      case 'OPEN_WEB_RESOURCE':\r\n        this.logger.info('OPEN_WEB_RESOURCE', ufeCommand);\r\n        this.openWebResource(ufeCommand);\r\n        break;\r\n\r\n      case 'OPEN_UFE':\r\n        this.handleOpenUfe(ufeCommand);\r\n        break;\r\n      case 'OPENER_ID':\r\n        this.peerCom.registerOpener(ufeCommand);\r\n        break;\r\n\r\n      case 'OPEN_UFE_IN_TAB': {\r\n        /** The second boolean parameter is defined here to distinguish between the\r\n         * dialog-modal and dialog-browser, and by default it is false (dialog-modal).*/\r\n        this.peerCom.openPeerInTab(ufeCommand, false);\r\n        break;\r\n      }\r\n      case 'AUTH_TOKEN_REQUIRED':\r\n        this.sendAuthToken(this.getRequestingUfe(ufeCommand));\r\n        break;\r\n      case 'REFRESH_COMPLETE':\r\n        this.logger.debug(\r\n          'SHELL REFRESH_COMPLETE completeRefresh',\r\n          window.location.href,\r\n          this.shellStateStore.activeApps()\r\n        );\r\n        this.shellStateStore.activeApps().forEach(app => {\r\n          this.sendAuthToken(app);\r\n        });\r\n        break;\r\n      case 'LANGUAGE_TOGGLE':\r\n        this.shellStateStore.activeApps().forEach(app => {\r\n          this.updateLanguage(app);\r\n        });\r\n    }\r\n  }\r\n\r\n  private async openWebResource(ufeCommand: UfeCommand) {\r\n    let wrlCommand = ufeCommand.params[0] as OpenWebResourceCommandArgument;\r\n    if (!isOpenWebResourceCommandArgument(wrlCommand)) {\r\n      // to be backward compatible\r\n      wrlCommand = new OpenWebResourceCommandArgument(ufeCommand.params[0] as WebResource, ufeCommand.params[1]);\r\n    }\r\n\r\n    const webResourceToOpen = wrlCommand.webResource;\r\n    const webResourceArgs = wrlCommand.args;\r\n    const webResourceTargetLocation = wrlCommand.targetLocation;\r\n\r\n    this.feDiscovery.updateWebResourceAppList(webResourceToOpen);\r\n\r\n    const tabName = webResourceToOpen.appName.trim() + '_' + webResourceToOpen.resourceName.trim();\r\n    if (webResourceToOpen.webResourceType.toLowerCase() == 'ufe') {\r\n      // find updated target data and location, launch as dialog if needed\r\n      const ufeToOpen = this.shellStateStore.appList().find(ad => ad.combinedName == tabName);\r\n\r\n      if (ufeToOpen == undefined) {\r\n        this.logger.error('Could not find the uFE', tabName);\r\n        return;\r\n      }\r\n\r\n      const targetLocation =\r\n        ufeToOpen.location === 'not-found' ? (webResourceTargetLocation ?? ufeToOpen.location) : ufeToOpen.location;\r\n\r\n      if (targetLocation == 'dialog-modal') {\r\n        const peerMessageCommand = new UfeCommand(this.envStore.ufeInstanceName(), 'PEER_MESSAGE', [\r\n          tabName,\r\n          wrlCommand.args,\r\n        ]);\r\n        this.showUfeDialog(peerMessageCommand, this.resolveUfeToOpenUrl(ufeToOpen, webResourceToOpen, webResourceArgs));\r\n      } else if (targetLocation == 'dialog-browser') {\r\n        try {\r\n          const peerMessageCommand = new UfeCommand(this.envStore.ufeInstanceName(), 'PEER_MESSAGE', [\r\n            tabName,\r\n            wrlCommand.args,\r\n          ]);\r\n          ufeToOpen.windowReference = this.peerCom.sendPeerMessageInTab(peerMessageCommand, true, 'SHELL');\r\n        } catch (error) {\r\n          this.shellCom.sendWarningNotification(`Could not open the the uFE ${ufeToOpen.appName} in a new tab`);\r\n          this.logger.error('Could not open the the uFE', ufeToOpen.appName, error);\r\n        }\r\n      } else if (targetLocation === 'new-tab' || targetLocation === 'not-found' || targetLocation === 'new-shell-tab') {\r\n        // we now map the OPEN_WEB_RESOURCE message to a PEER_MESSAGE to keep it transparent to the library consumers\r\n        // we also need to override the web resource to be the actual web resource identifier\r\n        const peerMessageCommand = new UfeCommand(ufeCommand.sender, 'PEER_MESSAGE', [tabName, wrlCommand.args]);\r\n        const targetEnvType: ExcecutionEnvironmentType = targetLocation === 'new-shell-tab' ? 'SHELL' : 'SELF';\r\n        this.peerCom.sendPeerMessageInTab(peerMessageCommand, false, targetEnvType);\r\n      } else {\r\n        // we now map the OPEN_WEB_RESOURCE message to a PEER_MESSAGE to keep it transparent to the library consumers\r\n        // we also need to override the web resource to be the actual web resource identifier\r\n        // ToDo: is this else still needed?\r\n        const peerMessageCommand = new UfeCommand(ufeCommand.sender, 'PEER_MESSAGE', [tabName, wrlCommand.args]);\r\n        this.handlePeerMessage(peerMessageCommand);\r\n      }\r\n    } else {\r\n      const url = this.resolveWebResourceQueryParams(webResourceToOpen, webResourceArgs);\r\n      window.open(url, tabName);\r\n    }\r\n  }\r\n\r\n  private resolveUfeToOpenUrl(\r\n    ufeToOpen: AppDescription,\r\n    webResourceToOpen: WebResource,\r\n    peerMessageArgs: Object\r\n  ): AppDescription {\r\n    const targetUfeToOpen = AppDescription.copy(ufeToOpen);\r\n    const webResourceWithUfeUrl = { ...webResourceToOpen, url: ufeToOpen.url };\r\n    targetUfeToOpen.url = this.resolveWebResourceQueryParams(webResourceWithUfeUrl, peerMessageArgs).href;\r\n\r\n    return targetUfeToOpen;\r\n  }\r\n\r\n  private resolveWebResourceQueryParams(webResource: WebResource, peerMessageArgs: Object): URL {\r\n    let webResourceUrl = webResource.url;\r\n\r\n    // todo manuel - we need to add some sort of argument check here - see description of other identical comment\r\n    this.logger.info('resource is of type not ufe');\r\n    if (webResource.args && !peerMessageArgs) {\r\n      console.error(\r\n        `The resource ${webResource.appName} + ${webResource.resourceName} requires ${webResource.args.length} arguments but no were provided`\r\n      );\r\n    }\r\n    if (webResource.args && peerMessageArgs) {\r\n      const argsMap = new Map<string, string>();\r\n      for (const [key, value] of Object.entries(peerMessageArgs)) {\r\n        argsMap.set(key, value as string);\r\n      }\r\n\r\n      webResource.args.forEach((arg: WRLParameter) => {\r\n        const value = argsMap.get(arg.name);\r\n        if (value === undefined) {\r\n          console.error(\r\n            `The resource ${webResource.appName} + ${webResource.resourceName} requires argument ${arg.name}, but the call provided no value for it`\r\n          );\r\n        } else {\r\n          webResourceUrl = this.replaceAll(webResourceUrl, '<' + arg.name + '>', value as string);\r\n        }\r\n      });\r\n    }\r\n\r\n    return new URL(webResourceUrl);\r\n  }\r\n\r\n  private replaceAll(text: string, toReplace: string, replacement: string): string {\r\n    return text.split(toReplace).join(replacement);\r\n  }\r\n\r\n  private showUfeDialog(cmd: UfeCommand, target: AppDescription) {\r\n    if (!target.dialogConfig) {\r\n      target.dialogConfig = new UfeDialogConfig();\r\n    }\r\n\r\n    this.sendPeerMessageAfterUfeReady(target.combinedName, cmd);\r\n\r\n    this.ufeDialog = this.dialog.open(UfeDialogComponent, {\r\n      height: target.dialogConfig.height,\r\n      width: target.dialogConfig.width,\r\n      data: {\r\n        app: target,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * handlePeerMessage passes this UfeCommand from one uFE to another\r\n   * @param msg UfeCommand the command to be passed\r\n   * @private\r\n   */\r\n  private async handlePeerMessage(msg: UfeCommand) {\r\n    const receiverUfeApp = this.getTargetUfe(msg);\r\n    const senderUfeApp = this.getRequestingUfe(msg);\r\n\r\n    // ignore the message processing if the sender is not valid\r\n    const isSenderUfeInValid = !senderUfeApp.combinedName;\r\n    if (isSenderUfeInValid) {\r\n      return;\r\n    }\r\n\r\n    await this.handleOpenUfe(msg, false).then(isOpen => {\r\n      if (!isOpen) {\r\n        //couldn't open the uFE, so we can't send the message, send a reply to the originator and throw an error\r\n        const response = new UfeCommand('SHELL', 'PEER_MESSAGE', [false]);\r\n        this.shellCom.sendChildMessage(response, senderUfeApp);\r\n        throw new Error('Unable to open Peer uFE to send message');\r\n      }\r\n    });\r\n\r\n    const response = new UfeCommand('SHELL', 'PEER_MESSAGE', [true]);\r\n\r\n    //send the message to the peer\r\n    this.shellCom.sendChildMessage(msg, receiverUfeApp);\r\n\r\n    //send the confirmation to the originator\r\n    this.shellCom.sendChildMessage(response, senderUfeApp);\r\n  }\r\n\r\n  private getTargetUfe(msg: UfeCommand): AppDescription {\r\n    return this.shellStateStore.getUfeApp(msg.params[0] as string);\r\n  }\r\n\r\n  private getRequestingUfe(msg: UfeCommand): AppDescription {\r\n    return this.shellStateStore.getUfeApp(msg.sender as string);\r\n  }\r\n\r\n  /**\r\n   * handleOpenUfe checks if the uFE indicated in the OPEN_UFE command is currently active within the shell.  If it is,\r\n   * handleOpenUfe will surface the uFE.  If not, it will open the uFE.\r\n   * @param msg UfeCommand with either OPEN_UFE or PEER_MESSAGE as the value of the command field\r\n   * @param sendResponse boolean A reply UfeCommand is sent to the requesting uFE if true, no response is sent if false\r\n   * @private\r\n   */\r\n  private async handleOpenUfe(msg: UfeCommand, sendResponse = true): Promise<boolean> {\r\n    const target = this.getTargetUfe(msg);\r\n    const originator = this.getRequestingUfe(msg);\r\n    const isValidTarget = !!target.combinedName;\r\n\r\n    if (!isValidTarget) {\r\n      return false;\r\n    }\r\n\r\n    if (sendResponse) {\r\n      const reply = new UfeCommand('SHELL', 'OPEN_UFE', [false]);\r\n      this.shellCom.sendChildMessage(reply, originator);\r\n    }\r\n\r\n    await this.openTargetIfNotActive(target);\r\n\r\n    if (sendResponse) {\r\n      this.sendOpenUfeResponse(target, msg, originator);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private async openTargetIfNotActive(target: AppDescription): Promise<void> {\r\n    const foundApp = this.shellStateStore.activeApps().some(app => app.combinedName == target.combinedName);\r\n    if (!this.shellStateStore.activeApps().some(app => app.combinedName == target.combinedName)) {\r\n      await this.onAppSelect(target);\r\n    }\r\n  }\r\n\r\n  private sendOpenUfeResponse(target: AppDescription, msg: UfeCommand, originator: AppDescription): void {\r\n    const reply = new UfeCommand('SHELL', 'OPEN_UFE', [true]);\r\n    if (target.location == 'new-tab') {\r\n      reply.params[1] = msg.params;\r\n    }\r\n    this.shellCom.sendChildMessage(reply, originator);\r\n  }\r\n\r\n  /**\r\n   * onAppSelect update the active status of this app in the shell or self hosted uFE\r\n   * @param app AppDescription the app to be instantiated\r\n   */\r\n  private async onAppSelect(app: AppDescription): Promise<void> {\r\n    //if the app is already active, this is a signal to close it\r\n    const activeApps = this.shellStateStore.activeApps();\r\n    const isActive = activeApps.findIndex((item: AppDescription) => item.combinedName == app.combinedName);\r\n    if (!isActive) {\r\n      activeApps.push(app);\r\n      this.shellStateStore.setActiveApps(activeApps);\r\n    }\r\n    this.shellStateStore.appSelected$.next(app);\r\n  }\r\n\r\n  /**\r\n   * onAppDeSelect remove this app from the active apps list in the shell or self hosted uFE\r\n   * @param app AppDescription the app to be instantiated\r\n   */\r\n    private async onAppDeSelect(app: AppDescription): Promise<void> {\r\n      const activeApps = this.shellStateStore.activeApps();\r\n      const isActive = activeApps.findIndex((item: AppDescription) => item.combinedName == app.combinedName);\r\n      if (isActive != -1) {\r\n        activeApps.splice(isActive, 1);\r\n        this.shellStateStore.appDeselected$.next(app);\r\n        this.shellStateStore.setActiveApps(activeApps);\r\n        return;\r\n      } else {\r\n        this.logger.warn('App not found in active apps', app.combinedName);\r\n      }\r\n    }\r\n\r\n  /**\r\n   * Sends the peer message after the UFE_READY message was returned. In case it would never be sent it gives up waiting after 60 seconds.\r\n   * @param targetAppName - the unique name of the ufe which should receive the message\r\n   * @param message - the peer message which should be sent\r\n   */\r\n  private sendPeerMessageAfterUfeReady(targetAppName: string, message: any) {\r\n    // send the ufeReadyMessage once the ufe was opened\r\n    this.ufeReadyNotification$\r\n      .pipe(timeout(60000))\r\n      .pipe(tap(val => this.logger.debug('Waiting for ufeReadyNotification', val)))\r\n      .pipe(filter(ufeName => ufeName === targetAppName))\r\n      .pipe(take(1), takeUntilDestroyed(this.destroyRef))\r\n      .subscribe(_ => this.handlePeerMessage(message));\r\n  }\r\n\r\n  /**\r\n   * handlePeerMessage passes this UfeCommand from one uFE to another\r\n   * @param msg UfeCommand the command to be passed\r\n   * @private\r\n   */\r\n  private async handlePeerMessageWrl(msg: UfeCommand) {\r\n    let wrlCommandArgument: WrlCommandArgument = msg.params[0];\r\n    if (!isWrlCommandArgument(wrlCommandArgument)) {\r\n      // to be backward compatible\r\n      wrlCommandArgument = new WrlCommandArgument(\r\n        msg.params[0] /*applicationName*/,\r\n        msg.params[1] /*webResourceName*/,\r\n        msg.params[2] /*args*/,\r\n        msg.params[3] /*isAnonymous*/\r\n      );\r\n    }\r\n\r\n    this.wrlSvc.launchWebResourceAsShell(\r\n      msg.sender,\r\n      wrlCommandArgument.applicationName,\r\n      wrlCommandArgument.resourceName,\r\n      wrlCommandArgument.args,\r\n      wrlCommandArgument.isAnonymous,\r\n      wrlCommandArgument.targetLocation\r\n    );\r\n  }\r\n\r\n  private handleCloseUfeWrl(msg: UfeCommand) {\r\n    const app = new AppDescription(msg.params[0], msg.params[1]);\r\n    const activeApp = this.shellStateStore.activeApps().find(ad => ad.combinedName == app.combinedName);\r\n\r\n    if (!activeApp?.windowReference) {\r\n      this.logger.info(`Ufe ${app.combinedName} is not open in window reference`);\r\n      return;\r\n    }\r\n\r\n    const logoutMessage = new UfeCommand('SHELL', 'LOGOUT', []);\r\n\r\n    this.shellCom.sendChildMessage(logoutMessage, app);\r\n    this.onAppDeSelect(activeApp);\r\n    // close the window if it is a dialog-browser child after logout\r\n    activeApp.windowReference?.ref?.close();\r\n  }\r\n\r\n  private async processUfeReady(app: AppDescription, sender: string) {\r\n    app.isLoaded = true;\r\n    this.parameterizeApp(app);\r\n    await this.onAppSelect(app);\r\n\r\n    // shell internal subscription to be notified once a ufe is loaded\r\n    this.logger.debug('ufeReadyNotification next', sender);\r\n    this.ufeReadyNotification$.next(sender);\r\n  }\r\n\r\n  private async handleUfeReadyAsync(msg: UfeCommand) {\r\n    this.logger.debug('----- handleUfeReadyAsync', msg.sender);\r\n    for (const app of this.shellStateStore.appList()) {\r\n      this.logger.debug('----- SHELL Receive UFE_READY', app.combinedName, msg.sender);\r\n      if (app.combinedName === msg.sender) {\r\n        await this.processUfeReady(app, msg.sender);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * parameterizeApp ensures this app is passed the current application state variables including\r\n   * current language, JWT Token, and Environment\r\n   * @param app AppDescription\r\n   * @private\r\n   */\r\n  private parameterizeApp(app: AppDescription) {\r\n    this.setEnvironment(app); //must set the environment before pushing other information\r\n    const languageNotification = new UfeCommand('shell', 'LANGUAGE_TOGGLE', [this.envStore.currentLanguage()]);\r\n    this.shellCom.sendChildMessage(languageNotification, app);\r\n\r\n    this.sendAuthToken(app);\r\n  }\r\n\r\n  /**\r\n   * setEnvironment sets this app's EXECUTION_ENVIRONMENT variable to SHELL\r\n   * @param app AppDescription the uFE to set the execution environment variable for.\r\n   * @private\r\n   */\r\n  private setEnvironment(app: AppDescription) {\r\n    const msg = new UfeCommand('SHELL', 'EXECUTION_ENVIRONMENT', ['SHELL']);\r\n    this.shellCom.sendChildMessage(msg, app);\r\n  }\r\n\r\n  private sendAuthToken(app: AppDescription) {\r\n    const authToken = this.auth.currentAuthToken();\r\n    const data = JSON.stringify(authToken);\r\n    const notification = new UfeCommand('SHELL', 'JWT_TOKEN', [data]);\r\n\r\n    this.shellCom.sendChildMessage(notification, app);\r\n  }\r\n\r\n  private updateLanguage(app: AppDescription) {\r\n    const languageNotification = new UfeCommand('SHELL', 'LANGUAGE_TOGGLE', [this.envStore.currentLanguage()]);\r\n    this.shellCom.sendChildMessage(languageNotification, app);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { UfeCommandObserverItem, UfeCommandObserverType } from './command-observer.model';\r\nimport { UfeCommand } from '../../models/UfeCommand';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommandObserverService {\r\n  private commands$: Subject<UfeCommand> = new Subject<UfeCommand>();\r\n\r\n  public add(command: UfeCommand, type: UfeCommandObserverType): void {\r\n    this.commands$.next(<UfeCommandObserverItem>{ ...command, type: type });\r\n  }\r\n\r\n  public watch$(): Observable<UfeCommand> {\r\n    return this.commands$;\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostListener,\r\n  ElementRef,\r\n  Renderer2,\r\n  OnInit,\r\n  Input,\r\n  OnDestroy,\r\n  effect,\r\n  inject,\r\n} from '@angular/core';\r\nimport { UfeCommand } from '../models/UfeCommand';\r\nimport { CommandHandlerNotificationService } from '../services/command-handler-notification.service';\r\nimport { NotificationModel } from '../models/notification.model';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { ShellCommunicatorService } from '../services/shell-communicator.service';\r\nimport { IPCService } from '../services/ipc.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UrlCaptureService } from '../services/url-capture.service';\r\nimport { filter, Subscription, take } from 'rxjs';\r\nimport { EnvironmentManagerService } from '../services/environment-manager.service';\r\nimport { AuthMode } from '../models/AuthMode.enum';\r\nimport { UfeEnvironmentStore } from '../stores/ufe-environment.store';\r\nimport { ExcecutionEnvironmentType } from '../models/ufe-environment.interface';\r\nimport { IfxUfeLoggerService } from '../shared/logging/ifx-ufe-logger.service';\r\nimport { isUfeCommand } from '../shared/helpers/ifx-ufe-type.guards';\r\nimport { environment } from '../../environments/environment';\r\nimport { UfeCommandProcessorService } from '../command-handler/ufe-command-processor.service';\r\nimport { AppCommandHandlerService } from '../command-handler/app-command-handler.service';\r\nimport { PeerCommandHandlerService } from '../command-handler/peer-command-handler.service';\r\nimport { CommandObserverService } from '../shared/command-observer/command-observer.service';\r\n\r\n@Directive({\r\n  selector: '[ufeMessageListener]',\r\n})\r\nexport class MessageListenerDirective implements OnInit, OnDestroy {\r\n  private element = inject(ElementRef);\r\n  private render = inject(Renderer2);\r\n  private commandHandlerNotificationService = inject(CommandHandlerNotificationService);\r\n  private auth = inject(AuthenticationService);\r\n  private comm = inject(ShellCommunicatorService);\r\n  private ipc = inject(IPCService);\r\n  private route = inject(ActivatedRoute);\r\n  private url = inject(UrlCaptureService);\r\n  private envManager = inject(EnvironmentManagerService);\r\n  private router = inject(Router);\r\n  private envStore = inject(UfeEnvironmentStore);\r\n  private logger = inject(IfxUfeLoggerService);\r\n\r\n  /**\r\n   * The name of this uFE as provided by the uFE programmer\r\n   */\r\n  @Input() ufeName: string = 'SELF';\r\n\r\n  /**\r\n   * The default route users should be directed to if no other route is specified once a user is authenticated\r\n   */\r\n  @Input() baseRoute: string = '';\r\n\r\n  /**\r\n   * autoDockout defines who should handle DOCKOUT_REQUEST UfeCommands that are received. True if the library should\r\n   * handle the command, false otherwise.  The ifx-ufe library can only properly handle a DOCKOUT_REQUEST if all\r\n   * necessary state information is captured in the uFE's current URL\r\n   */\r\n  @Input() autoDockout: boolean = true;\r\n\r\n  /**\r\n   * linkGroup is a string representing a valid linkGroup name registered with the FrontEndDiscoveryService.  Note that\r\n   * as the actual back-end service is not yet built, it is currently mocked using the file assets/defaultGroup.json\r\n   */\r\n  @Input() linkGroup: string = '';\r\n\r\n  /**\r\n   * showLanguageControls defines whether the language toggle controls should be displayed in the UfeHeaderComponent.\r\n   * True to display the controls, false otherwise.\r\n   */\r\n  @Input() showLanguageControls: boolean = true;\r\n\r\n  /**\r\n   * helpLink is a string representation of the URL lining to the help document for this uFE\r\n   */\r\n  @Input() helpLink: string = '';\r\n\r\n  /**\r\n   *  define the authorization login mode Kerberos|Credentials|Ask\r\n   *  Kerberos == auto login\r\n   *  Credentials == user/password\r\n   *  Ask == Selection page\r\n   */\r\n  @Input() authMode: AuthMode = AuthMode.Kerberos;\r\n\r\n  /**\r\n   * blocker is an invisible HTML element that is used to prevent user input to the main UI of this uFE when a modal\r\n   * dialog has been spawned and this.executionEnv == EMBEDDED\r\n   * @private\r\n   */\r\n  private blocker!: HTMLElement;\r\n\r\n  /**\r\n   * subscriptions is used as a collector - all subscriptions created in the code are added to this subscription so they\r\n   * can all be unsubscribed from at once in ngOnDestroy\r\n   * @private\r\n   */\r\n  private subscriptions: Subscription = new Subscription();\r\n\r\n  /**\r\n   * executionEnv represents the current execution environment.  Possible values are SELF, SHELL, NATIVE_SHELL, and\r\n   * EMBEDDED.\r\n   * @private\r\n   */\r\n  // private executionEnv: string = 'SELF';\r\n\r\n  /**\r\n   * onReceiveMessage listens for window:message events and reacts to them according to the contents of the message\r\n   * @param $event\r\n   */\r\n  @HostListener('window:message', ['$event'])\r\n  onReceiveMessage($event: any): void {\r\n    const data = $event.data;\r\n\r\n    if (isUfeCommand(data)) {\r\n      if (data.sender === this.ufeName) {\r\n        data.sender = 'SELF';\r\n      }\r\n\r\n      this.logger.debug('--- Received message', data.sender, data.command);\r\n\r\n      switch (data.sender) {\r\n        case 'SHELL':\r\n          this.handleShellCommand(data);\r\n          break;\r\n        case 'SELF':\r\n          this.handleSelfCommand(data);\r\n          break;\r\n        default:\r\n          this.handleUfePeerCommand(data);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private ufeCommandProcessor = inject(UfeCommandProcessorService);\r\n  private appCommandHandler = inject(AppCommandHandlerService);\r\n  private peerCommandHandler = inject(PeerCommandHandlerService);\r\n  private commandObserverService = inject(CommandObserverService);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {\r\n    effect(() => {\r\n      //If the environment is set to NATIVE_SHELL, and we have an opener, this window is a dockout instance, we need\r\n      //to send a UFE_READY signal back to the opener so they can send us any additional configuration details we need\r\n      //note this test *must* be done in the executionEnvironment$ handler to guarantee the execution environment is not\r\n      //undefined when the test is executed.\r\n      if (this.envStore.executionEnvironment() == 'NATIVE_SHELL' && window.opener != null) {\r\n        const reply = new UfeCommand(this.ufeName, 'UFE_READY');\r\n        try {\r\n          this.comm.sendShellMessage(reply, 'WINDOW_OPENER');\r\n        } catch (e) {\r\n          this.logger.error('Error posting UFE_READY to opener', e);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.addAuthSubscription();\r\n\r\n    this.ufeCommandProcessor.registerHandler(this.appCommandHandler);\r\n    this.ufeCommandProcessor.registerHandler(this.peerCommandHandler);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.logger.info('init message-listener for' + this.ufeName);\r\n    //This allows us to check for an execution environment passed via query string before the redirect to a deeper\r\n    //route.  This check and update is necessary or routes that have deeper links than the base and also a query string\r\n    //that sets the environment (e.g. localhost:4200/core?_ifxEnvironment=NATIVE_SHELL) will lose the environment\r\n    //variable after they are stopped by a uFE's canActivate guard.  The guard will store the path, but not the query\r\n    //string, then redirect the browser to the login component.  The login component will have no knowledge that it is\r\n    //operating in any environment other than SELF and will thus execute the login flow.  This flow should not be executed\r\n    //if the environment is anything other than SELF.  Since this library has no control over how client code implements\r\n    //canActivate guards, the environment must be set *before* the router has the chance to redirect the browser to the\r\n    //guard.\r\n    const params = this.getQueryParams();\r\n    if (params.get('_ifxEnvironment') != null) {\r\n      this.envManager.setExecutionEnvironment(params.get('_ifxEnvironment') as ExcecutionEnvironmentType);\r\n    }\r\n\r\n    //since the _ifxHeader variable can be passed via query string, we have to handle it the same way as the execution\r\n    //environment variable for all the same reasons\r\n    if (params.get('_ifxHeader') != null) {\r\n      const headerVisibility = params.get('_ifxHeader') === 'true' ? 'SHOW_HEADER' : 'HIDE_HEADER';\r\n      const cmd = new UfeCommand(this.ufeName, headerVisibility, []);\r\n      this.relayMessage(cmd);\r\n    }\r\n\r\n    //store the base route for future use\r\n    this.url.setBaseRoute(this.baseRoute);\r\n    const ufeid = 'ufeid';\r\n\r\n    // preserve the ufeid after we got back from login redirect\r\n    //SOURCE: https://stackoverflow.com/questions/22079477/session-is-lost-after-an-oauth-redirect\r\n    if (params.get(ufeid) != null) {\r\n      // we got our app name by the shell right now with the initial call\r\n      // NOTE: If we are running inside the shell, there will be no redirect and two uFEs of same origin URL will not interfere, even if they overwrite the appName value in the session storage.\r\n      this.ufeName = params.get(ufeid)!;\r\n      this.logger.info('we got our app name by the shell right now with the initial call: ' + this.ufeName);\r\n    } else if (this.envManager.getAppNameFromSessionStorage() != null) {\r\n      // the app name was provided by the shell previously and we just came back from oidc redirect\r\n      this.ufeName = this.envManager.getAppNameFromSessionStorage() ?? 'uFE-DefaultAppNameValue';\r\n      this.logger.info(\r\n        'the app name was provided by the shell previously and we just came back from oidc redirect: ' + this.ufeName\r\n      );\r\n    } else {\r\n      // we did not got an app name from the shell nor we have it already in the session storage\r\n      this.logger.info(\r\n        'we did not got an app name from the shell nor we have it already in the session storage: ' + this.ufeName\r\n      );\r\n    }\r\n\r\n    //ToDo: only the instanceName identify the correct ufe instacne. Have to be refactored later.\r\n    this.envManager.setUfeName(this.ufeName); // must be also executed for the first case, because otherwise we would not trigger the observers.\r\n\r\n    //this checks if we were redirected back to the app after a login was initiated and completes the\r\n    //login flow if so.\r\n    const rSub = this.route.queryParams.subscribe(params => {\r\n      //this has been added to create usecase without auth parameter\r\n      //it will used now the window.location.href to get correct auth result\r\n      if (params['code'] != null && params['state'] != null) {\r\n        this.auth.initialAuthentication();\r\n      }\r\n    });\r\n    this.subscriptions.add(rSub);\r\n\r\n    this.envStore.setLinkGroup(this.linkGroup);\r\n    this.envStore.setShowLanguageControls(this.showLanguageControls);\r\n    this.sendReadySignal();\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  private addAuthSubscription() {\r\n    //if we have an opener, it is possible we have been opened by a peer.  Send the PEER_READY command once we have\r\n    // completed the authentication workflow. If in fact we were opened by a shell rather than a peer, the shell will\r\n    // ignore this message\r\n    if (window.opener == null) {\r\n      return;\r\n    }\r\n\r\n    const authSub = this.auth.isAuthenticated$\r\n      .pipe(\r\n        filter(isAuth => isAuth.kerberos || isAuth.credentials),\r\n        take(1)\r\n      )\r\n      .subscribe(isAuth => {\r\n        if (window.opener != null && (isAuth.kerberos || isAuth.credentials)) {\r\n          this.logger.debug('Send PEER_READY to Opener', this.ufeName);\r\n          const reply = new UfeCommand(this.ufeName, 'PEER_READY', []);\r\n          try {\r\n            window.opener.postMessage(reply, '*');\r\n          } catch (e) {\r\n            this.logger.error('Error posting PEER_READY to opener', e);\r\n          }\r\n        }\r\n      });\r\n    this.subscriptions.add(authSub);\r\n  }\r\n\r\n  /**\r\n   * relayMessage posts this ufeCommand to the IPC for consumption by subscribers\r\n   * @param data\r\n   */\r\n  public relayMessage(data: UfeCommand) {\r\n    this.ipc.relayCommand(data);\r\n  }\r\n\r\n  /**\r\n   * handleShellCommand dispatches UfeCommands from the shell to their respective handler methods\r\n   * @param ufeCommand\r\n   * @private\r\n   */\r\n  private handleShellCommand(ufeCommand: UfeCommand): void {\r\n    this.commandObserverService.add(ufeCommand, 'SHELL');\r\n    this.logger.debug('+++MESSAGE LISTENER+++ handleShellCommand ' + ufeCommand.command, ufeCommand.sender, ufeCommand);\r\n    switch (ufeCommand.command) {\r\n      case 'JWT_TOKEN': {\r\n        this.auth.registerNewToken(ufeCommand.params[0]);\r\n        break;\r\n      }\r\n      case 'EXECUTION_ENVIRONMENT': {\r\n        this.envManager.setExecutionEnvironment(ufeCommand.params[0]);\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      }\r\n      case 'OPEN_DIALOG': {\r\n        this.onOpenDialog();\r\n        break;\r\n      }\r\n      case 'CLOSE_DIALOG': {\r\n        this.onCloseDialog();\r\n        break;\r\n      }\r\n      case 'NOTIFICATION_CLOSE': {\r\n        this.commandHandlerNotificationService.hideNotification();\r\n        break;\r\n      }\r\n      case 'REFRESH_COMPLETE': {\r\n        this.auth.completeRefresh();\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      }\r\n      case 'LOGOUT': {\r\n        this.logout();\r\n        break;\r\n      }\r\n      case 'DOCKOUT_REQUEST': {\r\n        if (this.autoDockout) {\r\n          this.handleDockoutRequest();\r\n        } else {\r\n          this.relayMessage(ufeCommand);\r\n        }\r\n        break;\r\n      }\r\n      case 'LANGUAGE_TOGGLE': {\r\n        this.envStore.setCurrentLanguage(ufeCommand.params[0]);\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      }\r\n      default: {\r\n        this.relayMessage(ufeCommand);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * handleSelfCommand dispatches UfeCommands received from this application to their respective handler methods\r\n   * @param ufeCommand\r\n   * @private\r\n   */\r\n  private handleSelfCommand(ufeCommand: UfeCommand): void {\r\n    this.commandObserverService.add(ufeCommand, 'SELF');\r\n    this.logger.debug('+++MESSAGE LISTENER+++ handleSelfCommand ' + ufeCommand.command, ufeCommand.sender, ufeCommand);\r\n    switch (ufeCommand.command) {\r\n      case 'NOTIFICATION': {\r\n        const notification = ufeCommand.params[0] as NotificationModel;\r\n        this.commandHandlerNotificationService.showNotification(notification);\r\n        break;\r\n      }\r\n      case 'NOTIFICATION_CLOSE': {\r\n        this.commandHandlerNotificationService.hideNotification();\r\n        break;\r\n      }\r\n      case 'OPEN_UFE': {\r\n        /** The second boolean parameter is defined here to distinguish between the\r\n         * dialog-modal and dialog-browser, and by default it is false (dialog-modal).*/\r\n        // this.peerCom.openPeerInTab(ufeCommand, false);\r\n        ufeCommand.command = 'OPEN_UFE_IN_TAB';\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      }\r\n      case 'PEER_MESSAGE': {\r\n        /** The second boolean parameter is defined here to distinguish between\r\n         * the dialog-modal and dialog-browser, and by default it is false (dialog-modal). */\r\n        // this.peerCom.sendPeerMessageInTab(ufeCommand, false);\r\n        ufeCommand.command = 'PEER_MESSAGE_IN_TAB';\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      }\r\n      case 'OPEN_DIALOG': {\r\n        this.blockMainUi();\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      }\r\n      case 'CLOSE_DIALOG': {\r\n        this.unblockMainUi();\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      }\r\n      case 'CLOSE_UFE_DIALOG': {\r\n        window.close();\r\n        break;\r\n      }\r\n      case 'UFE_READY': {\r\n        //Only set the execution environment to self if it has not already been set.  In a NATIVE_SHELL environment\r\n        //this uFE will receive its own UfeCommands as the iOS shell operates outside the browser context (ergo the\r\n        //uFE is in the top level context).\r\n        if (this.envStore.executionEnvironment() == undefined) {\r\n          this.envManager.setExecutionEnvironment('SELF');\r\n        }\r\n        break;\r\n      }\r\n      case 'PEER_READY': {\r\n        this.logger.info('PEER_READY', ufeCommand);\r\n        // this.peerCom.setPeerReady(ufeCommand);\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      }\r\n      case 'LOGIN_REQUIRED': {\r\n        this.logger.info('LOGIN_REQUIRED', this.authMode);\r\n        this.login(this.authMode);\r\n        break;\r\n      }\r\n      case 'LANGUAGE_TOGGLE': {\r\n        this.envStore.setCurrentLanguage(ufeCommand.params[0]);\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      }\r\n      case 'OPENER_ID':\r\n        ufeCommand.sender = this.ufeName;\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n\r\n      case 'PEER_MESSAGE_WRL':\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n\r\n      case 'OPEN_WEB_RESOURCE':\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      case 'REFRESH_COMPLETE': {\r\n        this.auth.completeRefresh();\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      }\r\n      default: {\r\n        this.relayMessage(ufeCommand);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ufePeerCommand dispatches UfeCommands received from all sources other than self or shell to their respective\r\n   * handler methods\r\n   * @param ufeCommand\r\n   * @private\r\n   */\r\n  private handleUfePeerCommand(ufeCommand: UfeCommand): void {\r\n    this.commandObserverService.add(ufeCommand, 'PEER');\r\n    this.logger.debug(\r\n      '+++MESSAGE LISTENER+++ handleUfePeerCommand ' + ufeCommand.command,\r\n      ufeCommand.sender,\r\n      ufeCommand\r\n    );\r\n    switch (ufeCommand.command) {\r\n      case 'PEER_READY':\r\n        // this.peerCom.setPeerReady(ufeCommand);\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      case 'OPENER_ID':\r\n        // this.peerCom.registerOpener(ufeCommand);\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      case 'AUTH_TOKEN_REQUIRED':\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n      default:\r\n        this.relayMessage(ufeCommand);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onOpenDialog makes the hierarchy that this directive is attached to invisible by adding the 'invisible' css class\r\n   * to the root element.  This is a required step in allowing a uFE modal dialog\r\n   * @private\r\n   */\r\n  private onOpenDialog() {\r\n    this.render.addClass(this.element.nativeElement, 'invisible');\r\n  }\r\n\r\n  /**\r\n   * onCloseDialog removes the 'invisible' class from the element this directive is attached to.  This must be called\r\n   * as part of the process of closing a uFE dialog.\r\n   * @private\r\n   */\r\n  private onCloseDialog() {\r\n    this.render.removeClass(this.element.nativeElement, 'invisible');\r\n  }\r\n\r\n  /**\r\n   * blockMainUi makes dialog boxes spawned in external windows modal by blocking the main UI of this component.  This\r\n   * will only apply if this.executionEnvironment == EMBEDDED\r\n   * @private\r\n   */\r\n  private blockMainUi() {\r\n    const enviro = this.envStore.executionEnvironment();\r\n    if (enviro != 'EMBEDDED') {\r\n      return;\r\n    }\r\n\r\n    this.blocker = document.createElement('div');\r\n    this.blocker.id = 'blocker';\r\n    this.blocker.className = 'blocker';\r\n    this.element.nativeElement.appendChild(this.blocker);\r\n  }\r\n\r\n  /**\r\n   * unblockMainUi removes the blocking div created by blockMainUi if it exists.  This will only apply if\r\n   * this.executionEnvironment == EMBEDDED\r\n   * @private\r\n   */\r\n  private unblockMainUi() {\r\n    const enviro = window.sessionStorage.getItem(environment.storageVariableNamePrefix + 'EXECUTION_ENVIRONMENT');\r\n    if (enviro != 'EMBEDDED') {\r\n      return;\r\n    }\r\n\r\n    if (this.blocker != null) {\r\n      this.blocker.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * sendReadySignal sends a UfeCommand to the top level context indicating that this UFE is loaded and ready to receive\r\n   * commands.  This command will be received by the shell or embedding application in the case of those execution scenarios\r\n   * or by this uFE in the case of a standalone scenario.\r\n   * @private\r\n   */\r\n  private sendReadySignal() {\r\n    const readySignal = new UfeCommand(this.ufeName, 'UFE_READY');\r\n\r\n    this.logger.debug('sendReadySignal', readySignal);\r\n    this.comm.sendShellMessage(readySignal, 'WINDOW_OPENER');\r\n\r\n    if (this.helpLink !== '') {\r\n      const helpLinkSignal = new UfeCommand(this.ufeName, 'HELP_LINK', [this.helpLink]);\r\n      this.comm.sendShellMessage(helpLinkSignal, 'WINDOW_OPENER');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * login initiates the authentication workflow for the kerberos identity\r\n   * @private\r\n   */\r\n  private login(mode: AuthMode): void {\r\n    if (mode && mode === AuthMode.Ask) {\r\n      this.router.navigateByUrl('auth-sel');\r\n      return;\r\n    }\r\n\r\n    if (mode === AuthMode.Credentials) {\r\n      this.auth.loginCredentials();\r\n    } else {\r\n      this.auth.loginKerberos();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * logout logs the current user out of this uFE by redirecting the browser to the logout component where the details\r\n   * of the workflow are handled\r\n   * @private\r\n   */\r\n  private logout() {\r\n    this.router.navigateByUrl('logout');\r\n  }\r\n\r\n  /**\r\n   * handleDockoutRequest responds to a UfeCommand of the type DOCKOUT_REQUEST by issuing a UfeCommand of the type\r\n   * DOCKOUT_REPLY with the current URL as the first parameter in the params array\r\n   * @private\r\n   */\r\n  private handleDockoutRequest() {\r\n    const currentUrl = window.location.href;\r\n    const reply = new UfeCommand(this.ufeName, 'DOCKOUT_REPLY', [currentUrl]);\r\n    this.comm.sendShellMessage(reply);\r\n  }\r\n\r\n  /**\r\n   * getQueryParams retrieves the query string parameters directly from the window object rather than the Angular\r\n   * Router.\r\n   */\r\n  public getQueryParams(): URLSearchParams {\r\n    /*\r\n     * Retrieving the query string parameters directly from the window object is necessary as the methods exposed by the\r\n     * Angular Router will not provide the query string params before rerouting the user's browser if they navigate\r\n     * directly to a deeper link than the base route, while the window object *will* provide the query string parameters\r\n     * in time.  Getting the query string params before reroute is essential to being able to correctly set an execution\r\n     * environment that was passed via query string\r\n     * */\r\n    return new URLSearchParams(window.location.search);\r\n  }\r\n}\r\n","export const IFX_LOGO_SVG = `\r\n<svg\r\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n   xmlns:cc=\"http://creativecommons.org/ns#\"\r\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n   xmlns=\"http://www.w3.org/2000/svg\"\r\n   height=\"100%\"\r\n   viewBox=\"0 0 377.94666 165.30667\"\r\n   xml:space=\"preserve\"\r\n   id=\"svg2\"\r\n   version=\"1.1\"><defs\r\n     id=\"defs6\" /><g\r\n     transform=\"matrix(1.3333333,0,0,-1.3333333,0,165.30667)\"\r\n     id=\"g10\"><g\r\n       transform=\"scale(0.1)\"\r\n       id=\"g12\"><path\r\n         id=\"path14\"\r\n         style=\"fill:#ed153e;fill-opacity:1;fill-rule:nonzero;stroke:none\"\r\n         d=\"m 617.457,1064.45 c -0.023,0.03 -0.047,0.05 -0.047,0.08 18.34,6.67 67.996,24.59 110.59,39.04 53.352,18.07 125.586,40.23 125.586,40.23 210.594,58.08 443.644,91.83 660.884,90.24 -250.48,14.91 -478.23,0.39 -676.716,-35.58 0,0 -66.422,-10.76 -137.477,-29.15 0,0 -34.293,-9.28 -55.172,-15.12 -20.851,-5.83 -49.507,-14.28 -49.507,-14.28 -20.387,-6.32 -40.254,-12.95 -59.754,-19.77 19.769,-19.52 32.254,-46.31 33.359,-76.05 15.781,6.95 31.86,13.74 48.254,20.36 M 2834.65,409.5 C 2783.11,363.117 2661.94,270.523 2404.73,194.41 2140.97,116.352 1819.96,82.2813 1505.9,82.2813 709.313,82.2813 194.543,315.945 158.699,625.117 c -13.469,116.18 78.192,228.668 230.364,324.707 -26.86,20.188 -44.387,52.026 -45.055,88.036 C 124.328,922.719 0,771.063 0,617.215 0,276.555 609.359,-12.1289 1514.47,0.398438 1829.22,4.75 2092.14,49.8789 2330.33,127.031 c 282.88,91.617 460.6,224.438 504.32,282.469\" /><path\r\n         id=\"path16\"\r\n         style=\"fill:#1c63b7;fill-opacity:1;fill-rule:nonzero;stroke:none\"\r\n         d=\"m 456.672,1123.06 c -45.942,0 -83.141,-37.23 -83.141,-83.14 0,-45.893 37.199,-83.119 83.141,-83.119 45.891,0 83.113,37.226 83.113,83.119 0,45.91 -37.222,83.14 -83.113,83.14 M 419.938,414.777 h 78.316 v 487.075 l -78.316,-10.368 z m 337.535,412.231 c -35.895,0 -72.504,-20.731 -92.52,-45.449 -0.691,20.73 -7.586,40.671 -9.652,47.836 l -73.196,-19.129 c 4.137,-22.328 10.368,-49.411 10.368,-98.059 v -297.43 h 77.996 v 299.817 c 18.636,23.121 41.433,35.871 56.625,35.871 10.363,0 20.011,-2.387 25.554,-10.363 6.204,-8.766 8.961,-21.52 8.961,-52.59 V 414.777 h 78.02 v 309.395 c 0,27.082 -2.758,54.211 -18.637,74.129 -13.812,17.554 -35.898,28.707 -63.519,28.707 m 299.517,103.625 c 13.79,0 28.29,-4.778 37.28,-11.942 l 22.08,60.59 c -20.7,15.141 -44.19,21.519 -73.19,21.519 -20.02,0 -41.41,-4.78 -60.051,-19.945 -18.66,-15.929 -38.675,-47.812 -38.675,-108.402 0,-25.527 1.402,-53.422 1.402,-53.422 h -26.934 v -68.566 h 26.934 V 414.777 h 80.064 v 335.688 h 58.69 l 14.5,68.566 h -73.19 v 62.188 c 0,31.094 11.74,49.414 31.09,49.414 m 102.3,-515.856 h 79.37 v 412.231 l -79.37,-10.363 z m 39.34,564.282 c -29,0 -52.46,-23.071 -52.46,-51.778 0,-28.703 22.77,-51.773 51.08,-51.773 28.98,0 52.47,23.07 52.47,51.773 0,28.707 -22.78,51.778 -51.09,51.778 m 304.96,-152.051 c -35.89,0 -72.5,-20.731 -92.52,-45.449 -0.69,20.73 -7.58,40.671 -9.65,47.836 l -73.22,-19.129 c 4.14,-22.328 10.37,-49.411 10.37,-98.059 v -297.43 h 78.02 v 299.817 c 18.63,23.121 41.43,35.871 56.62,35.871 10.37,0 20.02,-2.387 25.56,-10.363 6.23,-8.766 8.96,-21.52 8.96,-52.59 V 414.777 h 78.02 v 309.395 c 0,27.082 -2.76,54.211 -18.64,74.129 -13.81,17.554 -35.9,28.707 -63.52,28.707 m 290.34,3.176 c -40.03,0 -73.17,-17.528 -97.35,-53.399 -25.53,-38.285 -37.27,-89.273 -37.27,-158.648 0,-134.004 52.49,-212.91 144.3,-212.91 42.81,0 80.11,16.742 114.63,54.211 l -31.08,58.203 c -24.17,-25.508 -48.32,-39.887 -76.64,-39.887 -24.17,0 -44.19,13.566 -55.91,38.285 -9.7,20.731 -11.76,44.633 -11.76,71 v 7.981 h 180.18 v 17.527 c 0,88.508 -11.02,137.918 -39.31,174.601 -21.42,27.918 -51.8,43.036 -89.79,43.036 m -51.08,-170.59 c 1.4,71.742 16.59,104.437 51.79,104.437 20.02,0 32.45,-11.152 40.04,-29.496 6.22,-15.953 8.98,-43.031 8.98,-74.941 z m 369.95,170.59 c -102.19,0 -138.09,-112.387 -137.4,-212.047 0.69,-98.922 29,-213.723 136.69,-213.723 105.64,0 139.47,112.41 139.47,215.32 0,137.918 -57.98,210.45 -138.76,210.45 m 53.16,-210.45 c 0,-42.32 0,-143.578 -51.8,-143.578 -55.91,0 -54.54,101.258 -54.54,145.157 0,41.457 0,137.156 52.47,137.156 55.93,0 53.87,-94.887 53.87,-138.735 m 379.9,178.567 c -13.79,17.554 -35.89,28.707 -63.52,28.707 -35.92,0 -72.5,-20.731 -92.52,-45.449 -0.69,20.73 -7.61,40.671 -9.65,47.836 l -73.19,-19.129 c 4.13,-22.328 10.36,-49.411 10.36,-98.059 v -297.43 h 78 v 299.817 c 18.66,23.121 41.43,35.871 56.62,35.871 10.34,0 20.02,-2.387 25.56,-10.363 6.2,-8.766 8.96,-21.52 8.96,-52.59 V 414.777 h 78.02 v 309.395 c 0,27.082 -2.76,54.211 -18.64,74.129\" /></g></g></svg>\r\n`;\r\n","import { Injectable, computed, inject, signal, OnDestroy } from '@angular/core';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { AuthenticatedUserDetails, AuthenticationType } from '../models/authenticated-user-details';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { AuthToken } from '../models/AuthToken';\r\nimport { JwtDecoder } from '../shared/jwt/jwt-decoder';\r\nimport { IfxJwtPayloadInterface } from '../shared/jwt/jwt-payload.interface';\r\nimport { IfxUfeLoggerService } from '../shared/logging/ifx-ufe-logger.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n/**\r\n * Represents the store for authenticated user details.\r\n * This store holds the state of the current authenticated user\r\n * and provides selectors to access different user details.\r\n */\r\nexport class AuthenticatedUserDetailsStore implements OnDestroy {\r\n  // services\r\n  private auth = inject(AuthenticationService);\r\n  private logger = inject(IfxUfeLoggerService);\r\n\r\n  // initial state\r\n  private state = signal<AuthenticatedUserDetails>({\r\n    hostProfileName: undefined,\r\n    firstName: undefined,\r\n    lastName: undefined,\r\n    displayName: undefined,\r\n    department: undefined,\r\n    accountName: undefined,\r\n    loginType: undefined,\r\n  });\r\n\r\n  // selectors\r\n  hostProfileName = computed(() => this.state().hostProfileName);\r\n  firstName = computed(() => this.state().firstName);\r\n  lastName = computed(() => this.state().lastName);\r\n  displayName = computed(() => this.state().displayName);\r\n  department = computed(() => this.state().department);\r\n  accountName = computed(() => this.state().accountName);\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  // Reduces\r\n  constructor() {\r\n    this.auth\r\n      .getAuthTokens()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (authToken: AuthToken) => {\r\n          this.logger.debug('[AuthenticatedUserDetailsStore]: Received auth token:');\r\n          const containsKerberosToken = authToken.kerberos?.trim().length > 0;\r\n          const containsCredentialsToken = authToken.credentials?.trim().length > 0;\r\n\r\n          let jwtToken = '';\r\n          let loginType: AuthenticationType;\r\n          if (containsKerberosToken) {\r\n            jwtToken = authToken.kerberos;\r\n            loginType = 'kerberos';\r\n          } else if (containsCredentialsToken) {\r\n            jwtToken = authToken.credentials;\r\n            loginType = 'credentials';\r\n          }\r\n\r\n          const decoded = JwtDecoder.decodeSafe<IfxJwtPayloadInterface>(jwtToken);\r\n\r\n          this.state.update(state => ({\r\n            ...state,\r\n            firstName: decoded?.firstName,\r\n            lastName: decoded?.lastName,\r\n            displayName: decoded?.displayName,\r\n            department: decoded?.department,\r\n            hostProfileName: decoded?.hostProfileName,\r\n            accountName: decoded?.samAccountName,\r\n            loginType: loginType,\r\n          }));\r\n        },\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","import { Component, inject, OnInit, signal } from '@angular/core';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { WrlStateStore } from '../../shared/web-resource-locator/stores/wrl-state.store';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { IfxUfeLoggerService } from '../../shared/logging/ifx-ufe-logger.service';\r\nimport { WebResourceService } from '../../shared/web-resource-locator/services/web-resource.service';\r\nimport { ActiveWebResouceStorageService } from '../../shared/web-resource-locator/services/active-web-resouce-storage.service';\r\nimport { WrlApplicationInstanceWithVersions } from '../../shared/web-resource-locator/models/wrl-application-instance';\r\n\r\n@Component({\r\n  selector: 'ifx-wrl-version-selection',\r\n  templateUrl: './wrl-version-selection.component.html',\r\n  styleUrls: ['./wrl-version-selection.component.scss'],\r\n  imports: [MatDialogModule, MatButtonModule, MatIconModule, MatTableModule, MatSelectModule],\r\n})\r\nexport class WrlVersionSelectionComponent implements OnInit {\r\n  public titleValue = signal<string>('wrl Version Selection');\r\n  public closeButtonText = signal<string>('close');\r\n  public resetAllVersionsButtonText = signal<string>('reset all versions to default');\r\n  public resetButtonVersionsText = signal<string>('reset to default');\r\n  public dataSource: MatTableDataSource<WrlApplicationInstanceSelectionInterface> = new MatTableDataSource();\r\n  public displayedColumns = ['appName', 'resourceName', 'versions'];\r\n  public stateStore = inject(WrlStateStore);\r\n  public showResetAllVersionsButton = signal<boolean>(false);\r\n\r\n  private logger = inject(IfxUfeLoggerService);\r\n  private wrlLocationService = inject(WebResourceService);\r\n  private storageService = inject(ActiveWebResouceStorageService);\r\n  private isWindowRefreshNeeded = false;\r\n\r\n  ngOnInit(): void {\r\n    this.loadWebResources();\r\n  }\r\n\r\n  onActiveVersionChange(selectedApplicationVersion: string, group: WrlApplicationInstanceSelectionInterface) {\r\n    this.logger.debug('wrl-version-selection - onActiveVersionChange', selectedApplicationVersion, group);\r\n\r\n    if (selectedApplicationVersion) {\r\n      group.selectedVersion = selectedApplicationVersion;\r\n      group.isDefaultVersionOverridden = true;\r\n      this.storageService.saveVersion(group, selectedApplicationVersion);\r\n      this.showResetAllVersionsButton.set(true);\r\n      this.isWindowRefreshNeeded = true;\r\n    }\r\n  }\r\n\r\n  onResetVersionClick(group: WrlApplicationInstanceSelectionInterface) {\r\n    this.logger.debug('wrl-version-selection - onResetVersion', group);\r\n    this.deleteVersionOverride(group);\r\n    this.loadWebResources();\r\n  }\r\n\r\n  onResetAllVersionsClick() {\r\n    this.logger.debug('wrl-version-selection - onResetAllVersionsClick');\r\n    this.dataSource.data.forEach(group => {\r\n      if (group.isDefaultVersionOverridden) {\r\n        this.deleteVersionOverride(group);\r\n      }\r\n    });\r\n    this.loadWebResources();\r\n  }\r\n\r\n  public onCloseClick(): void {\r\n    if (this.isWindowRefreshNeeded) {\r\n      this.logger.debug('wrl-version-selection - onCloseClick');\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  private deleteVersionOverride(appInstance: WrlApplicationInstanceSelectionInterface) {\r\n    this.storageService.deleteVersion(appInstance);\r\n    this.isWindowRefreshNeeded = true;\r\n  }\r\n\r\n  private loadWebResources() {\r\n    this.showResetAllVersionsButton.set(false);\r\n    this.dataSource.data = this.getGridData();\r\n  }\r\n\r\n  private getGridData(): WrlApplicationInstanceSelectionInterface[] {\r\n    const applicationInstancesWithVersions = this.stateStore\r\n      .applicationInstances()\r\n      .filter(appInstance => appInstance.versions.length > 0)\r\n      .sort(\r\n        (a, b) =>\r\n          a.appName.toUpperCase().localeCompare(b.appName.toUpperCase()) ||\r\n          a.resourceName.toUpperCase().localeCompare(b.resourceName.toUpperCase())\r\n      );\r\n    const gridData: WrlApplicationInstanceSelectionInterface[] = [];\r\n\r\n    applicationInstancesWithVersions.forEach(appInstance => {\r\n      const activeResource = this.wrlLocationService.getActiveWebResourceVersion(appInstance);\r\n      if (activeResource?.isDefaultVersionOverridden) {\r\n        this.showResetAllVersionsButton.set(true);\r\n      }\r\n      const dataRow = <WrlApplicationInstanceSelectionInterface>{\r\n        ...appInstance,\r\n        selectedVersion: activeResource?.applicationVersion,\r\n        isDefaultVersionOverridden: activeResource?.isDefaultVersionOverridden || false,\r\n      };\r\n      gridData.push(dataRow);\r\n    });\r\n\r\n    return gridData;\r\n  }\r\n}\r\n\r\nexport interface WrlApplicationInstanceSelectionInterface extends WrlApplicationInstanceWithVersions {\r\n  selectedVersion: string | undefined;\r\n  isDefaultVersionOverridden: boolean;\r\n}\r\n","<div class=\"dialog-container\">\r\n  <mat-dialog-actions>\r\n    <div class=\"title-wrapper\">\r\n      <div>\r\n        <h1 mat-dialog-title>{{ titleValue() }}</h1>\r\n      </div>\r\n      <div>\r\n        <button\r\n          mat-icon-button\r\n          [mat-dialog-close]=\"true\"\r\n          (click)=\"onCloseClick()\"\r\n          cdkFocusInitial>\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </mat-dialog-actions>\r\n  <mat-dialog-content>\r\n    <div class=\"content-container\">\r\n      <table\r\n        mat-table\r\n        [dataSource]=\"dataSource\">\r\n        <ng-container\r\n          matColumnDef=\"appName\"\r\n          class=\"app-name-cell\">\r\n          <th\r\n            mat-header-cell\r\n            *matHeaderCellDef>\r\n            App Name\r\n          </th>\r\n          <td\r\n            mat-cell\r\n            *matCellDef=\"let element\">\r\n            {{ element.appName }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container\r\n          matColumnDef=\"resourceName\"\r\n          class=\"resource-name-cell\">\r\n          <th\r\n            mat-header-cell\r\n            *matHeaderCellDef>\r\n            Resource Name\r\n          </th>\r\n          <td\r\n            mat-cell\r\n            *matCellDef=\"let element\">\r\n            {{ element.resourceName }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"versions\">\r\n          <th\r\n            mat-header-cell\r\n            *matHeaderCellDef>\r\n            Versions\r\n          </th>\r\n\r\n          <td\r\n            mat-cell\r\n            *matCellDef=\"let element\"\r\n            class=\"versions-cell\">\r\n            <div class=\"version-selection-cell-wrapper\">\r\n              <div>\r\n                <mat-label>Select a version</mat-label>\r\n                <mat-select\r\n                  [value]=\"element.selectedVersion\"\r\n                  (selectionChange)=\"onActiveVersionChange($event.value, element)\">\r\n                  @for (item of element.versions; track item) {\r\n                    <mat-option value=\"{{ item.applicationVersion }}\">{{ item.applicationVersion }}</mat-option>\r\n                  }\r\n                </mat-select>\r\n              </div>\r\n              <div>\r\n                @if (element.isDefaultVersionOverridden) {\r\n                  <button\r\n                    mat-flat-button\r\n                    color=\"primary\"\r\n                    class=\"cell-button\"\r\n                    (click)=\"onResetVersionClick(element)\">\r\n                    {{ resetButtonVersionsText() }}\r\n                  </button>\r\n                }\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr\r\n          mat-header-row\r\n          *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr\r\n          mat-row\r\n          *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n      </table>\r\n    </div>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <div class=\"footer-wrapper\">\r\n      <div>\r\n        @if (showResetAllVersionsButton()) {\r\n          <button\r\n            mat-flat-button\r\n            color=\"primary\"\r\n            (click)=\"onResetAllVersionsClick()\">\r\n            {{ resetAllVersionsButtonText() }}\r\n          </button>\r\n        }\r\n        <button\r\n          mat-flat-button\r\n          color=\"primary\"\r\n          [mat-dialog-close]=\"true\"\r\n          (click)=\"onCloseClick()\">\r\n          {{ closeButtonText() }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { interval } from 'rxjs';\r\nimport { AuthenticationService } from './../../services/authentication.service';\r\nimport { Component, inject, signal, DestroyRef } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { IfxUfeLoggerService } from '../../shared/logging/ifx-ufe-logger.service';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'ifx-ufe-jwt-counter',\r\n  imports: [MatButtonModule, MatIconModule],\r\n  templateUrl: './jwt-counter.component.html',\r\n  styleUrl: './jwt-counter.component.scss'\r\n})\r\nexport class JwtCounterComponent {\r\n  private auth = inject(AuthenticationService);\r\n  private logger = inject(IfxUfeLoggerService);\r\n  private readonly invalidTokenCounterValue = '00:00:00';\r\n\r\n  public jwtCounter = signal(this.invalidTokenCounterValue);\r\n  public showRefreshIcon = signal(true);\r\n  public  showCounterIcon = signal(true);\r\n\r\n  constructor() {\r\n   interval(1000).pipe(takeUntilDestroyed()).subscribe(() => {\r\n    try {\r\n      const token = this.auth.getToken\r\n      const expTime =  AuthenticationService.getJwtTokenExpirationTimeInMilliseconds(token);\r\n      this.jwtCounter.set(this.getJwtCounter(expTime));\r\n    } catch (error) {\r\n      this.logger.error('Error in JwtCounterComponent', error);\r\n    }\r\n\r\n   });\r\n\r\n  }\r\n\r\n  public onClickRefresh() {\r\n    this.auth.forcedTokenRefresh();\r\n  }\r\n\r\n  private getJwtCounter(expiryDate: number): string {\r\n    const now = new Date().getTime();\r\n    const distance = expiryDate - now;\r\n\r\n    if (distance <= 0) {\r\n      this.showRefreshIcon.set(true);\r\n      return this.invalidTokenCounterValue;\r\n    }\r\n    this.showRefreshIcon.set(false);\r\n\r\n    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n    const jwtCounter = `${this.transform(hours.toString())}:${this.transform(\r\n      minutes.toString()\r\n    )}:${this.transform(seconds.toString())}`;\r\n\r\n    return jwtCounter;\r\n  }\r\n\r\n  private transform(n: string) {\r\n    return n.padStart(2, '0');\r\n  }\r\n}\r\n","<div class=\"content-container\">\r\n  <div>\r\n    @if (showCounterIcon()) {\r\n      <p>{{ jwtCounter() }}</p>\r\n    }\r\n  </div>\r\n  <div>\r\n    @if (showRefreshIcon()) {\r\n      <button\r\n        mat-icon-button\r\n        color=\"primary\"\r\n        (click)=\"onClickRefresh()\"\r\n        class=\"refresh-button\">\r\n        <mat-icon>refresh</mat-icon>\r\n      </button>\r\n    }\r\n  </div>\r\n</div>\r\n","import { Component, input, computed, output, inject, effect, signal } from '@angular/core';\r\nimport { UfeCommand } from '../../models/UfeCommand';\r\nimport { UrlCaptureService } from '../../services/url-capture.service';\r\nimport { Router } from '@angular/router';\r\nimport { AppLinkGroup } from '../../models/AppLink';\r\nimport { ShellCommunicatorService } from '../../services/shell-communicator.service';\r\nimport { HelpItem } from '../../models/helpItem';\r\nimport { AuthenticatedUserDetailsStore } from '../../stores/authentication-details.store';\r\nimport { UfeEnvironmentStore } from '../../stores/ufe-environment.store';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WrlVersionSelectionComponent } from '../wrl-version-selection/wrl-version-selection.component';\r\nimport { UfeDialogConfig } from '../../models/UfeDialogConfig';\r\nimport { WrlStateStore } from '../../shared/web-resource-locator/stores/wrl-state.store';\r\nimport { MatIconButton } from '@angular/material/button';\r\nimport { MatMenuTrigger, MatMenu, MatMenuItem } from '@angular/material/menu';\r\n\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { JwtCounterComponent } from \"../jwt-counter/jwt-counter.component\";\r\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop';\r\nimport { FrontEndDiscoveryService } from '../../shared/front-end-discovery/front-end-discovery.service';\r\nimport { IPCService } from '../../services/ipc.service';\r\n\r\n@Component({\r\n  selector: 'ifx-ufe-auth',\r\n  templateUrl: './ufe-auth.component.html',\r\n  styleUrls: ['./ufe-auth.component.scss'],\r\n  imports: [MatIconButton, MatMenuTrigger, MatIcon, MatMenu, MatMenuItem, JwtCounterComponent],\r\n})\r\nexport class UfeAuthComponent {\r\n  private wrlState = inject(WrlStateStore);\r\n  private comm = inject(ShellCommunicatorService);\r\n  private url = inject(UrlCaptureService);\r\n  private router = inject(Router);\r\n  private ipc = inject(IPCService);\r\n  public authDetailsStore = inject(AuthenticatedUserDetailsStore);\r\n  public auth = inject(AuthenticationService);\r\n  public envStore = inject(UfeEnvironmentStore);\r\n  public dialog = inject(MatDialog);\r\n\r\n  externalLinks = input<AppLinkGroup>();\r\n  helpLinks = input<HelpItem[]>();\r\n  hideJwtCounter = input<boolean>(false);\r\n  logout = output<void>();\r\n  languageToggle = output<string>();\r\n\r\n  public logoutLabel = 'Logout';\r\n  public menuExternalLinks = computed(() => this._externalLinks()?.links ?? this.externalLinks()?.links ?? []);\r\n  public menuHelpLinks = computed(() => [...this._helpLinks(), ...(this.helpLinks() ?? [])]);\r\n\r\n  private _externalLinks = signal<AppLinkGroup | undefined>(undefined);\r\n  private _helpLinks = signal<HelpItem[]>([]);\r\n\r\n  public showLogout = computed(() => this.authDetailsStore.accountName() != undefined && this.envStore.isSelfHosted());\r\n  public userIconUrl = computed(() => this.createIconUrl(this.authDetailsStore.accountName()));\r\n  public authDetails = computed(() => this.getAuthDetails());\r\n  public currentLanguage = computed(() => this.envStore.currentLanguage());\r\n  public showWrlVersionSelectionDialog = computed(() => this.wrlState.showWrlVersionSelection());\r\n  private frontEnd: FrontEndDiscoveryService = inject(FrontEndDiscoveryService);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n  constructor() {\r\n    effect(() => {\r\n      this.logoutLabel = this.envStore.currentLanguage() == 'DE' ? 'Ausloggen' : 'Logout';\r\n    });\r\n\r\n    //sub to the current execution environment to determine if we need to display this header\r\n    const linkGroup$ = toObservable(this.envStore.linkGroup);\r\n    linkGroup$.pipe(takeUntilDestroyed()).subscribe(linkGroup => {\r\n      if (linkGroup != null && linkGroup.trim() !== '') {\r\n        this.frontEnd.getLinkGroup(linkGroup).subscribe(group => {\r\n          this._externalLinks.set(group);\r\n        });\r\n      }\r\n    });\r\n\r\n    //sub to the ipc so we can reactively add/hide the header after the uFE is already running if need be\r\n    this.ipc\r\n      .ufeCommands()\r\n      .pipe(takeUntilDestroyed())\r\n      .subscribe((cmd: UfeCommand) => {\r\n        if (cmd.command === 'HELP_LINK') {\r\n          const commandParamsValue = cmd.params[0];\r\n          if (commandParamsValue instanceof HelpItem) {\r\n            this._helpLinks.set([commandParamsValue]);\r\n          } else if (typeof commandParamsValue === 'string') {\r\n            this._helpLinks.set([{ ufeName: 'Help', url: new URL(commandParamsValue) }]);\r\n          } else if (Array.isArray(commandParamsValue)) {\r\n            this._helpLinks.set([...commandParamsValue]);\r\n          }\r\n        }\r\n      });\r\n\r\n    this.addEventListener();\r\n  }\r\n\r\n  private addEventListener() {\r\n    // add event listener only if it is not a shell app and it is self hosted\r\n    if (!this.envStore.isShellApp() && this.envStore.isSelfHosted()) {\r\n      window.addEventListener('beforeunload', () => {\r\n        if (!this.auth.isAuthInProgress()) {\r\n          this.auth.logout();\r\n          window.sessionStorage.clear();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public onLanguageToggle(language: string) {\r\n    this.updateLanguage(language);\r\n    this.languageToggle.emit(language);\r\n  }\r\n\r\n  public onLogout(): void {\r\n    this.url.storeUrl(this.router.url);\r\n    this.logout.emit();\r\n  }\r\n\r\n  public onShowWrlVersionSelectionDialog(): void {\r\n    const dialogConfig = new UfeDialogConfig();\r\n\r\n    this.dialog.open(WrlVersionSelectionComponent, {\r\n      height: '70%',\r\n      width: '70%',\r\n      minHeight: dialogConfig.height,\r\n      minWidth: dialogConfig.width,\r\n      data: {},\r\n    });\r\n  }\r\n\r\n  private updateLanguage(language: string): void {\r\n    const command = new UfeCommand('SELF', 'LANGUAGE_TOGGLE', [language]);\r\n    this.comm.sendShellMessage(command);\r\n  }\r\n\r\n  private createIconUrl(accountName: string | undefined): URL | null {\r\n    if (accountName == undefined || accountName === '') {\r\n      return null;\r\n    }\r\n\r\n    const stringUrl = 'https://profilepictures.infineon.com/api/profilepicture/' + accountName + '/s';\r\n    return new URL(stringUrl);\r\n  }\r\n\r\n  private getAuthDetails(): string[] {\r\n    let displayName = this.authDetailsStore.displayName();\r\n    const accountName = this.authDetailsStore.accountName();\r\n    const department = this.authDetailsStore.department();\r\n    const hostProfileName = this.authDetailsStore.hostProfileName();\r\n    const firstName = this.authDetailsStore.firstName();\r\n    const lastName = this.authDetailsStore.lastName();\r\n\r\n    let result: (string | undefined)[] = [];\r\n    // use first and last name as display name if first and last name are not undefined|null\r\n    if (firstName?.trim() != null && lastName?.trim() != null) {\r\n      displayName = `${firstName} ${lastName}`;\r\n    }\r\n\r\n    result = [displayName, department, accountName, hostProfileName];\r\n\r\n    return result.filter(item => item != null && item.trim() !== '').map(item => item as string);\r\n  }\r\n}\r\n","@if(userIconUrl() && !hideJwtCounter()) {\r\n  <ifx-ufe-jwt-counter/>\r\n  }\r\n  <button\r\n    mat-icon-button\r\n    [matMenuTriggerFor]=\"controlMenu\"\r\n    class=\"ifx-ufe-auth-button\"\r\n    data-testid=\"ifx-ufe-auth-button\">\r\n    <div class=\"avatar-container\">\r\n      @if (userIconUrl()) {\r\n        <div>\r\n          <img\r\n            class=\"user-icon\"\r\n            src=\"{{ userIconUrl() }}\"\r\n            alt=\"user icon\" />\r\n        </div>\r\n      }\r\n      @if (!userIconUrl()) {\r\n        <mat-icon\r\n          class=\"material-icons-outlined\"\r\n          fontIcon=\"account_circle\"\r\n          style=\"transform: scale(1.75)\"></mat-icon>\r\n      }\r\n    </div>\r\n  </button>\r\n  @if (showLogout() && userIconUrl()) {\r\n    <button mat-icon-button color=\"primary\" (click)=\"onLogout()\" class=\"logout-button\"><mat-icon>logout</mat-icon></button>\r\n  }\r\n\r\n  <mat-menu\r\n    #controlMenu\r\n    id=\"ifxUfeAuthMenu\"\r\n    data-testid=\"ifx-ufe-auth-menu\">\r\n    <div class=\"menu\">\r\n      <div class=\"menu-user-id-container\">\r\n        <div\r\n          class=\"avatar-container\"\r\n          data-testid=\"avatar-container\">\r\n          @if (userIconUrl()) {\r\n            <div>\r\n              <img\r\n                class=\"user-icon\"\r\n                src=\"{{ userIconUrl() }}\"\r\n                alt=\"user icon\" />\r\n            </div>\r\n          }\r\n          @if (!userIconUrl()) {\r\n            <mat-icon\r\n              class=\"material-icons-outlined\"\r\n              fontIcon=\"account_circle\"></mat-icon>\r\n          }\r\n        </div>\r\n\r\n        <div\r\n          class=\"avatarDetailsContainer\"\r\n          data-testid=\"avatar-details-container\">\r\n          @for (item of this.authDetails(); track $index) {\r\n            <p>{{ item }}</p>\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <hr style=\"width: 85%\" />\r\n\r\n      @if (this.envStore.showLanguageControls()) {\r\n        <button\r\n          mat-menu-item\r\n          [matMenuTriggerFor]=\"languages\"\r\n          data-testid=\"language-menu-button\">\r\n          <mat-icon class=\"ifx-icon\">flag</mat-icon>\r\n          <span>Language/Sprache</span>\r\n        </button>\r\n      }\r\n      @if (menuExternalLinks().length > 0) {\r\n        <button\r\n          mat-menu-item\r\n          [matMenuTriggerFor]=\"linkMenu\"\r\n          data-testid=\"external-links-menu-button\">\r\n          Links\r\n        </button>\r\n      }\r\n\r\n      @for (link of menuHelpLinks(); track $index) {\r\n        <a\r\n          mat-menu-item\r\n          href=\"{{ link.url }}\"\r\n          target=\"_blank\"\r\n          data-testid=\"help-menu-link\"\r\n          >{{ link.ufeName }}</a\r\n        >\r\n      }\r\n\r\n      @if (showWrlVersionSelectionDialog()) {\r\n        <hr style=\"width: 85%\" />\r\n        <button\r\n          mat-menu-item\r\n          (click)=\"onShowWrlVersionSelectionDialog()\">\r\n          <mat-icon class=\"ifx-icon\">construction</mat-icon>\r\n          <span>{{ currentLanguage() === 'EN' ? ' Version Selection' : 'Versionsauswahl' }}</span>\r\n        </button>\r\n      }\r\n\r\n      <ng-content></ng-content>\r\n\r\n      @if (showLogout()) {\r\n        <hr style=\"width: 85%\" />\r\n        <button\r\n          mat-menu-item\r\n          (click)=\"onLogout()\">\r\n          <mat-icon class=\"ifx-icon\">logout</mat-icon>\r\n          <span>{{ logoutLabel }}</span>\r\n        </button>\r\n      }\r\n    </div>\r\n  </mat-menu>\r\n\r\n  <mat-menu\r\n    #linkMenu\r\n    data-testid=\"ifx-ufe-auth-link-menu\">\r\n    @for (link of  menuExternalLinks(); track link) {\r\n      <a\r\n        mat-menu-item\r\n        href=\"{{ link.uri }}\"\r\n        target=\"_blank\"\r\n        >{{ currentLanguage() === 'EN' ? link.englishName : link.germanName }}</a\r\n      >\r\n    }\r\n  </mat-menu>\r\n\r\n  <mat-menu\r\n    #languages\r\n    data-testid=\"ifx-ufe-auth-lang-menu\">\r\n    <button\r\n      mat-menu-item\r\n      (click)=\"onLanguageToggle('EN')\">\r\n      English\r\n    </button>\r\n    <button\r\n      mat-menu-item\r\n      (click)=\"onLanguageToggle('DE')\">\r\n      Deutsch\r\n    </button>\r\n  </mat-menu>\r\n","import { Component, computed, inject } from '@angular/core';\r\nimport { UfeEnvironmentStore } from '../../stores/ufe-environment.store';\r\nimport { UfeSafeUrlPipe } from \"../../pipes/ufe-safe-url/ufe-safe-url.pipe\";\r\n\r\n@Component({\r\n  selector: 'ifx-ufe-auth-refresh',\r\n  templateUrl: './ifx-ufe-auth-refresh.component.html',\r\n  styleUrl: './ifx-ufe-auth-refresh.component.scss',\r\n  imports: [UfeSafeUrlPipe]\r\n})\r\nexport class IfxUfeAuthRefreshComponent {\r\n  public silentRefeshRoute = window.origin + '/silentRefresh';\r\n  public envStore = inject(UfeEnvironmentStore);\r\n  public enableSilentRefreshActive = computed(() => this.envStore.isSilentRefreshEnabled());\r\n\r\n  public get silentRefreshFrameId() {\r\n    return this.envStore.activeInstanceId();\r\n  }\r\n}\r\n","@if (enableSilentRefreshActive()) {\r\n <iframe\r\n   [id]=\"silentRefreshFrameId\"\r\n   class=\"invisible\"\r\n   [src]=\"silentRefeshRoute | ifxUfeSafeUrl\"></iframe>\r\n}\r\n","import { Component, input, output, computed, inject } from '@angular/core';\r\nimport { trigger, state, style, animate, transition } from '@angular/animations';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { IFX_LOGO_SVG } from './ifx-logo';\r\nimport { Router } from '@angular/router';\r\nimport { UfeEnvironmentStore } from '../../stores/ufe-environment.store';\r\nimport { WrlStateStore } from '../../shared/web-resource-locator/stores/wrl-state.store';\r\n\r\nimport { MatToolbar } from '@angular/material/toolbar';\r\nimport { MatIconButton } from '@angular/material/button';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { UfeAuthComponent } from '../ufe-auth/ufe-auth.component';\r\nimport { IfxUfeAuthRefreshComponent } from \"../ifx-ufe-auth-refresh/ifx-ufe-auth-refresh.component\";\r\n\r\n@Component({\r\n  selector: 'ifx-ufe-header',\r\n  templateUrl: './ufe-header.component.html',\r\n  styleUrls: ['./ufe-header.component.scss'],\r\n  animations: [\r\n    trigger('headerSlideIn', [\r\n      state('void', style({ top: '-4em', opacity: 0 })),\r\n      state('active', style({ top: 0, opacity: 1 })),\r\n      transition('void => *', animate('500ms')),\r\n    ]),\r\n  ],\r\n  imports: [MatToolbar, MatIconButton, MatIcon, UfeAuthComponent, IfxUfeAuthRefreshComponent],\r\n})\r\nexport class UfeHeaderComponent {\r\n  title = input<string>('');\r\n  isIfxLogoVisible = input<boolean>(true);\r\n  hideJwtCounter = input<boolean>(false);\r\n  hideAuthComponent = input<boolean>(false);\r\n  logout = output<void>();\r\n  public ifxLogo: SafeHtml;\r\n  public showDefaultVersionOverriddenIcon = computed(\r\n    () => this.wrlState.showWrlVersionSelection() && this.wrlState.areDefaultVersionsOverridden()\r\n  );\r\n  private wrlState = inject(WrlStateStore);\r\n  private envStore: UfeEnvironmentStore = inject(UfeEnvironmentStore);\r\n  private router: Router = inject(Router);\r\n  private sanitizer: DomSanitizer = inject(DomSanitizer);\r\n\r\n  constructor() {\r\n    this.ifxLogo = this.getLogo();\r\n  }\r\n\r\n  public isVisible = computed(() => this.envStore.showHeader());\r\n\r\n  public onLogout(): void {\r\n    if (this.envStore.isNotSelfHosted()) {\r\n      return;\r\n    }\r\n\r\n    if (this.envStore.isShellApp()) {\r\n      this.logout.emit();\r\n    } else {\r\n      this.router.navigateByUrl('logout');\r\n    }\r\n  }\r\n\r\n  private getLogo(): SafeHtml {\r\n    const rawSvg = IFX_LOGO_SVG;\r\n    return this.sanitizer.bypassSecurityTrustHtml(rawSvg);\r\n  }\r\n}\r\n","<!--Header Bar and controls-->\r\n<div>\r\n  <div class=\"invisible\">\r\n    <ifx-ufe-auth-refresh></ifx-ufe-auth-refresh>\r\n  </div>\r\n\r\n  @if (isVisible()) {\r\n    <mat-toolbar\r\n      [@headerSlideIn]=\"isVisible()\"\r\n      class=\"toolbar-container\">\r\n      <div class=\"toolbar-left-container\">\r\n        <div class=\"toolbar-left-logo-container\">\r\n          <ng-content select=\"[toolbarLeftLogoContainer]\"></ng-content>\r\n        </div>\r\n        @if (isIfxLogoVisible()) {\r\n          <div\r\n            class=\"logo-container\"\r\n            [innerHtml]=\"ifxLogo\"></div>\r\n        }\r\n        <div class=\"title-container\">\r\n          <h2>{{ title() }}</h2>\r\n        </div>\r\n        <div class=\"toolbar-right-title-container\">\r\n          <ng-content select=\"[toolbarRightTitleContainer]\"></ng-content>\r\n        </div>\r\n      </div>\r\n      <div class=\"toolbar-center-container\">\r\n        <ng-content select=\"[toolbarCenterContainer]\"></ng-content>\r\n      </div>\r\n      <div class=\"toolbar-right-container\">\r\n        <div class=\"toolbar-left-auth-container\">\r\n          <ng-content select=\"[toolbarLeftAuthContainer]\"></ng-content>\r\n        </div>\r\n        <div class=\"ufe-auth-container\">\r\n          @if (showDefaultVersionOverriddenIcon()) {\r\n            <button\r\n              mat-icon-button\r\n              color=\"primary\">\r\n              <mat-icon>construction</mat-icon>\r\n            </button>\r\n          }\r\n          @if(!hideAuthComponent()) {\r\n            <ifx-ufe-auth\r\n              class=\"ifx-ufe-auth\"\r\n              [hideJwtCounter]=\"hideJwtCounter()\"\r\n              (logout)=\"onLogout()\">\r\n            </ifx-ufe-auth>\r\n          } @else {\r\n            <ng-content select=\"[authComponent]\"></ng-content>\r\n          }\r\n        </div>\r\n      </div>\r\n    </mat-toolbar>\r\n  }\r\n</div>\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Component } from '@angular/core';\r\n\r\nexport class fauxMatDialogRef {\r\n  private dataReturn: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  public windowRef!: Window;\r\n  public componentInstance!: Component;\r\n\r\n  constructor() {}\r\n\r\n  public close(data: any = null) {\r\n    this.dataReturn.next(data);\r\n    if (this.windowRef != null) {\r\n      this.windowRef.close();\r\n    }\r\n  }\r\n\r\n  public afterClosed(): Observable<any> {\r\n    return this.dataReturn.asObservable();\r\n  }\r\n}\r\n","export class DialogDataPlaceholder {\r\n  constructor() {}\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { AuthModule, LogLevel, StsConfigHttpLoader, StsConfigLoader } from 'angular-auth-oidc-client';\r\nimport { map } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CredentialConfiguration } from '../models/CredentialConfiguration';\r\nimport { switchMap } from 'rxjs';\r\n\r\nlet routes: any = [];\r\n\r\nexport const httpLoaderFactory = (httpClient: HttpClient) => {\r\n  const configKerberos$ = httpClient\r\n    .get<CredentialConfiguration>(`${window.location.origin}/assets/profileConfig.json`)\r\n    .pipe(\r\n      switchMap((config: CredentialConfiguration) =>\r\n        httpClient.get<any>(`${window.location.origin}/${config.kerberosLocation}`).pipe(\r\n          map((customConfig: any) => {\r\n            customConfig.LogLevel = environment.production ? LogLevel.Error : LogLevel.Debug;\r\n            return customConfig;\r\n          })\r\n        )\r\n      )\r\n    );\r\n\r\n  const configCredentials$ = httpClient\r\n    .get<CredentialConfiguration>(`${window.location.origin}/assets/profileConfig.json`)\r\n    .pipe(\r\n      switchMap((config: CredentialConfiguration) =>\r\n        httpClient.get<any>(`${window.location.origin}/${config.credentialLocation}`).pipe(\r\n          map((customConfig: any) => {\r\n            customConfig.LogLevel = environment.production ? LogLevel.Error : LogLevel.Debug;\r\n            return customConfig;\r\n          })\r\n        )\r\n      )\r\n    );\r\n\r\n  return new StsConfigHttpLoader([configKerberos$, configCredentials$]);\r\n};\r\n\r\n@NgModule({\r\n  imports: [\r\n    AuthModule.forRoot({\r\n      loader: {\r\n        provide: StsConfigLoader,\r\n        useFactory: httpLoaderFactory,\r\n        deps: [HttpClient],\r\n      },\r\n    }),\r\n    RouterModule.forChild(routes),\r\n  ],\r\n  exports: [AuthModule],\r\n})\r\nexport class AuthConfigModule {}\r\n","import { Component, inject } from '@angular/core';\r\nimport { UrlCaptureService } from '../../services/url-capture.service';\r\nimport { Router } from '@angular/router';\r\nimport { ShellCommunicatorService } from '../../services/shell-communicator.service';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { UfeCommand } from '../../models/UfeCommand';\r\nimport { UfeEnvironmentStore } from '../../stores/ufe-environment.store';\r\nimport { IfxUfeLoggerService } from '../../shared/logging/ifx-ufe-logger.service';\r\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop';\r\nimport { isCodeFlowResponse, isSilentRefreshInProcess } from '../../shared/helpers/common.helpers';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ifx-ufe-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  private url = inject(UrlCaptureService);\r\n  private router = inject(Router);\r\n  private shellComm = inject(ShellCommunicatorService);\r\n  private auth = inject(AuthenticationService);\r\n  envStore = inject(UfeEnvironmentStore);\r\n\r\n  private subscriptions: Subscription = new Subscription();\r\n  private logger = inject(IfxUfeLoggerService);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {\r\n    this.activateLoginWatcher();\r\n    this.activateNaviationToUrlWatcher();\r\n  }\r\n\r\n  private activateLoginWatcher() {\r\n    toObservable(this.envStore.executionEnvironment)\r\n      .pipe(takeUntilDestroyed())\r\n      .subscribe(() => {\r\n        if (this.envStore.isSelfHosted() && !isCodeFlowResponse()) {\r\n          this.logger.info('No valid token found, requesting a new login.');\r\n          this.shellComm.sendShellMessage(\r\n            new UfeCommand(this.envStore.ufeInstanceName() ?? '', 'LOGIN_REQUIRED', []),\r\n            'SELF'\r\n          );\r\n        } else if (this.envStore.isNotSelfHosted()) {\r\n          this.auth.checkForExistingToken();\r\n        }\r\n      });\r\n  }\r\n\r\n  private activateNaviationToUrlWatcher(): void {\r\n    this.auth.isAuthenticated$.pipe(takeUntilDestroyed()).subscribe(() => {\r\n      const t= window.location.href;\r\n      if (this.auth.isUserAuthenticated) {\r\n        const url = this.url.getUrl();\r\n        if (url) {\r\n          this.router.navigateByUrl(url);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<p>Please wait while the system logs you in...</p>\r\n","import { UrlCaptureService } from './../../services/url-capture.service';\r\nimport { Component, AfterViewInit, inject, DestroyRef } from '@angular/core';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { ShellCommunicatorService } from '../../services/shell-communicator.service';\r\nimport { AuthToken } from '../../models/AuthToken';\r\nimport { UfeCommand } from '../../models/UfeCommand';\r\nimport { IfxUfeLoggerService } from '../../shared/logging/ifx-ufe-logger.service';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { tap } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { UfeEnvironmentStore } from '../../stores/ufe-environment.store';\r\n\r\n@Component({\r\n  selector: 'ifx-ufe-silent-refresh',\r\n  templateUrl: './silent-refresh.component.html',\r\n  styleUrls: ['./silent-refresh.component.css'],\r\n})\r\nexport class SilentRefreshComponent implements AfterViewInit {\r\n  private auth = inject(AuthenticationService);\r\n  private comm = inject(ShellCommunicatorService);\r\n\r\n  private token: AuthToken = new AuthToken();\r\n  private logger: IfxUfeLoggerService = inject(IfxUfeLoggerService);\r\n  private startRefreshTimeout: number | undefined | null = null;\r\n  private destroyRef = inject(DestroyRef);\r\n  private url = inject(UrlCaptureService);\r\n  private envStore = inject(UfeEnvironmentStore);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {\r\n     this.logger.debug('Silent refresh component created');\r\n     this.auth.checkForExistingToken();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.auth\r\n      .getAuthTokens()\r\n      .pipe(\r\n        tap(() => this.logger.debug('silent refresh new token')),\r\n        takeUntilDestroyed(this.destroyRef)\r\n      )\r\n      .subscribe(tkn => {\r\n        this.token = tkn;\r\n        this.checkToken();\r\n      });\r\n  }\r\n\r\n  private checkToken() {\r\n    //if we have an old token stored, we've been redirected here after the refresh completed.  Push the token to the\r\n    //parent context\r\n    const oldToken = window.sessionStorage.getItem(environment.storageVariableNamePrefix + 'oldToken');\r\n    if (oldToken != null) {\r\n      this.logger.debug('tryPublishToken');\r\n      this.tryPublishToken();\r\n    } else {\r\n      //otherwise we are just starting the refresh process so store the old token and start the refresh workflow\r\n      this.logger.info('Starting silent refresh');\r\n      this.startRefresh();\r\n    }\r\n  }\r\n\r\n  private tryPublishToken(): boolean {\r\n    const oldToken = window.sessionStorage.getItem(environment.storageVariableNamePrefix + 'oldToken');\r\n    const successful = this.compareTokens(oldToken);\r\n\r\n    if (!successful) {\r\n      this.logger.info('Old token is the same as the current token, not publishing token');\r\n      return false;\r\n    }\r\n\r\n    window.sessionStorage.removeItem(environment.storageVariableNamePrefix + 'oldToken');\r\n\r\n    const strToken = JSON.stringify(this.token);\r\n\r\n    //We spoof the sender as SHELL to take advantage of the existing process for registering tokens here\r\n    let cmd = new UfeCommand('SHELL', 'JWT_TOKEN', [strToken]);\r\n    this.comm.sendShellMessage(cmd, 'PARENT');\r\n\r\n    //last we tell the main application to remove the iframe with this component in it.\r\n    cmd = new UfeCommand('SHELL', 'REFRESH_COMPLETE', []);\r\n    this.comm.sendShellMessage(cmd, 'PARENT');\r\n\r\n    return true;\r\n  }\r\n\r\n  private startRefresh() {\r\n    try {\r\n      this.storeOldToken();\r\n      this.attemptRefresh();\r\n    } catch (e) {\r\n      const timeoutInSeconds = 5;\r\n      this.logger.error(`Error starting silent refresh, try it again in ${timeoutInSeconds}s`, e);\r\n      this.auth.stopTimeoutMethod(this.startRefreshTimeout);\r\n      this.startRefreshTimeout = window.setTimeout(() => {\r\n        this.startRefresh();\r\n      }, timeoutInSeconds * 1000);\r\n    }\r\n  }\r\n\r\n  private attemptRefresh() {\r\n    this.url.storeUrl(`silentRefresh?wufeid=${this.envStore.parentInstanceId()}`);\r\n    this.auth.loginKerberos();\r\n  }\r\n\r\n  private storeOldToken() {\r\n    const kToken = this.auth.getKerberosToken();\r\n\r\n    if (kToken == null) {\r\n      this.logger.error('Kerberos token is null, cannot store old token');\r\n    }\r\n\r\n    window.sessionStorage.setItem(environment.storageVariableNamePrefix + 'oldToken', kToken ?? '');\r\n  }\r\n\r\n  /***\r\n   * compareTokens returns true if the old token is different from the current token false otherwise.\r\n   * @private\r\n   */\r\n  private compareTokens(oldToken: string | null): boolean {\r\n    return this.token.kerberos != null && this.token.kerberos !== oldToken;\r\n  }\r\n}\r\n","<p>attempting to renew auth token...</p>\r\n","import {Injectable} from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DeviceService {\r\n  private deviceType: 'desktop' | 'mobile' | 'tablet' = 'desktop';\r\n\r\n  sSODefault: boolean;\r\n\r\n  constructor() {\r\n    // if (navigator.userAgent.includes('Windows') || navigator.userAgent.includes('Linux')) {\r\n    //   this.deviceType = 'desktop';\r\n    // } else if (navigator.userAgent.includes('iPhone') || navigator.userAgent.includes('Android')) {\r\n    //   this.deviceType = 'mobile';\r\n    // } else if (navigator.userAgent.includes('iPad')) {\r\n    //   this.deviceType = 'tablet';\r\n    // }\r\n\r\n    if (localStorage.getItem(environment.storageVariableNamePrefix + 'useSSODefault') === null) {\r\n      this.setSSODefault(true);\r\n    }\r\n\r\n    this.sSODefault = Boolean(localStorage.getItem(environment.storageVariableNamePrefix + 'useSSODefault') === 'true');\r\n  }\r\n  public isDesktop(): boolean {\r\n    return this.deviceType === 'desktop';\r\n  }\r\n\r\n  public isMobile(): boolean {\r\n    return this.deviceType === 'mobile';\r\n  }\r\n\r\n  public isTablet(): boolean {\r\n    return this.deviceType === 'tablet';\r\n  }\r\n\r\n  public getDevice(): string {\r\n    return this.deviceType;\r\n  }\r\n\r\n  public isSSODefault(): boolean {\r\n    return this.sSODefault;\r\n  }\r\n\r\n  public setSSODefault(useSSODefault: boolean) {\r\n    localStorage.setItem(environment.storageVariableNamePrefix + 'useSSODefault', '' + useSSODefault);\r\n    this.sSODefault = useSSODefault;\r\n  }\r\n}\r\n","export const LOGIN_LOGO_SVG = `\r\n<svg width=\"130\" height=\"130\" version=\"1.1\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\r\n <metadata>\r\n  <rdf:RDF>\r\n   <cc:Work rdf:about=\"\">\r\n    <dc:format>image/svg+xml</dc:format>\r\n    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\r\n    <dc:title/>\r\n   </cc:Work>\r\n  </rdf:RDF>\r\n </metadata>\r\n <g>\r\n  <path d=\"m24 0-19.5 8.7273v13.091c0 12.109 8.32 23.433 19.5 26.182 11.18-2.7491 19.5-14.073 19.5-26.182v-13.091l-19.5-8.7273\" fill=\"#ab377a\"/>\r\n  <path d=\"m24.035 1.9592-17.944 8.0019v12.003c0 11.103 7.6559 21.485 17.944 24.006 0.06435-24.832 0.12725-26.405 0-44.01\" fill=\"#478f7c\" stroke-width=\"1.9971\"/>\r\n  <path d=\"m24.035 1.9592c0.0037 21.3-0.06986 28.38 0 44.01 10.288-2.5206 17.944-12.903 17.944-24.006v-12.003l-17.944-8.0019\" fill=\"#fff\"/>\r\n  <path d=\"m16.435 24.334c-0.04272-0.32274-0.06409-0.65623-0.06409-1.0112 0-0.34425 0.02145-0.6885 0.07477-1.0112l-2.1687-1.6997c-0.19229-0.15061-0.24571-0.44107-0.12818-0.65623l2.0512-3.5716c0.12818-0.23667 0.39527-0.31197 0.6303-0.23667l2.5448 0.9817c0.53416-0.4088 1.1004-0.75305 1.7307-1.0112l0.38459-2.7325c0.04274-0.25819 0.2564-0.44015 0.51279-0.44107l2.0088-0.0072c0.0208 10.961 0.0156 8.0679-1.1e-5 20.709l-2.0004 0.0041c-0.2564 5.32e-4 -0.47006-0.18288-0.5021-0.44107l-0.3846-2.7325c-0.63029-0.25818-1.2072-0.60244-1.7307-1.0112l-2.5533 1.0328c-0.23503 0.08607-0.5021 0-0.6303-0.23667l-2.0512-3.5716c-0.1282-0.23667-0.07477-0.50562 0.12818-0.65622zm7.5854 2.8786c-0.0017-2.4031 0.0035-5.8857 7.6e-5 -7.5499-0.25846 0-0.51054 0.02284-0.75395 0.06683-1.7487 0.31603-3.0497 1.7235-3.0497 3.5933 0 2.13 1.57 3.8046 3.6598 3.8813z\" fill=\"#fff\"/>\r\n  <path d=\"m31.606 24.334c0.04272-0.32274 0.0641-0.65623 0.0641-1.0112 0-0.34425-0.02145-0.6885-0.07477-1.0112l2.1687-1.6997c0.19229-0.15061 0.24571-0.44107 0.12818-0.65623l-2.0512-3.5716c-0.12818-0.23667-0.39528-0.31198-0.63031-0.23667l-2.5448 0.9817c-0.53416-0.4088-1.1004-0.75305-1.7307-1.0112l-0.38459-2.7325c-0.04274-0.25819-0.25639-0.44015-0.51279-0.44107l-2.0088-0.0072c-0.0208 10.961-0.0156 8.0679 1.1e-5 20.709l2.0004 0.0041c0.2564 5.32e-4 0.47006-0.18288 0.50211-0.44107l0.3846-2.7325c0.6303-0.25818 1.2072-0.60244 1.7307-1.0112l2.5533 1.0328c0.23503 0.08607 0.50211 0 0.6303-0.23668l2.0512-3.5715c0.1282-0.23667 0.07477-0.50561-0.12818-0.65622zm-7.5855 2.8786c0.0017-2.352-0.02036-5.9283 7.6e-5 -7.5499 0.25846 0 0.51054 0.02284 0.75396 0.06683 1.7487 0.31603 3.0497 1.7235 3.0497 3.5933 0 2.13-1.6885 3.8899-3.8037 3.8899z\" fill=\"#478f7c\" stroke-width=\"0\"/>\r\n </g>\r\n</svg>\r\n`;","import { MatButtonModule } from '@angular/material/button';\r\nimport { Component, OnInit, effect, inject, signal } from '@angular/core';\r\nimport { DeviceService } from '../../shared/device/device.service';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { LOGIN_LOGO_SVG } from './login-logo';\r\nimport { UfeEnvironmentStore } from '../../stores/ufe-environment.store';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@Component({\r\n  selector: 'ifx-ufe-login-type-selector',\r\n  templateUrl: './login-type-selector.component.html',\r\n  styleUrls: ['./login-type-selector.component.scss'],\r\n  imports: [MatProgressSpinnerModule, MatButtonModule]\r\n})\r\nexport class IfxUfeLoginTypeSelectorComponent implements OnInit {\r\n  private auth = inject(AuthenticationService);\r\n  private envStore: UfeEnvironmentStore = inject(UfeEnvironmentStore);\r\n  private deviceService = inject(DeviceService);\r\n  private sanitizer: DomSanitizer = inject(DomSanitizer);\r\n  public showSpinner = signal(false);\r\n  public loginLogo = signal(this.getLogo());\r\n  public ssoMessage = 'Login with SSO';\r\n  public credentialMessage = 'Login with User+Password';\r\n\r\n  isSSODefault = false;\r\n\r\n  constructor() {\r\n    this.isSSODefault = this.deviceService.isSSODefault();\r\n    effect(() => {\r\n      const lang = this.envStore.currentLanguage();\r\n      this.onLanguageToggle(lang);\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showSpinner.set(false);\r\n  }\r\n\r\n  loginKerberos(): void {\r\n    this.showSpinner.set(true);\r\n    // perform the login with the kerberos configuration id\r\n    this.auth.loginKerberos();\r\n  }\r\n\r\n  loginCredentials(): void {\r\n    this.showSpinner.set(true);\r\n    // perform the login with the kerberos configuration id\r\n    this.auth.loginCredentials();\r\n  }\r\n\r\n  private getLogo(): SafeHtml {\r\n    const rawSvg = LOGIN_LOGO_SVG;\r\n    return this.sanitizer.bypassSecurityTrustHtml(rawSvg);\r\n  }\r\n\r\n  private onLanguageToggle(language: string) {\r\n    if (language == 'EN') {\r\n      this.ssoMessage = 'Login with SSO';\r\n      this.credentialMessage = 'Login with User+Password';\r\n    }\r\n\r\n    if (language == 'DE') {\r\n      this.ssoMessage = ('Melden Sie sich mit SSO an');\r\n      this.credentialMessage = 'Melden Sie sich mit User+Passwort an';\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  @if (!showSpinner()) {\r\n    <div class=\"login-container\">\r\n      <div class=\"login-logo-container h-100 w-100\">\r\n        <div\r\n          class=\"login-logo\"\r\n          [innerHtml]=\"loginLogo()\"></div>\r\n        </div>\r\n        <div>\r\n          <section class=\"login-btn\">\r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              (click)=\"loginKerberos()\"\r\n              data-testid=\"loginSSO\">\r\n              {{ ssoMessage }}\r\n            </button>\r\n\r\n            <button\r\n              mat-flat-button\r\n              color=\"primary\"\r\n              (click)=\"loginCredentials()\"\r\n              data-testid=\"loginUserPwd\">\r\n              {{ credentialMessage }}\r\n            </button>\r\n          </section>\r\n        </div>\r\n    </div>\r\n  } @else {\r\n    <div class=\"w-100 h-100\">\r\n      <p class=\"flex-center\">\r\n        <mat-spinner></mat-spinner>\r\n      </p>\r\n    </div>\r\n  }\r\n</div>\r\n","import { Component, OnInit, AfterViewInit, inject } from '@angular/core';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { UfeEnvironmentStore } from '../../stores/ufe-environment.store';\r\nimport { IfxUfeLoggerService } from '../../shared/logging/ifx-ufe-logger.service';\r\nimport { IfxUfeLoginTypeSelectorComponent } from '../login-type-selector/login-type-selector.component';\r\n\r\n\r\n@Component({\r\n  selector: 'ifx-ufe-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css'],\r\n  imports: [IfxUfeLoginTypeSelectorComponent],\r\n})\r\nexport class LogoutComponent implements OnInit, AfterViewInit {\r\n  private auth = inject(AuthenticationService);\r\n  envStore = inject(UfeEnvironmentStore);\r\n\r\n  private loggr: IfxUfeLoggerService = inject(IfxUfeLoggerService);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.envStore.executionEnvironment() == null) {\r\n      this.loggr.warn('Environment not set in logout component!');\r\n      return;\r\n    }\r\n\r\n    if (this.envStore.isSelfHosted()) {\r\n      //we only call auth.logout in the self-hosted scenario In all other scenarios JWT management is handled by the\r\n      //enclosing environment (shell, native shell, native application etc.)\r\n      this.auth.logout();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    window.setTimeout(() => {\r\n      window.sessionStorage.clear();\r\n    }, 500);\r\n  }\r\n}\r\n","@if (this.envStore.isSelfHosted()) {\r\n  <ifx-ufe-login-type-selector></ifx-ufe-login-type-selector>\r\n} @else {\r\n  <span>Logging Out, Please Wait</span>\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ifx-ufe-unauthorized',\r\n  imports: [],\r\n  templateUrl: './ufe-unauthorized.component.html',\r\n  styleUrl: './ufe-unauthorized.component.scss',\r\n})\r\nexport class UfeUnauthorizedComponent {}\r\n","<div class=\"content\">\r\n  <div class=\"icon\">&#9940;</div>\r\n  <div class=\"text\">\r\n    <h1>Unauthorized</h1>\r\n    <h4>You do not have permission to access this page.</h4>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { MessageListenerDirective } from './directives/message-listener.directive';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { UfeHeaderComponent } from './components/ufe-header/ufe-header.component';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\r\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { fauxMatDialogRef } from './models/fauxMatDialogRef';\r\nimport { DialogDataPlaceholder } from './models/DialogDataPlaceholder';\r\nimport { NotificationComponent } from './components/notification/notification.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AuthConfigModule } from './subModules/auth.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SilentRefreshComponent } from './components/silent-refresh/silent-refresh.component';\r\nimport { LogoutComponent } from './components/logout/logout.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { UfeDialogComponent } from './components/ufe-dialog/ufe-dialog.component';\r\nimport { UfeSafeUrlPipe } from './pipes/ufe-safe-url/ufe-safe-url.pipe';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { UfeAuthComponent } from './components/ufe-auth/ufe-auth.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UfeUnauthorizedComponent } from './components/ufe-unauthorized/ufe-unauthorized.component';\r\nimport { IfxUfeLoginTypeSelectorComponent } from './components/login-type-selector/login-type-selector.component';\r\nimport { JwtCounterComponent } from \"./components/jwt-counter/jwt-counter.component\";\r\nimport { IfxUfeAuthRefreshComponent } from './components/ifx-ufe-auth-refresh/ifx-ufe-auth-refresh.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'silentRefresh', component: SilentRefreshComponent },\r\n  { path: 'logout', component: LogoutComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'auth-sel', component: IfxUfeLoginTypeSelectorComponent },\r\n  { path: 'unauthorized', component: UfeUnauthorizedComponent },\r\n];\r\n\r\n@NgModule({\r\n  exports: [MessageListenerDirective, UfeHeaderComponent, UfeAuthComponent, UfeSafeUrlPipe],\r\n  imports: [\r\n    CommonModule,\r\n    DragDropModule,\r\n    PortalModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n    MatSlideToggleModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatProgressSpinnerModule,\r\n    AuthConfigModule,\r\n    RouterModule.forChild(routes),\r\n    MatMenuModule,\r\n    MessageListenerDirective,\r\n    UfeHeaderComponent,\r\n    UfeAuthComponent,\r\n    NotificationComponent,\r\n    LoginComponent,\r\n    SilentRefreshComponent,\r\n    LogoutComponent,\r\n    UfeDialogComponent,\r\n    UfeSafeUrlPipe,\r\n    JwtCounterComponent\r\n  ],\r\n  providers: [\r\n    { provide: Window, useValue: window },\r\n    { provide: MatDialogRef, useClass: fauxMatDialogRef },\r\n    { provide: MAT_DIALOG_DATA, useClass: DialogDataPlaceholder },\r\n    provideHttpClient(withInterceptorsFromDi()),\r\n  ],\r\n})\r\nexport class IfxUfeModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StyleSheetAndLinkCaptureService {\r\n  constructor() {}\r\n\r\n  /**\r\n   * getStyleSheets finds all links where rel='stylesheet' (i.e. remote stylesheets) in this document, packages\r\n   * them into an array, and returns the array\r\n   * @param doc\r\n   */\r\n  public getStyleSheets(doc: Document): HTMLElement[] {\r\n    let output: HTMLElement[] = [];\r\n\r\n    doc.querySelectorAll('link').forEach(htmlElement => {\r\n      if (htmlElement.rel === 'stylesheet') {\r\n        let styleSheetElement = doc.createElement('link');\r\n        let absoluteUrl = new URL(htmlElement.href).href;\r\n        styleSheetElement.rel = 'stylesheet';\r\n        styleSheetElement.href = absoluteUrl;\r\n        output.push(styleSheetElement);\r\n      }\r\n    });\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * getLinks finds all link tags in this document, packages them into an array and returns the array\r\n   * @param doc\r\n   */\r\n  public getLinks(doc: Document): HTMLElement[] {\r\n    let output: HTMLElement[] = [];\r\n\r\n    doc.head.querySelectorAll('link').forEach(htmlLink => {\r\n      let headLink = doc.createElement('link');\r\n      headLink.href = new URL(htmlLink.href).href;\r\n      output.push(headLink);\r\n    });\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * getScripts finds all script tags in this document, packages them into an array and returns the array\r\n   * @param doc\r\n   */\r\n  public getScripts(doc: Document): HTMLElement[] {\r\n    let output: HTMLElement[] = [];\r\n\r\n    doc.head.querySelectorAll('script').forEach(script => {\r\n      let s = doc.createElement('script');\r\n      s.src = script.src;\r\n      output.push(s);\r\n    });\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * getStyleBlocks finds all stylesheet tags in this document, packages them into an array, and returns the array\r\n   * @param doc\r\n   */\r\n  public getStyleBlocks(doc: Document): HTMLElement[] {\r\n    let output: HTMLElement[] = [];\r\n\r\n    doc.head.querySelectorAll('style').forEach(style => {\r\n      let s = doc.createElement('style');\r\n      s.textContent = style.textContent;\r\n      output.push(s);\r\n    });\r\n    return output;\r\n  }\r\n}\r\n","import { Injectable, ApplicationRef, ComponentFactoryResolver, Injector, OnDestroy, inject } from '@angular/core';\r\nimport { ComponentPortal, ComponentType, DomPortalOutlet } from '@angular/cdk/portal';\r\nimport { StyleSheetAndLinkCaptureService } from './style-sheet-and-link-capture.service';\r\nimport { UfeCommand } from '../models/UfeCommand';\r\nimport { ShellCommunicatorService } from './shell-communicator.service';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { fauxMatDialogRef } from '../models/fauxMatDialogRef';\r\nimport { IfxDialogRef } from '../models/ifxDialogRef';\r\nimport { DialogDataPlaceholder } from '../models/DialogDataPlaceholder';\r\nimport { Subscription } from 'rxjs';\r\nimport { UfeEnvironmentStore } from '../stores/ufe-environment.store';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UfeDialogWindowService {\r\n  private componentFactoryResolver = inject(ComponentFactoryResolver);\r\n  private applicationRef = inject(ApplicationRef);\r\n  private injector = inject(Injector);\r\n  private slCapture = inject(StyleSheetAndLinkCaptureService);\r\n  private comm = inject(ShellCommunicatorService);\r\n  private mDialog = inject(MatDialog);\r\n  private envStore = inject(UfeEnvironmentStore);\r\n\r\n  private height: number = 400;\r\n  private width: number = 400;\r\n\r\n  private subscriptions: Subscription = new Subscription();\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * openDialog determines which execution environment this instance is running in (embedded, shell, or stand alone)\r\n   * and opens the appropriate dialog box for the environment whether a shell dialog or an external window.\r\n   */\r\n  public openDialog(component: ComponentType<any>, config?: MatDialogConfig): IfxDialogRef {\r\n    if (this.envStore.executionEnvironment() == 'EMBEDDED') {\r\n      //ToDo: clarify if it is obsolete\r\n      return this.createExternal(component, config);\r\n    } else {\r\n      return this.createShellDialog(component, config);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * createExternal() generates the external window the angular content will be projected into\r\n   */\r\n  private createExternal(component: ComponentType<any>, config: MatDialogConfig = {}): IfxDialogRef {\r\n    this.height = config.height == null ? 400 : parseInt(config.height);\r\n    this.width = config.width == null ? 400 : parseInt(config.width);\r\n\r\n    let externalWindow = window.open('', '', `left=300,top=300,scrollbars,width=${this.width},height=${this.height}`);\r\n    if (externalWindow == null) {\r\n      throw new Error('Could not open external window!');\r\n    }\r\n    this.attachCloseHandlerToExternal(externalWindow);\r\n\r\n    // create a PortalHost with the body of the new window document\r\n    const host = new DomPortalOutlet(\r\n      externalWindow!.document.body,\r\n      this.componentFactoryResolver,\r\n      this.applicationRef,\r\n      this.injector\r\n    );\r\n\r\n    /*Attach the portal. NOTE: the portal must be attached to the window before calling getStyleSheets().  Attaching the\r\n    portal after importing the styles will cause many of the styles to be missing the first time the window opens,\r\n    though it will work properly on subsequent openings.  */\r\n    let portal = new ComponentPortal(component);\r\n    let cRef = host.attach(portal);\r\n\r\n    let newFmdr = new fauxMatDialogRef();\r\n    newFmdr.windowRef = externalWindow;\r\n    newFmdr.componentInstance = cRef.instance;\r\n\r\n    let data: any = null;\r\n    if (config.data != null) {\r\n      data = config.data;\r\n    }\r\n\r\n    //find the MatDialogRef instance in this component and replace it with the new one\r\n    for (const prop in cRef.instance) {\r\n      if (cRef.instance[prop] instanceof fauxMatDialogRef) {\r\n        cRef.instance[prop] = newFmdr;\r\n      }\r\n\r\n      //find the data instance and replace it with the real data\r\n      if (cRef.instance[prop] instanceof DialogDataPlaceholder) {\r\n        cRef.instance[prop] = data;\r\n      }\r\n    }\r\n\r\n    //add the title to the window if one was provided\r\n    if (config.data != null && config.data.title != null) {\r\n      let domTitle = externalWindow.document.createElement('title');\r\n      // @ts-ignore\r\n      domTitle.text = config.data.title;\r\n      externalWindow.document.head.appendChild(domTitle);\r\n    }\r\n\r\n    this.getStyleSheets(externalWindow);\r\n\r\n    let msg = new UfeCommand(this.ufeName, 'OPEN_DIALOG', []);\r\n    this.comm.sendShellMessage(msg);\r\n\r\n    return newFmdr;\r\n  }\r\n\r\n  /**\r\n   * createShellDialog sends a request to the shell to allow a uFE dialog box, then renders the content contained\r\n   * within the template outlet\r\n   * @private\r\n   */\r\n  private createShellDialog(\r\n    component: ComponentType<any>,\r\n    config: MatDialogConfig = new MatDialogConfig()\r\n  ): IfxDialogRef {\r\n    let msg = new UfeCommand(this.ufeName, 'OPEN_DIALOG', []);\r\n    this.comm.sendShellMessage(msg);\r\n\r\n    config.disableClose = true;\r\n    const dRef = this.mDialog.open(component, config);\r\n\r\n    // this ensures the cleanup activities are performed.\r\n    // the cleanup task need to be done in the before closed event to prevent timing issues if another dialog is opened immediately\r\n    const beforeClosedSub = dRef.beforeClosed().subscribe(() => {\r\n      this.sendCloseDialogMessage();\r\n    });\r\n    this.subscriptions.add(beforeClosedSub);\r\n    return dRef;\r\n  }\r\n\r\n  /**\r\n   * getStyleSheets grabs all the style sheets, links and style blocks in the parent window for injection into an\r\n   * external popup window\r\n   * @param externalWindow Window reference: the window to inject the stylesheets and links into\r\n   * @private\r\n   */\r\n  private getStyleSheets(externalWindow: Window) {\r\n    //get stylesheets from parent window, nothing imports automatically\r\n    let sheets = this.slCapture.getStyleSheets(document);\r\n    sheets.forEach(sheet => {\r\n      externalWindow?.document.head.appendChild(sheet);\r\n    });\r\n\r\n    //get links from parent window\r\n    let links = this.slCapture.getLinks(document);\r\n    links.forEach(link => {\r\n      externalWindow?.document.head.appendChild(link);\r\n    });\r\n\r\n    //get scripts from parent window\r\n    let scripts = this.slCapture.getScripts(document);\r\n    scripts.forEach(script => {\r\n      externalWindow?.document.head.appendChild(script);\r\n    });\r\n\r\n    //get style blocks from parent window\r\n    let styleBlocks = this.slCapture.getStyleBlocks(document);\r\n    styleBlocks.forEach(block => {\r\n      externalWindow?.document.head.appendChild(block);\r\n    });\r\n\r\n    //these classes are required in the body element to work with the igx UI framework\r\n    externalWindow?.document.body.classList.add('igx-typography');\r\n    externalWindow?.document.body.classList.add('mat-typography');\r\n  }\r\n\r\n  /**\r\n   * attachCloseHandlerToExternal ensures the required cleanup activities are performed when an external dialog box is\r\n   * closed, even if it is not closed through the dialog reference (i.e. closed through window controls).\r\n   * @param win Window: a reference to the window to attach the handler to\r\n   * @private\r\n   */\r\n  private attachCloseHandlerToExternal(win: Window) {\r\n    // Ensure the UI blocker is removed and showWindowContent is set to false when the window is closed.\r\n    win.addEventListener('beforeunload', () => {\r\n      this.sendCloseDialogMessage();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * sendCloseDialogMessage sends a CLOSE_DIALOG UfeCommand to the shell\r\n   * @private\r\n   */\r\n  private sendCloseDialogMessage() {\r\n    //send the message to the MessageListener to remove the modal dialog UI blocker\r\n    let msg = new UfeCommand(this.ufeName, 'CLOSE_DIALOG', []);\r\n    this.comm.sendShellMessage(msg);\r\n  }\r\n\r\n  private get ufeName(): string {\r\n    //TodDo: only the instanceName identify the correct ufe instacne. Have to be refactored later.\r\n    return this.envStore.ufeName() ?? '';\r\n  }\r\n}\r\n","/**\r\n * Trim char in string\r\n */\r\nexport function trimChar(value: string, charToRemove: string): string {\r\n  while (value.charAt(0) === charToRemove) {\r\n    value = value.substring(1);\r\n  }\r\n\r\n  while (value.charAt(value.length - 1) === charToRemove) {\r\n    value = value.substring(0, value.length - 1);\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nexport function isNullOrUndefinedOrEmpty(value: string | undefined | null): boolean {\r\n  return value == null || value.trim() === '';\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { AuthenticatedUserDetailsStore } from '../stores/authentication-details.store';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n/**\r\n * Service for retrieving authenticated user information.\r\n */\r\nexport class AuthUserInformationService {\r\n  private authStateStore = inject(AuthenticatedUserDetailsStore);\r\n\r\n  /**\r\n   * Retrieves the host profile name from the auth state store.\r\n   * It is only avaiblable for FAB PCs and equals to undefined otherwise\r\n   * @returns The host profile name.\r\n   */\r\n  public getHostProfileName = this.authStateStore.hostProfileName;\r\n\r\n  /**\r\n   * Retrieves the display name of the authenticated user.\r\n   * @returns The display name of the authenticated user.\r\n   */\r\n  public getDisplayName = this.authStateStore.displayName;\r\n\r\n  /**\r\n   * Retrieves the department information of the authenticated user..\r\n   * @returns The department information.\r\n   */\r\n  public getDepartment = this.authStateStore.department;\r\n\r\n  /**\r\n   * Retrieves the first name of the authenticated user.\r\n   * @returns The first name of the authenticated user.\r\n   */\r\n  public getFirstName = this.authStateStore.firstName;\r\n\r\n  /**\r\n   * Retrieves the last name of the authenticated user.\r\n   * @returns The last name of the authenticated user.\r\n   */\r\n  public getLastName = this.authStateStore.lastName;\r\n\r\n  /**\r\n   * Gets the AD Account Name (Active Directory sam account name) of the authenticated user.\r\n   */\r\n  public getAccountName = this.authStateStore.accountName;\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { UfeEnvironmentStore } from '../stores/ufe-environment.store';\r\n\r\n/**\r\n * The public ufe environment service which allows to read and modify all attributes of an ufe which can be influenced by the using application directly.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UfeEnvironmentService {\r\n  private environmentStateStore = inject(UfeEnvironmentStore);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {}\r\n\r\n  public getUfeInstanceName() {\r\n    return this.environmentStateStore.ufeInstanceName();\r\n  }\r\n\r\n  public getWrlAppName(): string | undefined {\r\n    return this.getName(0);\r\n  }\r\n\r\n  public getWrlResourceName(): string | undefined {\r\n    return this.getName(1);\r\n  }\r\n\r\n  /*\r\n  public getUniqueInstanceId(): string | undefined {\r\n    return undefined;\r\n  } */\r\n\r\n  private getName(index: number): string | undefined {\r\n    const appName = this.getUfeInstanceName();\r\n    if (appName) {\r\n      // temporary solution until we refactor this to dedicated fields.\r\n      // the WRL does not allow _ therfore we can use this as a defined delimiter\r\n      // backward compatibility\r\n      if (appName.indexOf('_') === -1) {\r\n        if (index === 0) {\r\n          return appName;\r\n        } else {\r\n          return undefined;\r\n        }\r\n      }\r\n      const split = appName?.split('_');\r\n      return split[index];\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n","import { computed, inject, Injectable } from '@angular/core';\r\nimport { ShellStateStore } from '../../shared/front-end-discovery/stores/shell-state.store';\r\nimport { UfeEnvironmentStore } from '../../stores/ufe-environment.store';\r\nimport { UfeEnvironmentService } from '../../services/ufe-environment.service';\r\nimport { toObservable } from '@angular/core/rxjs-interop';\r\n\r\n@Injectable()\r\nexport abstract class AbstractShellView {\r\n  protected shellStateStore = inject(ShellStateStore);\r\n  protected envStore = inject(UfeEnvironmentStore);\r\n\r\n  /**\r\n   * Emits when an app is deselected\r\n   * @public\r\n   */\r\n  public appDeSelected$ = this.shellStateStore.appDeselected$;\r\n\r\n  /**\r\n   * Emits when an app is selected\r\n   * @public\r\n   */\r\n  public appSelected$ = this.shellStateStore.appSelected$;\r\n\r\n  /**\r\n   * The current environment for the shell\r\n   * @protected\r\n   */\r\n  protected shellEnvironment = inject(UfeEnvironmentService);\r\n\r\n  /**\r\n   * Defines the current display language for the UI.  Only 'EN' or 'DE' are valid values\r\n   * @public\r\n   */\r\n  public currentLanguage = computed(() => this.envStore.currentLanguage());\r\n  public currentLanguage$ = toObservable(this.envStore.currentLanguage);\r\n\r\n  /**\r\n   * sets the current language for the UI\r\n   * @param layout\r\n   */\r\n  public setLayout(layout: string): void {\r\n    this.shellStateStore.setLayout(layout);\r\n  }\r\n\r\n  /**\r\n   * List of all possible apps as returned by the FrontEndDiscoveryService\r\n   * @public\r\n   */\r\n  public appList = computed(() => this.shellStateStore.appList());\r\n\r\n  /**\r\n   * Observable of the app list\r\n   * @protected\r\n   */\r\n  public appList$ = toObservable(this.shellStateStore.appList);\r\n\r\n  /**\r\n   * List of all apps currently instantiated within this shell view\r\n   * @public\r\n   */\r\n  public activeApps = computed(() => this.shellStateStore.activeApps());\r\n\r\n  /**\r\n   * Observable of active apps\r\n   * @public\r\n   */\r\n  public activeApps$ = toObservable(this.shellStateStore.activeApps);\r\n\r\n  /**\r\n   * Used to control which layout is displayed\r\n   * @public\r\n   */\r\n  public layout = computed(() => this.shellStateStore.layout());\r\n\r\n  /**\r\n   * Observable of the layout\r\n   * @public\r\n   */\r\n  public layout$ = toObservable(this.shellStateStore.layout);\r\n}\r\n","import { Injectable, OnDestroy, inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppDescription } from '../../models/AppDescription';\r\nimport { SubscriberData } from '../../models/SubscriberData';\r\nimport { FrontEndDiscoveryService } from '../../shared/front-end-discovery/front-end-discovery.service';\r\nimport { ShellCommunicatorService } from '../../services/shell-communicator.service';\r\nimport { DataCommunicationService } from '../../services/data-communication.service';\r\nimport { UfeCommand } from '../../models/UfeCommand';\r\nimport { WebResourceService } from '../../shared/web-resource-locator/services/web-resource.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IfxUfeLoggerService } from '../../shared/logging/ifx-ufe-logger.service';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { WrlStateStore } from '../../shared/web-resource-locator/stores/wrl-state.store';\r\nimport { isNullOrUndefinedOrEmpty } from '../../shared/helpers/string.helper';\r\nimport { isUfeCommand } from '../../shared/helpers/ifx-ufe-type.guards';\r\nimport { AuthUserInformationService } from '../../services/auth-user-information.service';\r\nimport { LanguageType } from '../../models/ufe-environment.interface';\r\nimport { AbstractShellView } from '../abstract-shell-view/abstract-shell-view';\r\nimport { AuthStatus } from '../../models/AuthStatus';\r\n@Injectable()\r\nexport abstract class AbstractShell extends AbstractShellView implements OnDestroy {\r\n  private auth: AuthenticationService = inject(AuthenticationService);\r\n  // private envStore: UfeEnvironmentStore = inject(UfeEnvironmentStore);\r\n  // private shellStateStore = inject(ShellStateStore);\r\n  private wlrStateStore = inject(WrlStateStore);\r\n  private isLogoutTriggeredByBeforeUnload = false;\r\n\r\n\r\n  /**\r\n   * Data on the currently logged in subscriber\r\n   * @public\r\n   */\r\n  public subscriberData: SubscriberData = new SubscriberData();\r\n\r\n  /**\r\n   * the name that should be displayed for the currently logged in user\r\n   *  @public\r\n   */\r\n  public displayName = '';\r\n  public subscriberName = '';\r\n  public userIconUrl: URL | null = null;\r\n\r\n  /**\r\n   * used to collect all subscriptions and unsubscribe on destroy\r\n   * @protected\r\n   */\r\n  protected subs: Subscription = new Subscription();\r\n\r\n  /**\r\n   *  Service for retrieving authenticated user information.\r\n   */\r\n  protected authUserInfo = inject(AuthUserInformationService);\r\n\r\n  /**\r\n   * Logger service for logging messages\r\n   * @protected\r\n   */\r\n  protected logger: IfxUfeLoggerService = inject(IfxUfeLoggerService);\r\n\r\n  /**\r\n   * The default layout for the shell\r\n   * @protected\r\n   */\r\n  protected abstract get defaultLayout(): string;\r\n\r\n  constructor(\r\n    protected discoverySvc: FrontEndDiscoveryService,\r\n    protected feCom: ShellCommunicatorService,\r\n    protected data: DataCommunicationService,\r\n    protected router: Router,\r\n    protected wrlSvc: WebResourceService,\r\n    protected dialog: MatDialog\r\n  ) {\r\n    super();\r\n    this.envStore.setIsShellApp(true);\r\n    this.shellStateStore.setScenariosLoaded(false);\r\n    this.initShell();\r\n  }\r\n\r\n  private addEventListener() {\r\n    /*\r\n     *   We cannot use @HostListener because this need to be used in a directive or components and this is a service\r\n     *   https://stackoverflow.com/questions/39592972/is-it-possible-to-use-hostlistener-in-a-service-or-how-to-use-dom-events-in-an\r\n     */\r\n    window.addEventListener('beforeunload', () => {\r\n      if (!this.auth.isAuthInProgress()) {\r\n        this.auth.logout();\r\n        this.isLogoutTriggeredByBeforeUnload = true;\r\n        this.onLogout();\r\n      } else {\r\n        this.auth.invalidateTokens();\r\n      }\r\n    });\r\n  }\r\n\r\n  protected initShell() {\r\n    this.addEventListener();\r\n    this.subscribeToAuthChangesForGettingUfeApps();\r\n    this.subscribeToCommands();\r\n    this.subscribeToSubscriberData();\r\n    this.initializeLayout();\r\n  }\r\n\r\n  private subscribeToAuthChangesForGettingUfeApps() {\r\n    const authSub = this.wlrStateStore.authenticatedUserId$.pipe().subscribe(authenticatedUserId => {\r\n      if (!isNullOrUndefinedOrEmpty(authenticatedUserId)) {\r\n        this.discoverySvc.getAppsAsync().then(() => {\r\n          if (!this.shellStateStore.scenariosLoaded()) {\r\n            this.loadAllScenarios();\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.subs.add(authSub);\r\n  }\r\n\r\n  private subscribeToCommands() {\r\n    const commandSub = this.data.ufeCommands().subscribe((cmd: UfeCommand) => {\r\n      this.onMessage(cmd);\r\n    });\r\n    this.subs.add(commandSub);\r\n  }\r\n\r\n  private subscribeToSubscriberData() {\r\n    const subscriberSub = this.data.subscriberData$.subscribe(dat => {\r\n      this.subscriberData = dat;\r\n      this.userIconUrl = this.createIconUrl();\r\n\r\n      if (this.subscriberData.credentials.loginStatus === true) {\r\n        this.displayName = this.subscriberData.credentials.userName;\r\n        this.subscriberName = this.subscriberData.credentials.subscriberName;\r\n      } else if (this.subscriberData.kerberos.loginStatus === true) {\r\n        this.displayName = this.subscriberData.kerberos.userName;\r\n        this.subscriberName = this.subscriberData.kerberos.subscriberName;\r\n      }\r\n    });\r\n    this.subs.add(subscriberSub);\r\n  }\r\n\r\n  private initializeLayout() {\r\n    const shellLayout = this.shellStateStore.layout();\r\n    if (!shellLayout) {\r\n      this.shellStateStore.setLayout(this.defaultLayout);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n   /**\r\n   *  The current authentication status of the user\r\n   * @public\r\n   */\r\n   public get isAuthenticated(): AuthStatus {\r\n    return this.auth.currentAuthToken();\r\n  }\r\n\r\n  /**\r\n   * onLanguageToggle handles updating all instantiated uFEs when the language setting is changed within the shell\r\n   */\r\n  public onLanguageToggle(newLanguage: LanguageType): void {\r\n    this.envStore.setCurrentLanguage(newLanguage);\r\n    this.shellStateStore.activeApps().forEach(app => {\r\n      this.sendLanguageUpdate(app);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * sendChildMessage sends a UfeCommand to the passed App.  Note the app must be instantiated within the shell\r\n   * for the message to be sent\r\n   * @param message UfeCommand\r\n   * @param app AppDescription\r\n   */\r\n  protected sendChildMessage(message: UfeCommand, app: AppDescription) {\r\n    this.feCom.sendChildMessage(message, app);\r\n  }\r\n\r\n  /**\r\n   * onMessage responds to UfeCommands from instantiated Micro Front Ends.\r\n   * @param msg UfeCommand\r\n   */\r\n  public async onMessage(msg: UfeCommand): Promise<void> {\r\n    if (!isUfeCommand(msg)) return;\r\n    this.logger.debug('+++SHELL+++ Received Message ' + msg.command, msg.sender, isUfeCommand(msg), msg);\r\n    switch (msg.command) {\r\n      case 'NOTIFICATION':\r\n        this.openNotification(msg);\r\n        break;\r\n\r\n      case 'OPEN_DIALOG':\r\n        this.maximizeUfe(this.getRequestingUfe(msg));\r\n        break;\r\n\r\n      case 'CLOSE_DIALOG':\r\n        this.minimizeUfe(this.getRequestingUfe(msg));\r\n        break;\r\n\r\n      case 'NOTIFICATION_CLOSE':\r\n        this.openNotification(msg);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onLayoutChange responds to user input to change the layout.  The new layout is recorded in session storage and\r\n   * pushed to subscribers of this.layout.\r\n   * @param layout\r\n   */\r\n  public onLayoutChange(layout: string): void {\r\n    this.shellStateStore.setLayout(layout);\r\n  }\r\n\r\n  public onLogout(): void {\r\n    this.feCom.sendWarningNotification('Logging Out, Please Wait');\r\n\r\n    this.shellStateStore.setScenariosLoaded(false);\r\n\r\n    this.activeApps().forEach(app => {\r\n      try {\r\n        this.closeUfeApp(app);\r\n      } catch (error) {\r\n        this.logger.error('Error during logout', error, app);\r\n      }\r\n    });\r\n\r\n    if (this.isLogoutTriggeredByBeforeUnload) {\r\n      window.sessionStorage.clear();\r\n    } else {\r\n      window.setTimeout(() => {\r\n        this.feCom.closeOpenNotification();\r\n        this.shellStateStore.setActiveApps([]);\r\n        this.router.navigateByUrl('/logout');\r\n      }, 700);\r\n    }\r\n  }\r\n\r\n  private closeUfeApp(app: AppDescription) {\r\n    const msg = new UfeCommand('SHELL', 'LOGOUT', []);\r\n\r\n    this.logger.info('Sending LOGOUT to ' + app.combinedName, !!app.windowReference);\r\n\r\n    this.feCom.sendChildMessage(msg, app);\r\n    // close the window if it is a dialog-browser child after logout\r\n    app.windowReference?.ref?.close();\r\n  }\r\n\r\n  /**\r\n   * maximizeUfe expands this uFE to cover the full screen, so it can display a modal dialog box\r\n   * @param app AppDescription: The uFE to be maximized\r\n   * @private\r\n   */\r\n  private maximizeUfe(app: AppDescription) {\r\n    const appId = app.combinedName + '.container';\r\n    const element = document.getElementById(appId);\r\n    if (element == null) {\r\n      this.logger.warn('Could not find element with id ' + appId);\r\n      return;\r\n    }\r\n\r\n    element.classList.add('maximized', 'maximized-container');\r\n    const msg = new UfeCommand('SHELL', 'OPEN_DIALOG', []);\r\n    this.sendChildMessage(msg, app);\r\n  }\r\n\r\n  /**\r\n   * minimizeUfe returns a previously maximized uFE (see maximizeUfe) to it's normal state\r\n   * @param app AppDescription: the uFE to be minimized\r\n   * @private\r\n   */\r\n  private minimizeUfe(app: AppDescription) {\r\n    const appId = app.combinedName + '.container';\r\n    const element = document.getElementById(appId);\r\n    if (element == null) {\r\n      this.logger.warn('Could not find element with id ' + appId);\r\n      return;\r\n    }\r\n\r\n    element.classList.remove('maximized', 'maximized-container');\r\n    const msg = new UfeCommand('SHELL', 'CLOSE_DIALOG', []);\r\n    this.sendChildMessage(msg, app);\r\n  }\r\n\r\n  /**\r\n   * sendLanguageUpdate is a helper function that sends a UfeCommand to this app informing it of which laguage to use\r\n   * Necessary as language notifications occur in different parts of the code.\r\n   * @param app\r\n   * @private\r\n   */\r\n  protected sendLanguageUpdate(app: AppDescription) {\r\n    const languageNotification = new UfeCommand('shell', 'LANGUAGE_TOGGLE', [this.currentLanguage]);\r\n    this.sendChildMessage(languageNotification, app);\r\n  }\r\n\r\n  /**\r\n   * getRequestingUfe is a helper function that will return the AppDescription of a uFE that sent this UfeCommand\r\n   * @param msg UfeCommand\r\n   * @private\r\n   */\r\n  protected getRequestingUfe(msg: UfeCommand): AppDescription {\r\n    return this.shellStateStore.getUfeApp(msg.sender);\r\n  }\r\n\r\n  /**\r\n   * getTargetUfe takes a UfeCommand of the type OPEN_UFE and returns an AppDescription of the target app in parmas[0]\r\n   * @param msg UfeMessage\r\n   * @private\r\n   */\r\n  protected getTargetUfe(msg: UfeCommand): AppDescription {\r\n    return this.shellStateStore.getUfeApp(msg.params[0]);\r\n  }\r\n\r\n  /**\r\n   * OpenNotification\r\n   * @param msg UfeMessage where command = 'NOTIFICATION', params[0] = text of notification and params[1] = notification style class\r\n   * @private\r\n   */\r\n  private openNotification(msg: UfeCommand) {\r\n    //by changing the sender to SELF and resending the command the\r\n    // ufe Framework will open the notification in this app (i.e. the Shell)\r\n    msg.sender = 'SELF';\r\n    this.feCom.sendShellMessage(msg);\r\n  }\r\n\r\n  /**\r\n   * loadAllScenarios loads all ufe appropriate to this shell\r\n   * @private\r\n   */\r\n  protected loadAllScenarios() {\r\n    this.shellStateStore.setScenariosLoaded(true);\r\n  }\r\n\r\n  protected createIconUrl(): URL {\r\n    const userName =\r\n      this.subscriberData.credentials.subscriberName == ''\r\n        ? this.subscriberData.kerberos.subscriberName\r\n        : this.subscriberData.credentials.subscriberName;\r\n    const stringUrl = 'https://profilepictures.infineon.com/api/profilepicture/' + userName + '/s';\r\n    return new URL(stringUrl);\r\n  }\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UrlCaptureService } from '../../../services/url-capture.service';\r\nimport { UfeEnvironmentStore } from '../../../stores/ufe-environment.store';\r\n\r\n/**\r\n * Service to redirect routes\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthRedirectService {\r\n  private readonly router = inject(Router);\r\n  private readonly urlCaptureService = inject(UrlCaptureService);\r\n\r\n  /** Inserted by Angular inject() migration for backwards compatibility */\r\n  constructor(...args: unknown[]);\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * setCurrentRouteAsRedirectUri\r\n   */\r\n  setCurrentRouteAsRedirectUri(): void {\r\n    const currentRoute = this.router.getCurrentNavigation()?.extractedUrl.toString().substring(1) ?? '';\r\n    this.urlCaptureService.storeUrl(currentRoute);\r\n  }\r\n\r\n  /**\r\n   * redirectToLogin\r\n   */\r\n  redirectToLogin(): void {\r\n    this.router.navigateByUrl('');\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthenticationService } from '../../../services/authentication.service';\r\nimport { AuthRedirectService } from '../services/auth-redirect.service';\r\nimport { IfxUfeLoggerService } from '../../logging/ifx-ufe-logger.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IfxUfeAuthGuard {\r\n  private readonly authService: AuthenticationService = inject(AuthenticationService);\r\n  private readonly authRedirectService: AuthRedirectService = inject(AuthRedirectService);\r\n  protected logger = inject(IfxUfeLoggerService);\r\n  public activeConfigId = 'kerberos';\r\n\r\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\r\n    if (this.authService.isUserAuthenticated) {\r\n      this.activeConfigId = this.authService.activeConfigId ?? 'kerberos';\r\n      return Promise.resolve(true);\r\n    } else {\r\n      this.authRedirectService.setCurrentRouteAsRedirectUri();\r\n      this.authRedirectService.redirectToLogin();\r\n      return Promise.resolve(false);\r\n    }\r\n  }\r\n}\r\n","import { inject, Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { IfxClaimsService } from 'angular-isecure-authorization';\r\nimport { IfxUfeAuthGuard } from './ifx-ufe-auth.guard';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IfxUfeClaimsAuthGuard extends IfxUfeAuthGuard {\r\n  private readonly claimService: IfxClaimsService = inject(IfxClaimsService);\r\n\r\n  override async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\r\n    let canActivate = false;\r\n\r\n    try {\r\n      canActivate = await super.canActivate(route, state);\r\n    } catch (error) {\r\n      this.logger.error('Error while checking authentication', error);\r\n      return false;\r\n    }\r\n\r\n    if (!canActivate) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      return await this.claimService.hasClaimsForGuard(route, state);\r\n    } catch (error) {\r\n      this.logger.error('Error while checking claims', error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Component, inject, signal } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { filter } from 'rxjs';\r\nimport { CommandObserverService } from '../../shared/command-observer/command-observer.service';\r\nimport { UfeCommandObserverItem } from '../../shared/command-observer/command-observer.model';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'ifx-ufe-show-command-messages',\r\n  imports: [MatTableModule, MatButtonModule, MatSortModule, MatPaginatorModule],\r\n  templateUrl: './show-command-messages.component.html',\r\n  styleUrl: './show-command-messages.component.scss',\r\n})\r\nexport class ShowCommandMessagesComponent {\r\n  private commandObserver: CommandObserverService = inject(CommandObserverService);\r\n\r\n  public displayedMessageColumns: string[] = ['type', 'sender', 'command', 'params'];\r\n\r\n  constructor() {\r\n    this.commandObserver\r\n      .watch$()\r\n      .pipe(\r\n        takeUntilDestroyed(),\r\n        filter(cmd => !!cmd.command)\r\n      )\r\n      .subscribe(command => {\r\n        this.messages.update(messages => [...messages, command as UfeCommandObserverItem]);\r\n      });\r\n  }\r\n\r\n  messages = signal(new Array<UfeCommandObserverItem>());\r\n  showCommandMessages = signal(false);\r\n\r\n  public getJsonValue(value: any[]): string {\r\n    return JSON.stringify(value);\r\n  }\r\n\r\n  public onToggleShowMessages(): void {\r\n    this.showCommandMessages.update(show => !show);\r\n  }\r\n}\r\n","@if (showCommandMessages()) {\r\n  <button\r\n    (click)=\"onToggleShowMessages()\"\r\n    mat-stroked-button\r\n    color=\"primary\">\r\n    Hide uFE Messages\r\n  </button>\r\n  <table\r\n    mat-table\r\n    matSort\r\n    matSortActive=\"type\"\r\n    matSortDisableClear\r\n    matSortDirection=\"desc\"\r\n    [dataSource]=\"messages()\">\r\n    <!--- Note that these columns can be defined in any order.\r\n       The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n    <ng-container matColumnDef=\"type\">\r\n      <th\r\n        mat-header-cell\r\n        *matHeaderCellDef>\r\n        Type\r\n      </th>\r\n      <td\r\n        mat-cell\r\n        *matCellDef=\"let element\">\r\n        {{ element.type }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"sender\">\r\n      <th\r\n        mat-header-cell\r\n        *matHeaderCellDef>\r\n        Sender\r\n      </th>\r\n      <td\r\n        mat-cell\r\n        *matCellDef=\"let element\">\r\n        {{ element.sender }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"command\">\r\n      <th\r\n        mat-header-cell\r\n        *matHeaderCellDef>\r\n        Command\r\n      </th>\r\n      <td\r\n        mat-cell\r\n        *matCellDef=\"let element\">\r\n        {{ element.command }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"params\">\r\n      <th\r\n        mat-header-cell\r\n        *matHeaderCellDef>\r\n        Params\r\n      </th>\r\n      <td\r\n        mat-cell\r\n        *matCellDef=\"let element\">\r\n        {{ getJsonValue(element.params) }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr\r\n      mat-header-row\r\n      *matHeaderRowDef=\"displayedMessageColumns\"></tr>\r\n    <tr\r\n      mat-row\r\n      *matRowDef=\"let row; columns: displayedMessageColumns\"></tr>\r\n  </table>\r\n} @else {\r\n  <button\r\n    (click)=\"onToggleShowMessages()\"\r\n    mat-stroked-button\r\n    color=\"primary\">\r\n    Show uFE Messages\r\n  </button>\r\n}\r\n","/*\r\n * Public API Surface of ifx-ufe\r\n */\r\n\r\nexport * from './lib/ifx-ufe.module';\r\nexport * from './lib/models/AppDescription';\r\nexport * from './lib/models/UfeCommand';\r\nexport * from './lib/shared/web-resource-locator/models/wrl-command-argument';\r\nexport * from './lib/shared/web-resource-locator/models/wrl-config';\r\nexport * from './lib/models/ifxDialogRef';\r\nexport * from './lib/models/SubscriberData';\r\nexport * from './lib/models/AuthStatus';\r\nexport * from './lib/models/AuthMode.enum';\r\nexport * from './lib/models/AuthToken';\r\nexport * from './lib/models/WindowRefTuple';\r\nexport * from './lib/models/AppLink';\r\nexport * from './lib/models/helpItem';\r\nexport { LanguageType } from './lib/models/ufe-environment.interface';\r\nexport * from './lib/services/shell-communicator.service';\r\nexport * from './lib/services/style-sheet-and-link-capture.service';\r\nexport * from './lib/shared/front-end-discovery/front-end-discovery.service';\r\nexport * from './lib/services/ufe-dialog-window.service';\r\nexport * from './lib/services/data-communication.service';\r\nexport * from './lib/services/url-capture.service';\r\nexport * from './lib/directives/message-listener.directive';\r\nexport * from './lib/components/ufe-auth/ufe-auth.component';\r\nexport * from './lib/components/ufe-header/ufe-header.component';\r\nexport * from './lib/components/login/login.component';\r\nexport * from './lib/components/logout/logout.component';\r\nexport * from './lib/components/ufe-unauthorized/ufe-unauthorized.component';\r\nexport * from './lib/shared/web-resource-locator/services/web-resource.service';\r\nexport * from './lib/components/abstract-shell/abstract-shell';\r\nexport * from './lib/services/ufe-environment.service';\r\nexport * from './lib/shared/logging/ifx-ufe-logger.service';\r\nexport * from './lib/services/auth-user-information.service';\r\nexport * from './lib/shared/logging/ifx-ufe-console-logger';\r\nexport * from './lib/shared/logging/ifx-ufe-logger.interface';\r\nexport * from './lib/shared/logging/logging-config.interface';\r\nexport * from './lib/shared/auth/guards/ifx-ufe-auth.guard';\r\nexport * from './lib/shared/auth/guards/ifx-ufe-claims-auth.guard';\r\nexport * from './lib/pipes/ufe-safe-url/ufe-safe-url.pipe';\r\nexport * from './lib/components/abstract-shell-view/abstract-shell-view';\r\nexport * from './lib/components/show-command-messages/show-command-messages.component';\r\nexport * from './lib/services/auth-user-information.service';\r\nexport * from './lib/components/jwt-counter/jwt-counter.component';\r\nexport * from './lib/components/ifx-ufe-auth-refresh/ifx-ufe-auth-refresh.component';\r\nexport { environment as UFE_ENVIRONMENT } from './environments/environment';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2","routes","i1.FrontEndDiscoveryService","i2.ShellCommunicatorService","i3.DataCommunicationService","i4","i5.WebResourceService","i6","i3"],"mappings":"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"}